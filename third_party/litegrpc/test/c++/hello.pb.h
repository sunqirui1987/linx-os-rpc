/* Automatically generated nanopb header */
/* Generated by nanopb-1.0.0-dev */

#ifndef PB_HELLO_HELLO_PB_H_INCLUDED
#define PB_HELLO_HELLO_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
/* Hello请求消息 */
typedef struct _hello_HelloRequest {
    char name[32];
    char message[128];
} hello_HelloRequest;

/* Hello响应消息 */
typedef struct _hello_HelloResponse {
    char reply[256];
    int32_t status;
} hello_HelloResponse;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define hello_HelloRequest_init_default          {"", ""}
#define hello_HelloResponse_init_default         {"", 0}
#define hello_HelloRequest_init_zero             {"", ""}
#define hello_HelloResponse_init_zero            {"", 0}

/* Field tags (for use in manual encoding/decoding) */
#define hello_HelloRequest_name_tag              1
#define hello_HelloRequest_message_tag           2
#define hello_HelloResponse_reply_tag            1
#define hello_HelloResponse_status_tag           2

/* Struct field encoding specification for nanopb */
#define hello_HelloRequest_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, STRING,   name,              1) \
X(a, STATIC,   SINGULAR, STRING,   message,           2)
#define hello_HelloRequest_CALLBACK NULL
#define hello_HelloRequest_DEFAULT NULL

#define hello_HelloResponse_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, STRING,   reply,             1) \
X(a, STATIC,   SINGULAR, INT32,    status,            2)
#define hello_HelloResponse_CALLBACK NULL
#define hello_HelloResponse_DEFAULT NULL

extern const pb_msgdesc_t hello_HelloRequest_msg;
extern const pb_msgdesc_t hello_HelloResponse_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define hello_HelloRequest_fields &hello_HelloRequest_msg
#define hello_HelloResponse_fields &hello_HelloResponse_msg

/* Maximum encoded size of messages (where known) */
#define HELLO_HELLO_PB_H_MAX_SIZE                hello_HelloResponse_size
#define hello_HelloRequest_size                  163
#define hello_HelloResponse_size                 269

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
