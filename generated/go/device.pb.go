// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v6.32.1
// source: device.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 通用响应状态
type ResponseStatus struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	ErrorCode     int32                  `protobuf:"varint,3,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ResponseStatus) Reset() {
	*x = ResponseStatus{}
	mi := &file_device_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResponseStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseStatus) ProtoMessage() {}

func (x *ResponseStatus) ProtoReflect() protoreflect.Message {
	mi := &file_device_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseStatus.ProtoReflect.Descriptor instead.
func (*ResponseStatus) Descriptor() ([]byte, []int) {
	return file_device_proto_rawDescGZIP(), []int{0}
}

func (x *ResponseStatus) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ResponseStatus) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ResponseStatus) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

// 设备信息
type DeviceInfo struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	DeviceId        string                 `protobuf:"bytes,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	DeviceName      string                 `protobuf:"bytes,2,opt,name=device_name,json=deviceName,proto3" json:"device_name,omitempty"`
	DeviceType      string                 `protobuf:"bytes,3,opt,name=device_type,json=deviceType,proto3" json:"device_type,omitempty"`
	FirmwareVersion string                 `protobuf:"bytes,4,opt,name=firmware_version,json=firmwareVersion,proto3" json:"firmware_version,omitempty"`
	IpAddress       string                 `protobuf:"bytes,5,opt,name=ip_address,json=ipAddress,proto3" json:"ip_address,omitempty"`
	Port            int32                  `protobuf:"varint,6,opt,name=port,proto3" json:"port,omitempty"`
	Capabilities    map[string]string      `protobuf:"bytes,7,rep,name=capabilities,proto3" json:"capabilities,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	LastHeartbeat   int64                  `protobuf:"varint,8,opt,name=last_heartbeat,json=lastHeartbeat,proto3" json:"last_heartbeat,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *DeviceInfo) Reset() {
	*x = DeviceInfo{}
	mi := &file_device_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeviceInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceInfo) ProtoMessage() {}

func (x *DeviceInfo) ProtoReflect() protoreflect.Message {
	mi := &file_device_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceInfo.ProtoReflect.Descriptor instead.
func (*DeviceInfo) Descriptor() ([]byte, []int) {
	return file_device_proto_rawDescGZIP(), []int{1}
}

func (x *DeviceInfo) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *DeviceInfo) GetDeviceName() string {
	if x != nil {
		return x.DeviceName
	}
	return ""
}

func (x *DeviceInfo) GetDeviceType() string {
	if x != nil {
		return x.DeviceType
	}
	return ""
}

func (x *DeviceInfo) GetFirmwareVersion() string {
	if x != nil {
		return x.FirmwareVersion
	}
	return ""
}

func (x *DeviceInfo) GetIpAddress() string {
	if x != nil {
		return x.IpAddress
	}
	return ""
}

func (x *DeviceInfo) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *DeviceInfo) GetCapabilities() map[string]string {
	if x != nil {
		return x.Capabilities
	}
	return nil
}

func (x *DeviceInfo) GetLastHeartbeat() int64 {
	if x != nil {
		return x.LastHeartbeat
	}
	return 0
}

// 设备注册请求
type RegisterDeviceRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	DeviceInfo     *DeviceInfo            `protobuf:"bytes,1,opt,name=device_info,json=deviceInfo,proto3" json:"device_info,omitempty"`
	AvailableTools []string               `protobuf:"bytes,2,rep,name=available_tools,json=availableTools,proto3" json:"available_tools,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *RegisterDeviceRequest) Reset() {
	*x = RegisterDeviceRequest{}
	mi := &file_device_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterDeviceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterDeviceRequest) ProtoMessage() {}

func (x *RegisterDeviceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_device_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterDeviceRequest.ProtoReflect.Descriptor instead.
func (*RegisterDeviceRequest) Descriptor() ([]byte, []int) {
	return file_device_proto_rawDescGZIP(), []int{2}
}

func (x *RegisterDeviceRequest) GetDeviceInfo() *DeviceInfo {
	if x != nil {
		return x.DeviceInfo
	}
	return nil
}

func (x *RegisterDeviceRequest) GetAvailableTools() []string {
	if x != nil {
		return x.AvailableTools
	}
	return nil
}

// 设备注册响应
type RegisterDeviceResponse struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Status            *ResponseStatus        `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	SessionId         string                 `protobuf:"bytes,2,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	HeartbeatInterval int32                  `protobuf:"varint,3,opt,name=heartbeat_interval,json=heartbeatInterval,proto3" json:"heartbeat_interval,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *RegisterDeviceResponse) Reset() {
	*x = RegisterDeviceResponse{}
	mi := &file_device_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterDeviceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterDeviceResponse) ProtoMessage() {}

func (x *RegisterDeviceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_device_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterDeviceResponse.ProtoReflect.Descriptor instead.
func (*RegisterDeviceResponse) Descriptor() ([]byte, []int) {
	return file_device_proto_rawDescGZIP(), []int{3}
}

func (x *RegisterDeviceResponse) GetStatus() *ResponseStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *RegisterDeviceResponse) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *RegisterDeviceResponse) GetHeartbeatInterval() int32 {
	if x != nil {
		return x.HeartbeatInterval
	}
	return 0
}

// 心跳请求
type HeartbeatRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DeviceId      string                 `protobuf:"bytes,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	SessionId     string                 `protobuf:"bytes,2,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	StatusInfo    map[string]string      `protobuf:"bytes,3,rep,name=status_info,json=statusInfo,proto3" json:"status_info,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HeartbeatRequest) Reset() {
	*x = HeartbeatRequest{}
	mi := &file_device_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HeartbeatRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeartbeatRequest) ProtoMessage() {}

func (x *HeartbeatRequest) ProtoReflect() protoreflect.Message {
	mi := &file_device_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeartbeatRequest.ProtoReflect.Descriptor instead.
func (*HeartbeatRequest) Descriptor() ([]byte, []int) {
	return file_device_proto_rawDescGZIP(), []int{4}
}

func (x *HeartbeatRequest) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *HeartbeatRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *HeartbeatRequest) GetStatusInfo() map[string]string {
	if x != nil {
		return x.StatusInfo
	}
	return nil
}

// 心跳响应
type HeartbeatResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        *ResponseStatus        `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	KeepAlive     bool                   `protobuf:"varint,2,opt,name=keep_alive,json=keepAlive,proto3" json:"keep_alive,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HeartbeatResponse) Reset() {
	*x = HeartbeatResponse{}
	mi := &file_device_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HeartbeatResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeartbeatResponse) ProtoMessage() {}

func (x *HeartbeatResponse) ProtoReflect() protoreflect.Message {
	mi := &file_device_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeartbeatResponse.ProtoReflect.Descriptor instead.
func (*HeartbeatResponse) Descriptor() ([]byte, []int) {
	return file_device_proto_rawDescGZIP(), []int{5}
}

func (x *HeartbeatResponse) GetStatus() *ResponseStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *HeartbeatResponse) GetKeepAlive() bool {
	if x != nil {
		return x.KeepAlive
	}
	return false
}

// 语音播放请求
type VoiceSpeakRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DeviceId      string                 `protobuf:"bytes,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	Text          string                 `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
	Speed         float32                `protobuf:"fixed32,3,opt,name=speed,proto3" json:"speed,omitempty"`
	Volume        int32                  `protobuf:"varint,4,opt,name=volume,proto3" json:"volume,omitempty"`
	VoiceType     string                 `protobuf:"bytes,5,opt,name=voice_type,json=voiceType,proto3" json:"voice_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VoiceSpeakRequest) Reset() {
	*x = VoiceSpeakRequest{}
	mi := &file_device_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VoiceSpeakRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VoiceSpeakRequest) ProtoMessage() {}

func (x *VoiceSpeakRequest) ProtoReflect() protoreflect.Message {
	mi := &file_device_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VoiceSpeakRequest.ProtoReflect.Descriptor instead.
func (*VoiceSpeakRequest) Descriptor() ([]byte, []int) {
	return file_device_proto_rawDescGZIP(), []int{6}
}

func (x *VoiceSpeakRequest) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *VoiceSpeakRequest) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *VoiceSpeakRequest) GetSpeed() float32 {
	if x != nil {
		return x.Speed
	}
	return 0
}

func (x *VoiceSpeakRequest) GetVolume() int32 {
	if x != nil {
		return x.Volume
	}
	return 0
}

func (x *VoiceSpeakRequest) GetVoiceType() string {
	if x != nil {
		return x.VoiceType
	}
	return ""
}

// 语音播放响应
type VoiceSpeakResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        *ResponseStatus        `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Duration      float32                `protobuf:"fixed32,2,opt,name=duration,proto3" json:"duration,omitempty"`
	AudioId       string                 `protobuf:"bytes,3,opt,name=audio_id,json=audioId,proto3" json:"audio_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VoiceSpeakResponse) Reset() {
	*x = VoiceSpeakResponse{}
	mi := &file_device_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VoiceSpeakResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VoiceSpeakResponse) ProtoMessage() {}

func (x *VoiceSpeakResponse) ProtoReflect() protoreflect.Message {
	mi := &file_device_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VoiceSpeakResponse.ProtoReflect.Descriptor instead.
func (*VoiceSpeakResponse) Descriptor() ([]byte, []int) {
	return file_device_proto_rawDescGZIP(), []int{7}
}

func (x *VoiceSpeakResponse) GetStatus() *ResponseStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *VoiceSpeakResponse) GetDuration() float32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *VoiceSpeakResponse) GetAudioId() string {
	if x != nil {
		return x.AudioId
	}
	return ""
}

// 音量控制请求
type VoiceVolumeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DeviceId      string                 `protobuf:"bytes,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	Volume        int32                  `protobuf:"varint,2,opt,name=volume,proto3" json:"volume,omitempty"` // -1 表示获取当前音量
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VoiceVolumeRequest) Reset() {
	*x = VoiceVolumeRequest{}
	mi := &file_device_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VoiceVolumeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VoiceVolumeRequest) ProtoMessage() {}

func (x *VoiceVolumeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_device_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VoiceVolumeRequest.ProtoReflect.Descriptor instead.
func (*VoiceVolumeRequest) Descriptor() ([]byte, []int) {
	return file_device_proto_rawDescGZIP(), []int{8}
}

func (x *VoiceVolumeRequest) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *VoiceVolumeRequest) GetVolume() int32 {
	if x != nil {
		return x.Volume
	}
	return 0
}

// 音量控制响应
type VoiceVolumeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        *ResponseStatus        `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	CurrentVolume int32                  `protobuf:"varint,2,opt,name=current_volume,json=currentVolume,proto3" json:"current_volume,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VoiceVolumeResponse) Reset() {
	*x = VoiceVolumeResponse{}
	mi := &file_device_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VoiceVolumeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VoiceVolumeResponse) ProtoMessage() {}

func (x *VoiceVolumeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_device_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VoiceVolumeResponse.ProtoReflect.Descriptor instead.
func (*VoiceVolumeResponse) Descriptor() ([]byte, []int) {
	return file_device_proto_rawDescGZIP(), []int{9}
}

func (x *VoiceVolumeResponse) GetStatus() *ResponseStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *VoiceVolumeResponse) GetCurrentVolume() int32 {
	if x != nil {
		return x.CurrentVolume
	}
	return 0
}

// 表情显示请求
type DisplayExpressionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DeviceId      string                 `protobuf:"bytes,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	Expression    string                 `protobuf:"bytes,2,opt,name=expression,proto3" json:"expression,omitempty"`
	Duration      int32                  `protobuf:"varint,3,opt,name=duration,proto3" json:"duration,omitempty"`
	Intensity     int32                  `protobuf:"varint,4,opt,name=intensity,proto3" json:"intensity,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DisplayExpressionRequest) Reset() {
	*x = DisplayExpressionRequest{}
	mi := &file_device_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DisplayExpressionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisplayExpressionRequest) ProtoMessage() {}

func (x *DisplayExpressionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_device_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisplayExpressionRequest.ProtoReflect.Descriptor instead.
func (*DisplayExpressionRequest) Descriptor() ([]byte, []int) {
	return file_device_proto_rawDescGZIP(), []int{10}
}

func (x *DisplayExpressionRequest) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *DisplayExpressionRequest) GetExpression() string {
	if x != nil {
		return x.Expression
	}
	return ""
}

func (x *DisplayExpressionRequest) GetDuration() int32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *DisplayExpressionRequest) GetIntensity() int32 {
	if x != nil {
		return x.Intensity
	}
	return 0
}

// 表情显示响应
type DisplayExpressionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        *ResponseStatus        `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DisplayExpressionResponse) Reset() {
	*x = DisplayExpressionResponse{}
	mi := &file_device_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DisplayExpressionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisplayExpressionResponse) ProtoMessage() {}

func (x *DisplayExpressionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_device_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisplayExpressionResponse.ProtoReflect.Descriptor instead.
func (*DisplayExpressionResponse) Descriptor() ([]byte, []int) {
	return file_device_proto_rawDescGZIP(), []int{11}
}

func (x *DisplayExpressionResponse) GetStatus() *ResponseStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

// 文本显示请求
type DisplayTextRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DeviceId      string                 `protobuf:"bytes,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	Text          string                 `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
	Duration      int32                  `protobuf:"varint,3,opt,name=duration,proto3" json:"duration,omitempty"`
	FontSize      string                 `protobuf:"bytes,4,opt,name=font_size,json=fontSize,proto3" json:"font_size,omitempty"`
	Color         string                 `protobuf:"bytes,5,opt,name=color,proto3" json:"color,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DisplayTextRequest) Reset() {
	*x = DisplayTextRequest{}
	mi := &file_device_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DisplayTextRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisplayTextRequest) ProtoMessage() {}

func (x *DisplayTextRequest) ProtoReflect() protoreflect.Message {
	mi := &file_device_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisplayTextRequest.ProtoReflect.Descriptor instead.
func (*DisplayTextRequest) Descriptor() ([]byte, []int) {
	return file_device_proto_rawDescGZIP(), []int{12}
}

func (x *DisplayTextRequest) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *DisplayTextRequest) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *DisplayTextRequest) GetDuration() int32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *DisplayTextRequest) GetFontSize() string {
	if x != nil {
		return x.FontSize
	}
	return ""
}

func (x *DisplayTextRequest) GetColor() string {
	if x != nil {
		return x.Color
	}
	return ""
}

// 文本显示响应
type DisplayTextResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        *ResponseStatus        `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DisplayTextResponse) Reset() {
	*x = DisplayTextResponse{}
	mi := &file_device_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DisplayTextResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisplayTextResponse) ProtoMessage() {}

func (x *DisplayTextResponse) ProtoReflect() protoreflect.Message {
	mi := &file_device_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisplayTextResponse.ProtoReflect.Descriptor instead.
func (*DisplayTextResponse) Descriptor() ([]byte, []int) {
	return file_device_proto_rawDescGZIP(), []int{13}
}

func (x *DisplayTextResponse) GetStatus() *ResponseStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

// 显示亮度请求
type DisplayBrightnessRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DeviceId      string                 `protobuf:"bytes,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	Brightness    int32                  `protobuf:"varint,2,opt,name=brightness,proto3" json:"brightness,omitempty"` // -1 表示获取当前亮度
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DisplayBrightnessRequest) Reset() {
	*x = DisplayBrightnessRequest{}
	mi := &file_device_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DisplayBrightnessRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisplayBrightnessRequest) ProtoMessage() {}

func (x *DisplayBrightnessRequest) ProtoReflect() protoreflect.Message {
	mi := &file_device_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisplayBrightnessRequest.ProtoReflect.Descriptor instead.
func (*DisplayBrightnessRequest) Descriptor() ([]byte, []int) {
	return file_device_proto_rawDescGZIP(), []int{14}
}

func (x *DisplayBrightnessRequest) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *DisplayBrightnessRequest) GetBrightness() int32 {
	if x != nil {
		return x.Brightness
	}
	return 0
}

// 显示亮度响应
type DisplayBrightnessResponse struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Status            *ResponseStatus        `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	CurrentBrightness int32                  `protobuf:"varint,2,opt,name=current_brightness,json=currentBrightness,proto3" json:"current_brightness,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *DisplayBrightnessResponse) Reset() {
	*x = DisplayBrightnessResponse{}
	mi := &file_device_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DisplayBrightnessResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisplayBrightnessResponse) ProtoMessage() {}

func (x *DisplayBrightnessResponse) ProtoReflect() protoreflect.Message {
	mi := &file_device_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisplayBrightnessResponse.ProtoReflect.Descriptor instead.
func (*DisplayBrightnessResponse) Descriptor() ([]byte, []int) {
	return file_device_proto_rawDescGZIP(), []int{15}
}

func (x *DisplayBrightnessResponse) GetStatus() *ResponseStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *DisplayBrightnessResponse) GetCurrentBrightness() int32 {
	if x != nil {
		return x.CurrentBrightness
	}
	return 0
}

// 灯光控制请求
type LightControlRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DeviceId      string                 `protobuf:"bytes,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	Red           int32                  `protobuf:"varint,2,opt,name=red,proto3" json:"red,omitempty"`
	Green         int32                  `protobuf:"varint,3,opt,name=green,proto3" json:"green,omitempty"`
	Blue          int32                  `protobuf:"varint,4,opt,name=blue,proto3" json:"blue,omitempty"`
	Brightness    int32                  `protobuf:"varint,5,opt,name=brightness,proto3" json:"brightness,omitempty"`
	Duration      int32                  `protobuf:"varint,6,opt,name=duration,proto3" json:"duration,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LightControlRequest) Reset() {
	*x = LightControlRequest{}
	mi := &file_device_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LightControlRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LightControlRequest) ProtoMessage() {}

func (x *LightControlRequest) ProtoReflect() protoreflect.Message {
	mi := &file_device_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LightControlRequest.ProtoReflect.Descriptor instead.
func (*LightControlRequest) Descriptor() ([]byte, []int) {
	return file_device_proto_rawDescGZIP(), []int{16}
}

func (x *LightControlRequest) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *LightControlRequest) GetRed() int32 {
	if x != nil {
		return x.Red
	}
	return 0
}

func (x *LightControlRequest) GetGreen() int32 {
	if x != nil {
		return x.Green
	}
	return 0
}

func (x *LightControlRequest) GetBlue() int32 {
	if x != nil {
		return x.Blue
	}
	return 0
}

func (x *LightControlRequest) GetBrightness() int32 {
	if x != nil {
		return x.Brightness
	}
	return 0
}

func (x *LightControlRequest) GetDuration() int32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

// 灯光控制响应
type LightControlResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        *ResponseStatus        `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LightControlResponse) Reset() {
	*x = LightControlResponse{}
	mi := &file_device_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LightControlResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LightControlResponse) ProtoMessage() {}

func (x *LightControlResponse) ProtoReflect() protoreflect.Message {
	mi := &file_device_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LightControlResponse.ProtoReflect.Descriptor instead.
func (*LightControlResponse) Descriptor() ([]byte, []int) {
	return file_device_proto_rawDescGZIP(), []int{17}
}

func (x *LightControlResponse) GetStatus() *ResponseStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

// 灯光模式请求
type LightModeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DeviceId      string                 `protobuf:"bytes,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	Mode          string                 `protobuf:"bytes,2,opt,name=mode,proto3" json:"mode,omitempty"` // solid, blink, fade, rainbow, etc.
	Speed         int32                  `protobuf:"varint,3,opt,name=speed,proto3" json:"speed,omitempty"`
	Colors        []int32                `protobuf:"varint,4,rep,packed,name=colors,proto3" json:"colors,omitempty"` // RGB values
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LightModeRequest) Reset() {
	*x = LightModeRequest{}
	mi := &file_device_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LightModeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LightModeRequest) ProtoMessage() {}

func (x *LightModeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_device_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LightModeRequest.ProtoReflect.Descriptor instead.
func (*LightModeRequest) Descriptor() ([]byte, []int) {
	return file_device_proto_rawDescGZIP(), []int{18}
}

func (x *LightModeRequest) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *LightModeRequest) GetMode() string {
	if x != nil {
		return x.Mode
	}
	return ""
}

func (x *LightModeRequest) GetSpeed() int32 {
	if x != nil {
		return x.Speed
	}
	return 0
}

func (x *LightModeRequest) GetColors() []int32 {
	if x != nil {
		return x.Colors
	}
	return nil
}

// 灯光模式响应
type LightModeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        *ResponseStatus        `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LightModeResponse) Reset() {
	*x = LightModeResponse{}
	mi := &file_device_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LightModeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LightModeResponse) ProtoMessage() {}

func (x *LightModeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_device_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LightModeResponse.ProtoReflect.Descriptor instead.
func (*LightModeResponse) Descriptor() ([]byte, []int) {
	return file_device_proto_rawDescGZIP(), []int{19}
}

func (x *LightModeResponse) GetStatus() *ResponseStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

// 音频播放请求
type AudioPlayRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DeviceId      string                 `protobuf:"bytes,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	FilePath      string                 `protobuf:"bytes,2,opt,name=file_path,json=filePath,proto3" json:"file_path,omitempty"`
	Volume        float32                `protobuf:"fixed32,3,opt,name=volume,proto3" json:"volume,omitempty"`
	Loop          bool                   `protobuf:"varint,4,opt,name=loop,proto3" json:"loop,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AudioPlayRequest) Reset() {
	*x = AudioPlayRequest{}
	mi := &file_device_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AudioPlayRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AudioPlayRequest) ProtoMessage() {}

func (x *AudioPlayRequest) ProtoReflect() protoreflect.Message {
	mi := &file_device_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AudioPlayRequest.ProtoReflect.Descriptor instead.
func (*AudioPlayRequest) Descriptor() ([]byte, []int) {
	return file_device_proto_rawDescGZIP(), []int{20}
}

func (x *AudioPlayRequest) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *AudioPlayRequest) GetFilePath() string {
	if x != nil {
		return x.FilePath
	}
	return ""
}

func (x *AudioPlayRequest) GetVolume() float32 {
	if x != nil {
		return x.Volume
	}
	return 0
}

func (x *AudioPlayRequest) GetLoop() bool {
	if x != nil {
		return x.Loop
	}
	return false
}

// 音频播放响应
type AudioPlayResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        *ResponseStatus        `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	AudioId       string                 `protobuf:"bytes,2,opt,name=audio_id,json=audioId,proto3" json:"audio_id,omitempty"`
	Duration      float32                `protobuf:"fixed32,3,opt,name=duration,proto3" json:"duration,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AudioPlayResponse) Reset() {
	*x = AudioPlayResponse{}
	mi := &file_device_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AudioPlayResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AudioPlayResponse) ProtoMessage() {}

func (x *AudioPlayResponse) ProtoReflect() protoreflect.Message {
	mi := &file_device_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AudioPlayResponse.ProtoReflect.Descriptor instead.
func (*AudioPlayResponse) Descriptor() ([]byte, []int) {
	return file_device_proto_rawDescGZIP(), []int{21}
}

func (x *AudioPlayResponse) GetStatus() *ResponseStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *AudioPlayResponse) GetAudioId() string {
	if x != nil {
		return x.AudioId
	}
	return ""
}

func (x *AudioPlayResponse) GetDuration() float32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

// 音频录制请求
type AudioRecordRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DeviceId      string                 `protobuf:"bytes,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	Duration      int32                  `protobuf:"varint,2,opt,name=duration,proto3" json:"duration,omitempty"`
	Format        string                 `protobuf:"bytes,3,opt,name=format,proto3" json:"format,omitempty"`
	SampleRate    int32                  `protobuf:"varint,4,opt,name=sample_rate,json=sampleRate,proto3" json:"sample_rate,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AudioRecordRequest) Reset() {
	*x = AudioRecordRequest{}
	mi := &file_device_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AudioRecordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AudioRecordRequest) ProtoMessage() {}

func (x *AudioRecordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_device_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AudioRecordRequest.ProtoReflect.Descriptor instead.
func (*AudioRecordRequest) Descriptor() ([]byte, []int) {
	return file_device_proto_rawDescGZIP(), []int{22}
}

func (x *AudioRecordRequest) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *AudioRecordRequest) GetDuration() int32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *AudioRecordRequest) GetFormat() string {
	if x != nil {
		return x.Format
	}
	return ""
}

func (x *AudioRecordRequest) GetSampleRate() int32 {
	if x != nil {
		return x.SampleRate
	}
	return 0
}

// 音频录制响应
type AudioRecordResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        *ResponseStatus        `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	RecordId      string                 `protobuf:"bytes,2,opt,name=record_id,json=recordId,proto3" json:"record_id,omitempty"`
	FilePath      string                 `protobuf:"bytes,3,opt,name=file_path,json=filePath,proto3" json:"file_path,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AudioRecordResponse) Reset() {
	*x = AudioRecordResponse{}
	mi := &file_device_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AudioRecordResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AudioRecordResponse) ProtoMessage() {}

func (x *AudioRecordResponse) ProtoReflect() protoreflect.Message {
	mi := &file_device_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AudioRecordResponse.ProtoReflect.Descriptor instead.
func (*AudioRecordResponse) Descriptor() ([]byte, []int) {
	return file_device_proto_rawDescGZIP(), []int{23}
}

func (x *AudioRecordResponse) GetStatus() *ResponseStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *AudioRecordResponse) GetRecordId() string {
	if x != nil {
		return x.RecordId
	}
	return ""
}

func (x *AudioRecordResponse) GetFilePath() string {
	if x != nil {
		return x.FilePath
	}
	return ""
}

// 音频停止请求
type AudioStopRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DeviceId      string                 `protobuf:"bytes,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	AudioId       string                 `protobuf:"bytes,2,opt,name=audio_id,json=audioId,proto3" json:"audio_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AudioStopRequest) Reset() {
	*x = AudioStopRequest{}
	mi := &file_device_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AudioStopRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AudioStopRequest) ProtoMessage() {}

func (x *AudioStopRequest) ProtoReflect() protoreflect.Message {
	mi := &file_device_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AudioStopRequest.ProtoReflect.Descriptor instead.
func (*AudioStopRequest) Descriptor() ([]byte, []int) {
	return file_device_proto_rawDescGZIP(), []int{24}
}

func (x *AudioStopRequest) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *AudioStopRequest) GetAudioId() string {
	if x != nil {
		return x.AudioId
	}
	return ""
}

// 音频停止响应
type AudioStopResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        *ResponseStatus        `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AudioStopResponse) Reset() {
	*x = AudioStopResponse{}
	mi := &file_device_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AudioStopResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AudioStopResponse) ProtoMessage() {}

func (x *AudioStopResponse) ProtoReflect() protoreflect.Message {
	mi := &file_device_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AudioStopResponse.ProtoReflect.Descriptor instead.
func (*AudioStopResponse) Descriptor() ([]byte, []int) {
	return file_device_proto_rawDescGZIP(), []int{25}
}

func (x *AudioStopResponse) GetStatus() *ResponseStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

// 系统信息请求
type SystemInfoRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DeviceId      string                 `protobuf:"bytes,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SystemInfoRequest) Reset() {
	*x = SystemInfoRequest{}
	mi := &file_device_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SystemInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemInfoRequest) ProtoMessage() {}

func (x *SystemInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_device_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemInfoRequest.ProtoReflect.Descriptor instead.
func (*SystemInfoRequest) Descriptor() ([]byte, []int) {
	return file_device_proto_rawDescGZIP(), []int{26}
}

func (x *SystemInfoRequest) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

// 系统信息响应
type SystemInfoResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Status         *ResponseStatus        `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	CpuUsage       float32                `protobuf:"fixed32,2,opt,name=cpu_usage,json=cpuUsage,proto3" json:"cpu_usage,omitempty"`
	MemoryUsage    float32                `protobuf:"fixed32,3,opt,name=memory_usage,json=memoryUsage,proto3" json:"memory_usage,omitempty"`
	Temperature    float32                `protobuf:"fixed32,4,opt,name=temperature,proto3" json:"temperature,omitempty"`
	Uptime         int64                  `protobuf:"varint,5,opt,name=uptime,proto3" json:"uptime,omitempty"`
	WifiStatus     string                 `protobuf:"bytes,6,opt,name=wifi_status,json=wifiStatus,proto3" json:"wifi_status,omitempty"`
	FreeHeap       int64                  `protobuf:"varint,7,opt,name=free_heap,json=freeHeap,proto3" json:"free_heap,omitempty"`
	AdditionalInfo map[string]string      `protobuf:"bytes,8,rep,name=additional_info,json=additionalInfo,proto3" json:"additional_info,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *SystemInfoResponse) Reset() {
	*x = SystemInfoResponse{}
	mi := &file_device_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SystemInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemInfoResponse) ProtoMessage() {}

func (x *SystemInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_device_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemInfoResponse.ProtoReflect.Descriptor instead.
func (*SystemInfoResponse) Descriptor() ([]byte, []int) {
	return file_device_proto_rawDescGZIP(), []int{27}
}

func (x *SystemInfoResponse) GetStatus() *ResponseStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *SystemInfoResponse) GetCpuUsage() float32 {
	if x != nil {
		return x.CpuUsage
	}
	return 0
}

func (x *SystemInfoResponse) GetMemoryUsage() float32 {
	if x != nil {
		return x.MemoryUsage
	}
	return 0
}

func (x *SystemInfoResponse) GetTemperature() float32 {
	if x != nil {
		return x.Temperature
	}
	return 0
}

func (x *SystemInfoResponse) GetUptime() int64 {
	if x != nil {
		return x.Uptime
	}
	return 0
}

func (x *SystemInfoResponse) GetWifiStatus() string {
	if x != nil {
		return x.WifiStatus
	}
	return ""
}

func (x *SystemInfoResponse) GetFreeHeap() int64 {
	if x != nil {
		return x.FreeHeap
	}
	return 0
}

func (x *SystemInfoResponse) GetAdditionalInfo() map[string]string {
	if x != nil {
		return x.AdditionalInfo
	}
	return nil
}

// 系统重启请求
type SystemRestartRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DeviceId      string                 `protobuf:"bytes,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	Delay         int32                  `protobuf:"varint,2,opt,name=delay,proto3" json:"delay,omitempty"`
	Reason        string                 `protobuf:"bytes,3,opt,name=reason,proto3" json:"reason,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SystemRestartRequest) Reset() {
	*x = SystemRestartRequest{}
	mi := &file_device_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SystemRestartRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemRestartRequest) ProtoMessage() {}

func (x *SystemRestartRequest) ProtoReflect() protoreflect.Message {
	mi := &file_device_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemRestartRequest.ProtoReflect.Descriptor instead.
func (*SystemRestartRequest) Descriptor() ([]byte, []int) {
	return file_device_proto_rawDescGZIP(), []int{28}
}

func (x *SystemRestartRequest) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *SystemRestartRequest) GetDelay() int32 {
	if x != nil {
		return x.Delay
	}
	return 0
}

func (x *SystemRestartRequest) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

// 系统重启响应
type SystemRestartResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        *ResponseStatus        `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	RestartTime   int64                  `protobuf:"varint,2,opt,name=restart_time,json=restartTime,proto3" json:"restart_time,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SystemRestartResponse) Reset() {
	*x = SystemRestartResponse{}
	mi := &file_device_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SystemRestartResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemRestartResponse) ProtoMessage() {}

func (x *SystemRestartResponse) ProtoReflect() protoreflect.Message {
	mi := &file_device_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemRestartResponse.ProtoReflect.Descriptor instead.
func (*SystemRestartResponse) Descriptor() ([]byte, []int) {
	return file_device_proto_rawDescGZIP(), []int{29}
}

func (x *SystemRestartResponse) GetStatus() *ResponseStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *SystemRestartResponse) GetRestartTime() int64 {
	if x != nil {
		return x.RestartTime
	}
	return 0
}

// WiFi重连请求
type SystemWifiReconnectRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DeviceId      string                 `protobuf:"bytes,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	Ssid          string                 `protobuf:"bytes,2,opt,name=ssid,proto3" json:"ssid,omitempty"`
	Password      string                 `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SystemWifiReconnectRequest) Reset() {
	*x = SystemWifiReconnectRequest{}
	mi := &file_device_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SystemWifiReconnectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemWifiReconnectRequest) ProtoMessage() {}

func (x *SystemWifiReconnectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_device_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemWifiReconnectRequest.ProtoReflect.Descriptor instead.
func (*SystemWifiReconnectRequest) Descriptor() ([]byte, []int) {
	return file_device_proto_rawDescGZIP(), []int{30}
}

func (x *SystemWifiReconnectRequest) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *SystemWifiReconnectRequest) GetSsid() string {
	if x != nil {
		return x.Ssid
	}
	return ""
}

func (x *SystemWifiReconnectRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

// WiFi重连响应
type SystemWifiReconnectResponse struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Status           *ResponseStatus        `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	ConnectionStatus string                 `protobuf:"bytes,2,opt,name=connection_status,json=connectionStatus,proto3" json:"connection_status,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *SystemWifiReconnectResponse) Reset() {
	*x = SystemWifiReconnectResponse{}
	mi := &file_device_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SystemWifiReconnectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemWifiReconnectResponse) ProtoMessage() {}

func (x *SystemWifiReconnectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_device_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemWifiReconnectResponse.ProtoReflect.Descriptor instead.
func (*SystemWifiReconnectResponse) Descriptor() ([]byte, []int) {
	return file_device_proto_rawDescGZIP(), []int{31}
}

func (x *SystemWifiReconnectResponse) GetStatus() *ResponseStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *SystemWifiReconnectResponse) GetConnectionStatus() string {
	if x != nil {
		return x.ConnectionStatus
	}
	return ""
}

// 工具调用请求
type ToolCallRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DeviceId      string                 `protobuf:"bytes,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	ToolName      string                 `protobuf:"bytes,2,opt,name=tool_name,json=toolName,proto3" json:"tool_name,omitempty"`
	Parameters    string                 `protobuf:"bytes,3,opt,name=parameters,proto3" json:"parameters,omitempty"` // JSON格式的参数
	CallId        string                 `protobuf:"bytes,4,opt,name=call_id,json=callId,proto3" json:"call_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ToolCallRequest) Reset() {
	*x = ToolCallRequest{}
	mi := &file_device_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ToolCallRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ToolCallRequest) ProtoMessage() {}

func (x *ToolCallRequest) ProtoReflect() protoreflect.Message {
	mi := &file_device_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ToolCallRequest.ProtoReflect.Descriptor instead.
func (*ToolCallRequest) Descriptor() ([]byte, []int) {
	return file_device_proto_rawDescGZIP(), []int{32}
}

func (x *ToolCallRequest) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *ToolCallRequest) GetToolName() string {
	if x != nil {
		return x.ToolName
	}
	return ""
}

func (x *ToolCallRequest) GetParameters() string {
	if x != nil {
		return x.Parameters
	}
	return ""
}

func (x *ToolCallRequest) GetCallId() string {
	if x != nil {
		return x.CallId
	}
	return ""
}

// 工具调用响应
type ToolCallResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        *ResponseStatus        `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Result        string                 `protobuf:"bytes,2,opt,name=result,proto3" json:"result,omitempty"` // JSON格式的结果
	CallId        string                 `protobuf:"bytes,3,opt,name=call_id,json=callId,proto3" json:"call_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ToolCallResponse) Reset() {
	*x = ToolCallResponse{}
	mi := &file_device_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ToolCallResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ToolCallResponse) ProtoMessage() {}

func (x *ToolCallResponse) ProtoReflect() protoreflect.Message {
	mi := &file_device_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ToolCallResponse.ProtoReflect.Descriptor instead.
func (*ToolCallResponse) Descriptor() ([]byte, []int) {
	return file_device_proto_rawDescGZIP(), []int{33}
}

func (x *ToolCallResponse) GetStatus() *ResponseStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *ToolCallResponse) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

func (x *ToolCallResponse) GetCallId() string {
	if x != nil {
		return x.CallId
	}
	return ""
}

var File_device_proto protoreflect.FileDescriptor

const file_device_proto_rawDesc = "" +
	"\n" +
	"\fdevice.proto\x12\rlinxos_device\"c\n" +
	"\x0eResponseStatus\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12\x1d\n" +
	"\n" +
	"error_code\x18\x03 \x01(\x05R\terrorCode\"\x82\x03\n" +
	"\n" +
	"DeviceInfo\x12\x1b\n" +
	"\tdevice_id\x18\x01 \x01(\tR\bdeviceId\x12\x1f\n" +
	"\vdevice_name\x18\x02 \x01(\tR\n" +
	"deviceName\x12\x1f\n" +
	"\vdevice_type\x18\x03 \x01(\tR\n" +
	"deviceType\x12)\n" +
	"\x10firmware_version\x18\x04 \x01(\tR\x0ffirmwareVersion\x12\x1d\n" +
	"\n" +
	"ip_address\x18\x05 \x01(\tR\tipAddress\x12\x12\n" +
	"\x04port\x18\x06 \x01(\x05R\x04port\x12O\n" +
	"\fcapabilities\x18\a \x03(\v2+.linxos_device.DeviceInfo.CapabilitiesEntryR\fcapabilities\x12%\n" +
	"\x0elast_heartbeat\x18\b \x01(\x03R\rlastHeartbeat\x1a?\n" +
	"\x11CapabilitiesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"|\n" +
	"\x15RegisterDeviceRequest\x12:\n" +
	"\vdevice_info\x18\x01 \x01(\v2\x19.linxos_device.DeviceInfoR\n" +
	"deviceInfo\x12'\n" +
	"\x0favailable_tools\x18\x02 \x03(\tR\x0eavailableTools\"\x9d\x01\n" +
	"\x16RegisterDeviceResponse\x125\n" +
	"\x06status\x18\x01 \x01(\v2\x1d.linxos_device.ResponseStatusR\x06status\x12\x1d\n" +
	"\n" +
	"session_id\x18\x02 \x01(\tR\tsessionId\x12-\n" +
	"\x12heartbeat_interval\x18\x03 \x01(\x05R\x11heartbeatInterval\"\xdf\x01\n" +
	"\x10HeartbeatRequest\x12\x1b\n" +
	"\tdevice_id\x18\x01 \x01(\tR\bdeviceId\x12\x1d\n" +
	"\n" +
	"session_id\x18\x02 \x01(\tR\tsessionId\x12P\n" +
	"\vstatus_info\x18\x03 \x03(\v2/.linxos_device.HeartbeatRequest.StatusInfoEntryR\n" +
	"statusInfo\x1a=\n" +
	"\x0fStatusInfoEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"i\n" +
	"\x11HeartbeatResponse\x125\n" +
	"\x06status\x18\x01 \x01(\v2\x1d.linxos_device.ResponseStatusR\x06status\x12\x1d\n" +
	"\n" +
	"keep_alive\x18\x02 \x01(\bR\tkeepAlive\"\x91\x01\n" +
	"\x11VoiceSpeakRequest\x12\x1b\n" +
	"\tdevice_id\x18\x01 \x01(\tR\bdeviceId\x12\x12\n" +
	"\x04text\x18\x02 \x01(\tR\x04text\x12\x14\n" +
	"\x05speed\x18\x03 \x01(\x02R\x05speed\x12\x16\n" +
	"\x06volume\x18\x04 \x01(\x05R\x06volume\x12\x1d\n" +
	"\n" +
	"voice_type\x18\x05 \x01(\tR\tvoiceType\"\x82\x01\n" +
	"\x12VoiceSpeakResponse\x125\n" +
	"\x06status\x18\x01 \x01(\v2\x1d.linxos_device.ResponseStatusR\x06status\x12\x1a\n" +
	"\bduration\x18\x02 \x01(\x02R\bduration\x12\x19\n" +
	"\baudio_id\x18\x03 \x01(\tR\aaudioId\"I\n" +
	"\x12VoiceVolumeRequest\x12\x1b\n" +
	"\tdevice_id\x18\x01 \x01(\tR\bdeviceId\x12\x16\n" +
	"\x06volume\x18\x02 \x01(\x05R\x06volume\"s\n" +
	"\x13VoiceVolumeResponse\x125\n" +
	"\x06status\x18\x01 \x01(\v2\x1d.linxos_device.ResponseStatusR\x06status\x12%\n" +
	"\x0ecurrent_volume\x18\x02 \x01(\x05R\rcurrentVolume\"\x91\x01\n" +
	"\x18DisplayExpressionRequest\x12\x1b\n" +
	"\tdevice_id\x18\x01 \x01(\tR\bdeviceId\x12\x1e\n" +
	"\n" +
	"expression\x18\x02 \x01(\tR\n" +
	"expression\x12\x1a\n" +
	"\bduration\x18\x03 \x01(\x05R\bduration\x12\x1c\n" +
	"\tintensity\x18\x04 \x01(\x05R\tintensity\"R\n" +
	"\x19DisplayExpressionResponse\x125\n" +
	"\x06status\x18\x01 \x01(\v2\x1d.linxos_device.ResponseStatusR\x06status\"\x94\x01\n" +
	"\x12DisplayTextRequest\x12\x1b\n" +
	"\tdevice_id\x18\x01 \x01(\tR\bdeviceId\x12\x12\n" +
	"\x04text\x18\x02 \x01(\tR\x04text\x12\x1a\n" +
	"\bduration\x18\x03 \x01(\x05R\bduration\x12\x1b\n" +
	"\tfont_size\x18\x04 \x01(\tR\bfontSize\x12\x14\n" +
	"\x05color\x18\x05 \x01(\tR\x05color\"L\n" +
	"\x13DisplayTextResponse\x125\n" +
	"\x06status\x18\x01 \x01(\v2\x1d.linxos_device.ResponseStatusR\x06status\"W\n" +
	"\x18DisplayBrightnessRequest\x12\x1b\n" +
	"\tdevice_id\x18\x01 \x01(\tR\bdeviceId\x12\x1e\n" +
	"\n" +
	"brightness\x18\x02 \x01(\x05R\n" +
	"brightness\"\x81\x01\n" +
	"\x19DisplayBrightnessResponse\x125\n" +
	"\x06status\x18\x01 \x01(\v2\x1d.linxos_device.ResponseStatusR\x06status\x12-\n" +
	"\x12current_brightness\x18\x02 \x01(\x05R\x11currentBrightness\"\xaa\x01\n" +
	"\x13LightControlRequest\x12\x1b\n" +
	"\tdevice_id\x18\x01 \x01(\tR\bdeviceId\x12\x10\n" +
	"\x03red\x18\x02 \x01(\x05R\x03red\x12\x14\n" +
	"\x05green\x18\x03 \x01(\x05R\x05green\x12\x12\n" +
	"\x04blue\x18\x04 \x01(\x05R\x04blue\x12\x1e\n" +
	"\n" +
	"brightness\x18\x05 \x01(\x05R\n" +
	"brightness\x12\x1a\n" +
	"\bduration\x18\x06 \x01(\x05R\bduration\"M\n" +
	"\x14LightControlResponse\x125\n" +
	"\x06status\x18\x01 \x01(\v2\x1d.linxos_device.ResponseStatusR\x06status\"q\n" +
	"\x10LightModeRequest\x12\x1b\n" +
	"\tdevice_id\x18\x01 \x01(\tR\bdeviceId\x12\x12\n" +
	"\x04mode\x18\x02 \x01(\tR\x04mode\x12\x14\n" +
	"\x05speed\x18\x03 \x01(\x05R\x05speed\x12\x16\n" +
	"\x06colors\x18\x04 \x03(\x05R\x06colors\"J\n" +
	"\x11LightModeResponse\x125\n" +
	"\x06status\x18\x01 \x01(\v2\x1d.linxos_device.ResponseStatusR\x06status\"x\n" +
	"\x10AudioPlayRequest\x12\x1b\n" +
	"\tdevice_id\x18\x01 \x01(\tR\bdeviceId\x12\x1b\n" +
	"\tfile_path\x18\x02 \x01(\tR\bfilePath\x12\x16\n" +
	"\x06volume\x18\x03 \x01(\x02R\x06volume\x12\x12\n" +
	"\x04loop\x18\x04 \x01(\bR\x04loop\"\x81\x01\n" +
	"\x11AudioPlayResponse\x125\n" +
	"\x06status\x18\x01 \x01(\v2\x1d.linxos_device.ResponseStatusR\x06status\x12\x19\n" +
	"\baudio_id\x18\x02 \x01(\tR\aaudioId\x12\x1a\n" +
	"\bduration\x18\x03 \x01(\x02R\bduration\"\x86\x01\n" +
	"\x12AudioRecordRequest\x12\x1b\n" +
	"\tdevice_id\x18\x01 \x01(\tR\bdeviceId\x12\x1a\n" +
	"\bduration\x18\x02 \x01(\x05R\bduration\x12\x16\n" +
	"\x06format\x18\x03 \x01(\tR\x06format\x12\x1f\n" +
	"\vsample_rate\x18\x04 \x01(\x05R\n" +
	"sampleRate\"\x86\x01\n" +
	"\x13AudioRecordResponse\x125\n" +
	"\x06status\x18\x01 \x01(\v2\x1d.linxos_device.ResponseStatusR\x06status\x12\x1b\n" +
	"\trecord_id\x18\x02 \x01(\tR\brecordId\x12\x1b\n" +
	"\tfile_path\x18\x03 \x01(\tR\bfilePath\"J\n" +
	"\x10AudioStopRequest\x12\x1b\n" +
	"\tdevice_id\x18\x01 \x01(\tR\bdeviceId\x12\x19\n" +
	"\baudio_id\x18\x02 \x01(\tR\aaudioId\"J\n" +
	"\x11AudioStopResponse\x125\n" +
	"\x06status\x18\x01 \x01(\v2\x1d.linxos_device.ResponseStatusR\x06status\"0\n" +
	"\x11SystemInfoRequest\x12\x1b\n" +
	"\tdevice_id\x18\x01 \x01(\tR\bdeviceId\"\xa6\x03\n" +
	"\x12SystemInfoResponse\x125\n" +
	"\x06status\x18\x01 \x01(\v2\x1d.linxos_device.ResponseStatusR\x06status\x12\x1b\n" +
	"\tcpu_usage\x18\x02 \x01(\x02R\bcpuUsage\x12!\n" +
	"\fmemory_usage\x18\x03 \x01(\x02R\vmemoryUsage\x12 \n" +
	"\vtemperature\x18\x04 \x01(\x02R\vtemperature\x12\x16\n" +
	"\x06uptime\x18\x05 \x01(\x03R\x06uptime\x12\x1f\n" +
	"\vwifi_status\x18\x06 \x01(\tR\n" +
	"wifiStatus\x12\x1b\n" +
	"\tfree_heap\x18\a \x01(\x03R\bfreeHeap\x12^\n" +
	"\x0fadditional_info\x18\b \x03(\v25.linxos_device.SystemInfoResponse.AdditionalInfoEntryR\x0eadditionalInfo\x1aA\n" +
	"\x13AdditionalInfoEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"a\n" +
	"\x14SystemRestartRequest\x12\x1b\n" +
	"\tdevice_id\x18\x01 \x01(\tR\bdeviceId\x12\x14\n" +
	"\x05delay\x18\x02 \x01(\x05R\x05delay\x12\x16\n" +
	"\x06reason\x18\x03 \x01(\tR\x06reason\"q\n" +
	"\x15SystemRestartResponse\x125\n" +
	"\x06status\x18\x01 \x01(\v2\x1d.linxos_device.ResponseStatusR\x06status\x12!\n" +
	"\frestart_time\x18\x02 \x01(\x03R\vrestartTime\"i\n" +
	"\x1aSystemWifiReconnectRequest\x12\x1b\n" +
	"\tdevice_id\x18\x01 \x01(\tR\bdeviceId\x12\x12\n" +
	"\x04ssid\x18\x02 \x01(\tR\x04ssid\x12\x1a\n" +
	"\bpassword\x18\x03 \x01(\tR\bpassword\"\x81\x01\n" +
	"\x1bSystemWifiReconnectResponse\x125\n" +
	"\x06status\x18\x01 \x01(\v2\x1d.linxos_device.ResponseStatusR\x06status\x12+\n" +
	"\x11connection_status\x18\x02 \x01(\tR\x10connectionStatus\"\x84\x01\n" +
	"\x0fToolCallRequest\x12\x1b\n" +
	"\tdevice_id\x18\x01 \x01(\tR\bdeviceId\x12\x1b\n" +
	"\ttool_name\x18\x02 \x01(\tR\btoolName\x12\x1e\n" +
	"\n" +
	"parameters\x18\x03 \x01(\tR\n" +
	"parameters\x12\x17\n" +
	"\acall_id\x18\x04 \x01(\tR\x06callId\"z\n" +
	"\x10ToolCallResponse\x125\n" +
	"\x06status\x18\x01 \x01(\v2\x1d.linxos_device.ResponseStatusR\x06status\x12\x16\n" +
	"\x06result\x18\x02 \x01(\tR\x06result\x12\x17\n" +
	"\acall_id\x18\x03 \x01(\tR\x06callId2\x9c\v\n" +
	"\x13LinxOSDeviceService\x12]\n" +
	"\x0eRegisterDevice\x12$.linxos_device.RegisterDeviceRequest\x1a%.linxos_device.RegisterDeviceResponse\x12N\n" +
	"\tHeartbeat\x12\x1f.linxos_device.HeartbeatRequest\x1a .linxos_device.HeartbeatResponse\x12Q\n" +
	"\n" +
	"VoiceSpeak\x12 .linxos_device.VoiceSpeakRequest\x1a!.linxos_device.VoiceSpeakResponse\x12T\n" +
	"\vVoiceVolume\x12!.linxos_device.VoiceVolumeRequest\x1a\".linxos_device.VoiceVolumeResponse\x12f\n" +
	"\x11DisplayExpression\x12'.linxos_device.DisplayExpressionRequest\x1a(.linxos_device.DisplayExpressionResponse\x12T\n" +
	"\vDisplayText\x12!.linxos_device.DisplayTextRequest\x1a\".linxos_device.DisplayTextResponse\x12f\n" +
	"\x11DisplayBrightness\x12'.linxos_device.DisplayBrightnessRequest\x1a(.linxos_device.DisplayBrightnessResponse\x12W\n" +
	"\fLightControl\x12\".linxos_device.LightControlRequest\x1a#.linxos_device.LightControlResponse\x12N\n" +
	"\tLightMode\x12\x1f.linxos_device.LightModeRequest\x1a .linxos_device.LightModeResponse\x12N\n" +
	"\tAudioPlay\x12\x1f.linxos_device.AudioPlayRequest\x1a .linxos_device.AudioPlayResponse\x12T\n" +
	"\vAudioRecord\x12!.linxos_device.AudioRecordRequest\x1a\".linxos_device.AudioRecordResponse\x12N\n" +
	"\tAudioStop\x12\x1f.linxos_device.AudioStopRequest\x1a .linxos_device.AudioStopResponse\x12Q\n" +
	"\n" +
	"SystemInfo\x12 .linxos_device.SystemInfoRequest\x1a!.linxos_device.SystemInfoResponse\x12Z\n" +
	"\rSystemRestart\x12#.linxos_device.SystemRestartRequest\x1a$.linxos_device.SystemRestartResponse\x12l\n" +
	"\x13SystemWifiReconnect\x12).linxos_device.SystemWifiReconnectRequest\x1a*.linxos_device.SystemWifiReconnectResponse\x12K\n" +
	"\bCallTool\x12\x1e.linxos_device.ToolCallRequest\x1a\x1f.linxos_device.ToolCallResponseB\\\n" +
	"\x17com.linxos.device.protoB\vDeviceProtoZ\x1bgithub.com/linxos/rpc/proto\xf8\x01\x01\xaa\x02\x13LinxOS.Device.Protob\x06proto3"

var (
	file_device_proto_rawDescOnce sync.Once
	file_device_proto_rawDescData []byte
)

func file_device_proto_rawDescGZIP() []byte {
	file_device_proto_rawDescOnce.Do(func() {
		file_device_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_device_proto_rawDesc), len(file_device_proto_rawDesc)))
	})
	return file_device_proto_rawDescData
}

var file_device_proto_msgTypes = make([]protoimpl.MessageInfo, 37)
var file_device_proto_goTypes = []any{
	(*ResponseStatus)(nil),              // 0: linxos_device.ResponseStatus
	(*DeviceInfo)(nil),                  // 1: linxos_device.DeviceInfo
	(*RegisterDeviceRequest)(nil),       // 2: linxos_device.RegisterDeviceRequest
	(*RegisterDeviceResponse)(nil),      // 3: linxos_device.RegisterDeviceResponse
	(*HeartbeatRequest)(nil),            // 4: linxos_device.HeartbeatRequest
	(*HeartbeatResponse)(nil),           // 5: linxos_device.HeartbeatResponse
	(*VoiceSpeakRequest)(nil),           // 6: linxos_device.VoiceSpeakRequest
	(*VoiceSpeakResponse)(nil),          // 7: linxos_device.VoiceSpeakResponse
	(*VoiceVolumeRequest)(nil),          // 8: linxos_device.VoiceVolumeRequest
	(*VoiceVolumeResponse)(nil),         // 9: linxos_device.VoiceVolumeResponse
	(*DisplayExpressionRequest)(nil),    // 10: linxos_device.DisplayExpressionRequest
	(*DisplayExpressionResponse)(nil),   // 11: linxos_device.DisplayExpressionResponse
	(*DisplayTextRequest)(nil),          // 12: linxos_device.DisplayTextRequest
	(*DisplayTextResponse)(nil),         // 13: linxos_device.DisplayTextResponse
	(*DisplayBrightnessRequest)(nil),    // 14: linxos_device.DisplayBrightnessRequest
	(*DisplayBrightnessResponse)(nil),   // 15: linxos_device.DisplayBrightnessResponse
	(*LightControlRequest)(nil),         // 16: linxos_device.LightControlRequest
	(*LightControlResponse)(nil),        // 17: linxos_device.LightControlResponse
	(*LightModeRequest)(nil),            // 18: linxos_device.LightModeRequest
	(*LightModeResponse)(nil),           // 19: linxos_device.LightModeResponse
	(*AudioPlayRequest)(nil),            // 20: linxos_device.AudioPlayRequest
	(*AudioPlayResponse)(nil),           // 21: linxos_device.AudioPlayResponse
	(*AudioRecordRequest)(nil),          // 22: linxos_device.AudioRecordRequest
	(*AudioRecordResponse)(nil),         // 23: linxos_device.AudioRecordResponse
	(*AudioStopRequest)(nil),            // 24: linxos_device.AudioStopRequest
	(*AudioStopResponse)(nil),           // 25: linxos_device.AudioStopResponse
	(*SystemInfoRequest)(nil),           // 26: linxos_device.SystemInfoRequest
	(*SystemInfoResponse)(nil),          // 27: linxos_device.SystemInfoResponse
	(*SystemRestartRequest)(nil),        // 28: linxos_device.SystemRestartRequest
	(*SystemRestartResponse)(nil),       // 29: linxos_device.SystemRestartResponse
	(*SystemWifiReconnectRequest)(nil),  // 30: linxos_device.SystemWifiReconnectRequest
	(*SystemWifiReconnectResponse)(nil), // 31: linxos_device.SystemWifiReconnectResponse
	(*ToolCallRequest)(nil),             // 32: linxos_device.ToolCallRequest
	(*ToolCallResponse)(nil),            // 33: linxos_device.ToolCallResponse
	nil,                                 // 34: linxos_device.DeviceInfo.CapabilitiesEntry
	nil,                                 // 35: linxos_device.HeartbeatRequest.StatusInfoEntry
	nil,                                 // 36: linxos_device.SystemInfoResponse.AdditionalInfoEntry
}
var file_device_proto_depIdxs = []int32{
	34, // 0: linxos_device.DeviceInfo.capabilities:type_name -> linxos_device.DeviceInfo.CapabilitiesEntry
	1,  // 1: linxos_device.RegisterDeviceRequest.device_info:type_name -> linxos_device.DeviceInfo
	0,  // 2: linxos_device.RegisterDeviceResponse.status:type_name -> linxos_device.ResponseStatus
	35, // 3: linxos_device.HeartbeatRequest.status_info:type_name -> linxos_device.HeartbeatRequest.StatusInfoEntry
	0,  // 4: linxos_device.HeartbeatResponse.status:type_name -> linxos_device.ResponseStatus
	0,  // 5: linxos_device.VoiceSpeakResponse.status:type_name -> linxos_device.ResponseStatus
	0,  // 6: linxos_device.VoiceVolumeResponse.status:type_name -> linxos_device.ResponseStatus
	0,  // 7: linxos_device.DisplayExpressionResponse.status:type_name -> linxos_device.ResponseStatus
	0,  // 8: linxos_device.DisplayTextResponse.status:type_name -> linxos_device.ResponseStatus
	0,  // 9: linxos_device.DisplayBrightnessResponse.status:type_name -> linxos_device.ResponseStatus
	0,  // 10: linxos_device.LightControlResponse.status:type_name -> linxos_device.ResponseStatus
	0,  // 11: linxos_device.LightModeResponse.status:type_name -> linxos_device.ResponseStatus
	0,  // 12: linxos_device.AudioPlayResponse.status:type_name -> linxos_device.ResponseStatus
	0,  // 13: linxos_device.AudioRecordResponse.status:type_name -> linxos_device.ResponseStatus
	0,  // 14: linxos_device.AudioStopResponse.status:type_name -> linxos_device.ResponseStatus
	0,  // 15: linxos_device.SystemInfoResponse.status:type_name -> linxos_device.ResponseStatus
	36, // 16: linxos_device.SystemInfoResponse.additional_info:type_name -> linxos_device.SystemInfoResponse.AdditionalInfoEntry
	0,  // 17: linxos_device.SystemRestartResponse.status:type_name -> linxos_device.ResponseStatus
	0,  // 18: linxos_device.SystemWifiReconnectResponse.status:type_name -> linxos_device.ResponseStatus
	0,  // 19: linxos_device.ToolCallResponse.status:type_name -> linxos_device.ResponseStatus
	2,  // 20: linxos_device.LinxOSDeviceService.RegisterDevice:input_type -> linxos_device.RegisterDeviceRequest
	4,  // 21: linxos_device.LinxOSDeviceService.Heartbeat:input_type -> linxos_device.HeartbeatRequest
	6,  // 22: linxos_device.LinxOSDeviceService.VoiceSpeak:input_type -> linxos_device.VoiceSpeakRequest
	8,  // 23: linxos_device.LinxOSDeviceService.VoiceVolume:input_type -> linxos_device.VoiceVolumeRequest
	10, // 24: linxos_device.LinxOSDeviceService.DisplayExpression:input_type -> linxos_device.DisplayExpressionRequest
	12, // 25: linxos_device.LinxOSDeviceService.DisplayText:input_type -> linxos_device.DisplayTextRequest
	14, // 26: linxos_device.LinxOSDeviceService.DisplayBrightness:input_type -> linxos_device.DisplayBrightnessRequest
	16, // 27: linxos_device.LinxOSDeviceService.LightControl:input_type -> linxos_device.LightControlRequest
	18, // 28: linxos_device.LinxOSDeviceService.LightMode:input_type -> linxos_device.LightModeRequest
	20, // 29: linxos_device.LinxOSDeviceService.AudioPlay:input_type -> linxos_device.AudioPlayRequest
	22, // 30: linxos_device.LinxOSDeviceService.AudioRecord:input_type -> linxos_device.AudioRecordRequest
	24, // 31: linxos_device.LinxOSDeviceService.AudioStop:input_type -> linxos_device.AudioStopRequest
	26, // 32: linxos_device.LinxOSDeviceService.SystemInfo:input_type -> linxos_device.SystemInfoRequest
	28, // 33: linxos_device.LinxOSDeviceService.SystemRestart:input_type -> linxos_device.SystemRestartRequest
	30, // 34: linxos_device.LinxOSDeviceService.SystemWifiReconnect:input_type -> linxos_device.SystemWifiReconnectRequest
	32, // 35: linxos_device.LinxOSDeviceService.CallTool:input_type -> linxos_device.ToolCallRequest
	3,  // 36: linxos_device.LinxOSDeviceService.RegisterDevice:output_type -> linxos_device.RegisterDeviceResponse
	5,  // 37: linxos_device.LinxOSDeviceService.Heartbeat:output_type -> linxos_device.HeartbeatResponse
	7,  // 38: linxos_device.LinxOSDeviceService.VoiceSpeak:output_type -> linxos_device.VoiceSpeakResponse
	9,  // 39: linxos_device.LinxOSDeviceService.VoiceVolume:output_type -> linxos_device.VoiceVolumeResponse
	11, // 40: linxos_device.LinxOSDeviceService.DisplayExpression:output_type -> linxos_device.DisplayExpressionResponse
	13, // 41: linxos_device.LinxOSDeviceService.DisplayText:output_type -> linxos_device.DisplayTextResponse
	15, // 42: linxos_device.LinxOSDeviceService.DisplayBrightness:output_type -> linxos_device.DisplayBrightnessResponse
	17, // 43: linxos_device.LinxOSDeviceService.LightControl:output_type -> linxos_device.LightControlResponse
	19, // 44: linxos_device.LinxOSDeviceService.LightMode:output_type -> linxos_device.LightModeResponse
	21, // 45: linxos_device.LinxOSDeviceService.AudioPlay:output_type -> linxos_device.AudioPlayResponse
	23, // 46: linxos_device.LinxOSDeviceService.AudioRecord:output_type -> linxos_device.AudioRecordResponse
	25, // 47: linxos_device.LinxOSDeviceService.AudioStop:output_type -> linxos_device.AudioStopResponse
	27, // 48: linxos_device.LinxOSDeviceService.SystemInfo:output_type -> linxos_device.SystemInfoResponse
	29, // 49: linxos_device.LinxOSDeviceService.SystemRestart:output_type -> linxos_device.SystemRestartResponse
	31, // 50: linxos_device.LinxOSDeviceService.SystemWifiReconnect:output_type -> linxos_device.SystemWifiReconnectResponse
	33, // 51: linxos_device.LinxOSDeviceService.CallTool:output_type -> linxos_device.ToolCallResponse
	36, // [36:52] is the sub-list for method output_type
	20, // [20:36] is the sub-list for method input_type
	20, // [20:20] is the sub-list for extension type_name
	20, // [20:20] is the sub-list for extension extendee
	0,  // [0:20] is the sub-list for field type_name
}

func init() { file_device_proto_init() }
func file_device_proto_init() {
	if File_device_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_device_proto_rawDesc), len(file_device_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   37,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_device_proto_goTypes,
		DependencyIndexes: file_device_proto_depIdxs,
		MessageInfos:      file_device_proto_msgTypes,
	}.Build()
	File_device_proto = out.File
	file_device_proto_goTypes = nil
	file_device_proto_depIdxs = nil
}
