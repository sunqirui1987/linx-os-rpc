// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: device.proto
// Protobuf C++ Version: 6.32.1

#include "device.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace linxos_device {

inline constexpr VoiceVolumeRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        device_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        volume_{0} {}

template <typename>
PROTOBUF_CONSTEXPR VoiceVolumeRequest::VoiceVolumeRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(VoiceVolumeRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct VoiceVolumeRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR VoiceVolumeRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~VoiceVolumeRequestDefaultTypeInternal() {}
  union {
    VoiceVolumeRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 VoiceVolumeRequestDefaultTypeInternal _VoiceVolumeRequest_default_instance_;

inline constexpr VoiceSpeakRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        device_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        text_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        voice_type_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        speed_{0},
        volume_{0} {}

template <typename>
PROTOBUF_CONSTEXPR VoiceSpeakRequest::VoiceSpeakRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(VoiceSpeakRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct VoiceSpeakRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR VoiceSpeakRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~VoiceSpeakRequestDefaultTypeInternal() {}
  union {
    VoiceSpeakRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 VoiceSpeakRequestDefaultTypeInternal _VoiceSpeakRequest_default_instance_;

inline constexpr ToolCallRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        device_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        tool_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        parameters_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        call_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR ToolCallRequest::ToolCallRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(ToolCallRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ToolCallRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ToolCallRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ToolCallRequestDefaultTypeInternal() {}
  union {
    ToolCallRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ToolCallRequestDefaultTypeInternal _ToolCallRequest_default_instance_;

inline constexpr SystemWifiReconnectRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        device_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        ssid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        password_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR SystemWifiReconnectRequest::SystemWifiReconnectRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(SystemWifiReconnectRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SystemWifiReconnectRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SystemWifiReconnectRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SystemWifiReconnectRequestDefaultTypeInternal() {}
  union {
    SystemWifiReconnectRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SystemWifiReconnectRequestDefaultTypeInternal _SystemWifiReconnectRequest_default_instance_;

inline constexpr SystemRestartRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        device_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        reason_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        delay_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SystemRestartRequest::SystemRestartRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(SystemRestartRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SystemRestartRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SystemRestartRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SystemRestartRequestDefaultTypeInternal() {}
  union {
    SystemRestartRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SystemRestartRequestDefaultTypeInternal _SystemRestartRequest_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR SystemInfoResponse_AdditionalInfoEntry_DoNotUse::SystemInfoResponse_AdditionalInfoEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : SystemInfoResponse_AdditionalInfoEntry_DoNotUse::MapEntry(SystemInfoResponse_AdditionalInfoEntry_DoNotUse_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : SystemInfoResponse_AdditionalInfoEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct SystemInfoResponse_AdditionalInfoEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SystemInfoResponse_AdditionalInfoEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SystemInfoResponse_AdditionalInfoEntry_DoNotUseDefaultTypeInternal() {}
  union {
    SystemInfoResponse_AdditionalInfoEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SystemInfoResponse_AdditionalInfoEntry_DoNotUseDefaultTypeInternal _SystemInfoResponse_AdditionalInfoEntry_DoNotUse_default_instance_;

inline constexpr SystemInfoRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        device_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR SystemInfoRequest::SystemInfoRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(SystemInfoRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SystemInfoRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SystemInfoRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SystemInfoRequestDefaultTypeInternal() {}
  union {
    SystemInfoRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SystemInfoRequestDefaultTypeInternal _SystemInfoRequest_default_instance_;

inline constexpr ResponseStatus::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        message_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        success_{false},
        error_code_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ResponseStatus::ResponseStatus(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(ResponseStatus_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ResponseStatusDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ResponseStatusDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ResponseStatusDefaultTypeInternal() {}
  union {
    ResponseStatus _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ResponseStatusDefaultTypeInternal _ResponseStatus_default_instance_;

inline constexpr LightModeRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        colors_{},
        _colors_cached_byte_size_{0},
        device_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        mode_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        speed_{0} {}

template <typename>
PROTOBUF_CONSTEXPR LightModeRequest::LightModeRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(LightModeRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct LightModeRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LightModeRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~LightModeRequestDefaultTypeInternal() {}
  union {
    LightModeRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LightModeRequestDefaultTypeInternal _LightModeRequest_default_instance_;

inline constexpr LightControlRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        device_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        red_{0},
        green_{0},
        blue_{0},
        brightness_{0},
        duration_{0} {}

template <typename>
PROTOBUF_CONSTEXPR LightControlRequest::LightControlRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(LightControlRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct LightControlRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LightControlRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~LightControlRequestDefaultTypeInternal() {}
  union {
    LightControlRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LightControlRequestDefaultTypeInternal _LightControlRequest_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR HeartbeatRequest_StatusInfoEntry_DoNotUse::HeartbeatRequest_StatusInfoEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : HeartbeatRequest_StatusInfoEntry_DoNotUse::MapEntry(HeartbeatRequest_StatusInfoEntry_DoNotUse_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : HeartbeatRequest_StatusInfoEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct HeartbeatRequest_StatusInfoEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR HeartbeatRequest_StatusInfoEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~HeartbeatRequest_StatusInfoEntry_DoNotUseDefaultTypeInternal() {}
  union {
    HeartbeatRequest_StatusInfoEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 HeartbeatRequest_StatusInfoEntry_DoNotUseDefaultTypeInternal _HeartbeatRequest_StatusInfoEntry_DoNotUse_default_instance_;

inline constexpr DisplayTextRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        device_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        text_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        font_size_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        color_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        duration_{0} {}

template <typename>
PROTOBUF_CONSTEXPR DisplayTextRequest::DisplayTextRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(DisplayTextRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct DisplayTextRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DisplayTextRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DisplayTextRequestDefaultTypeInternal() {}
  union {
    DisplayTextRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DisplayTextRequestDefaultTypeInternal _DisplayTextRequest_default_instance_;

inline constexpr DisplayExpressionRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        device_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        expression_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        duration_{0},
        intensity_{0} {}

template <typename>
PROTOBUF_CONSTEXPR DisplayExpressionRequest::DisplayExpressionRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(DisplayExpressionRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct DisplayExpressionRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DisplayExpressionRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DisplayExpressionRequestDefaultTypeInternal() {}
  union {
    DisplayExpressionRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DisplayExpressionRequestDefaultTypeInternal _DisplayExpressionRequest_default_instance_;

inline constexpr DisplayBrightnessRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        device_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        brightness_{0} {}

template <typename>
PROTOBUF_CONSTEXPR DisplayBrightnessRequest::DisplayBrightnessRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(DisplayBrightnessRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct DisplayBrightnessRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DisplayBrightnessRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DisplayBrightnessRequestDefaultTypeInternal() {}
  union {
    DisplayBrightnessRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DisplayBrightnessRequestDefaultTypeInternal _DisplayBrightnessRequest_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR DeviceInfo_CapabilitiesEntry_DoNotUse::DeviceInfo_CapabilitiesEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : DeviceInfo_CapabilitiesEntry_DoNotUse::MapEntry(DeviceInfo_CapabilitiesEntry_DoNotUse_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : DeviceInfo_CapabilitiesEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct DeviceInfo_CapabilitiesEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeviceInfo_CapabilitiesEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeviceInfo_CapabilitiesEntry_DoNotUseDefaultTypeInternal() {}
  union {
    DeviceInfo_CapabilitiesEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeviceInfo_CapabilitiesEntry_DoNotUseDefaultTypeInternal _DeviceInfo_CapabilitiesEntry_DoNotUse_default_instance_;

inline constexpr AudioStopRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        device_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        audio_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR AudioStopRequest::AudioStopRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(AudioStopRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct AudioStopRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AudioStopRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AudioStopRequestDefaultTypeInternal() {}
  union {
    AudioStopRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AudioStopRequestDefaultTypeInternal _AudioStopRequest_default_instance_;

inline constexpr AudioRecordRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        device_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        format_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        duration_{0},
        sample_rate_{0} {}

template <typename>
PROTOBUF_CONSTEXPR AudioRecordRequest::AudioRecordRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(AudioRecordRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct AudioRecordRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AudioRecordRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AudioRecordRequestDefaultTypeInternal() {}
  union {
    AudioRecordRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AudioRecordRequestDefaultTypeInternal _AudioRecordRequest_default_instance_;

inline constexpr AudioPlayRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        device_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        file_path_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        volume_{0},
        loop_{false} {}

template <typename>
PROTOBUF_CONSTEXPR AudioPlayRequest::AudioPlayRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(AudioPlayRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct AudioPlayRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AudioPlayRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AudioPlayRequestDefaultTypeInternal() {}
  union {
    AudioPlayRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AudioPlayRequestDefaultTypeInternal _AudioPlayRequest_default_instance_;

inline constexpr VoiceVolumeResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        status_{nullptr},
        current_volume_{0} {}

template <typename>
PROTOBUF_CONSTEXPR VoiceVolumeResponse::VoiceVolumeResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(VoiceVolumeResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct VoiceVolumeResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR VoiceVolumeResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~VoiceVolumeResponseDefaultTypeInternal() {}
  union {
    VoiceVolumeResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 VoiceVolumeResponseDefaultTypeInternal _VoiceVolumeResponse_default_instance_;

inline constexpr VoiceSpeakResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        audio_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        status_{nullptr},
        duration_{0} {}

template <typename>
PROTOBUF_CONSTEXPR VoiceSpeakResponse::VoiceSpeakResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(VoiceSpeakResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct VoiceSpeakResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR VoiceSpeakResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~VoiceSpeakResponseDefaultTypeInternal() {}
  union {
    VoiceSpeakResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 VoiceSpeakResponseDefaultTypeInternal _VoiceSpeakResponse_default_instance_;

inline constexpr ToolCallResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        result_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        call_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        status_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR ToolCallResponse::ToolCallResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(ToolCallResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ToolCallResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ToolCallResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ToolCallResponseDefaultTypeInternal() {}
  union {
    ToolCallResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ToolCallResponseDefaultTypeInternal _ToolCallResponse_default_instance_;

inline constexpr SystemWifiReconnectResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        connection_status_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        status_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR SystemWifiReconnectResponse::SystemWifiReconnectResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(SystemWifiReconnectResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SystemWifiReconnectResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SystemWifiReconnectResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SystemWifiReconnectResponseDefaultTypeInternal() {}
  union {
    SystemWifiReconnectResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SystemWifiReconnectResponseDefaultTypeInternal _SystemWifiReconnectResponse_default_instance_;

inline constexpr SystemRestartResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        status_{nullptr},
        restart_time_{::int64_t{0}} {}

template <typename>
PROTOBUF_CONSTEXPR SystemRestartResponse::SystemRestartResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(SystemRestartResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SystemRestartResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SystemRestartResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SystemRestartResponseDefaultTypeInternal() {}
  union {
    SystemRestartResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SystemRestartResponseDefaultTypeInternal _SystemRestartResponse_default_instance_;

inline constexpr SystemInfoResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        additional_info_{},
        wifi_status_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        status_{nullptr},
        cpu_usage_{0},
        memory_usage_{0},
        uptime_{::int64_t{0}},
        free_heap_{::int64_t{0}},
        temperature_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SystemInfoResponse::SystemInfoResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(SystemInfoResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SystemInfoResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SystemInfoResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SystemInfoResponseDefaultTypeInternal() {}
  union {
    SystemInfoResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SystemInfoResponseDefaultTypeInternal _SystemInfoResponse_default_instance_;

inline constexpr RegisterDeviceResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        session_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        status_{nullptr},
        heartbeat_interval_{0} {}

template <typename>
PROTOBUF_CONSTEXPR RegisterDeviceResponse::RegisterDeviceResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(RegisterDeviceResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RegisterDeviceResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RegisterDeviceResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RegisterDeviceResponseDefaultTypeInternal() {}
  union {
    RegisterDeviceResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RegisterDeviceResponseDefaultTypeInternal _RegisterDeviceResponse_default_instance_;

inline constexpr LightModeResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        status_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR LightModeResponse::LightModeResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(LightModeResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct LightModeResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LightModeResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~LightModeResponseDefaultTypeInternal() {}
  union {
    LightModeResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LightModeResponseDefaultTypeInternal _LightModeResponse_default_instance_;

inline constexpr LightControlResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        status_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR LightControlResponse::LightControlResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(LightControlResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct LightControlResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LightControlResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~LightControlResponseDefaultTypeInternal() {}
  union {
    LightControlResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LightControlResponseDefaultTypeInternal _LightControlResponse_default_instance_;

inline constexpr HeartbeatResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        status_{nullptr},
        keep_alive_{false} {}

template <typename>
PROTOBUF_CONSTEXPR HeartbeatResponse::HeartbeatResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(HeartbeatResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct HeartbeatResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR HeartbeatResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~HeartbeatResponseDefaultTypeInternal() {}
  union {
    HeartbeatResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 HeartbeatResponseDefaultTypeInternal _HeartbeatResponse_default_instance_;

inline constexpr HeartbeatRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        status_info_{},
        device_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        session_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR HeartbeatRequest::HeartbeatRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(HeartbeatRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct HeartbeatRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR HeartbeatRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~HeartbeatRequestDefaultTypeInternal() {}
  union {
    HeartbeatRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 HeartbeatRequestDefaultTypeInternal _HeartbeatRequest_default_instance_;

inline constexpr DisplayTextResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        status_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR DisplayTextResponse::DisplayTextResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(DisplayTextResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct DisplayTextResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DisplayTextResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DisplayTextResponseDefaultTypeInternal() {}
  union {
    DisplayTextResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DisplayTextResponseDefaultTypeInternal _DisplayTextResponse_default_instance_;

inline constexpr DisplayExpressionResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        status_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR DisplayExpressionResponse::DisplayExpressionResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(DisplayExpressionResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct DisplayExpressionResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DisplayExpressionResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DisplayExpressionResponseDefaultTypeInternal() {}
  union {
    DisplayExpressionResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DisplayExpressionResponseDefaultTypeInternal _DisplayExpressionResponse_default_instance_;

inline constexpr DisplayBrightnessResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        status_{nullptr},
        current_brightness_{0} {}

template <typename>
PROTOBUF_CONSTEXPR DisplayBrightnessResponse::DisplayBrightnessResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(DisplayBrightnessResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct DisplayBrightnessResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DisplayBrightnessResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DisplayBrightnessResponseDefaultTypeInternal() {}
  union {
    DisplayBrightnessResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DisplayBrightnessResponseDefaultTypeInternal _DisplayBrightnessResponse_default_instance_;

inline constexpr DeviceInfo::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        capabilities_{},
        device_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        device_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        device_type_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        firmware_version_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        ip_address_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        last_heartbeat_{::int64_t{0}},
        port_{0} {}

template <typename>
PROTOBUF_CONSTEXPR DeviceInfo::DeviceInfo(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(DeviceInfo_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct DeviceInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeviceInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeviceInfoDefaultTypeInternal() {}
  union {
    DeviceInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeviceInfoDefaultTypeInternal _DeviceInfo_default_instance_;

inline constexpr AudioStopResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        status_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR AudioStopResponse::AudioStopResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(AudioStopResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct AudioStopResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AudioStopResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AudioStopResponseDefaultTypeInternal() {}
  union {
    AudioStopResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AudioStopResponseDefaultTypeInternal _AudioStopResponse_default_instance_;

inline constexpr AudioRecordResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        record_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        file_path_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        status_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR AudioRecordResponse::AudioRecordResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(AudioRecordResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct AudioRecordResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AudioRecordResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AudioRecordResponseDefaultTypeInternal() {}
  union {
    AudioRecordResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AudioRecordResponseDefaultTypeInternal _AudioRecordResponse_default_instance_;

inline constexpr AudioPlayResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        audio_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        status_{nullptr},
        duration_{0} {}

template <typename>
PROTOBUF_CONSTEXPR AudioPlayResponse::AudioPlayResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(AudioPlayResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct AudioPlayResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AudioPlayResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AudioPlayResponseDefaultTypeInternal() {}
  union {
    AudioPlayResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AudioPlayResponseDefaultTypeInternal _AudioPlayResponse_default_instance_;

inline constexpr RegisterDeviceRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        available_tools_{},
        device_info_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR RegisterDeviceRequest::RegisterDeviceRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(RegisterDeviceRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RegisterDeviceRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RegisterDeviceRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RegisterDeviceRequestDefaultTypeInternal() {}
  union {
    RegisterDeviceRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RegisterDeviceRequestDefaultTypeInternal _RegisterDeviceRequest_default_instance_;
}  // namespace linxos_device
static constexpr const ::_pb::EnumDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_enum_descriptors_device_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_service_descriptors_device_2eproto = nullptr;
const ::uint32_t
    TableStruct_device_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::linxos_device::ResponseStatus, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::linxos_device::ResponseStatus, _impl_.success_),
        PROTOBUF_FIELD_OFFSET(::linxos_device::ResponseStatus, _impl_.message_),
        PROTOBUF_FIELD_OFFSET(::linxos_device::ResponseStatus, _impl_.error_code_),
        1,
        0,
        2,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::linxos_device::DeviceInfo_CapabilitiesEntry_DoNotUse, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::linxos_device::DeviceInfo_CapabilitiesEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::linxos_device::DeviceInfo_CapabilitiesEntry_DoNotUse, _impl_.value_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::linxos_device::DeviceInfo, _impl_._has_bits_),
        11, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::linxos_device::DeviceInfo, _impl_.device_id_),
        PROTOBUF_FIELD_OFFSET(::linxos_device::DeviceInfo, _impl_.device_name_),
        PROTOBUF_FIELD_OFFSET(::linxos_device::DeviceInfo, _impl_.device_type_),
        PROTOBUF_FIELD_OFFSET(::linxos_device::DeviceInfo, _impl_.firmware_version_),
        PROTOBUF_FIELD_OFFSET(::linxos_device::DeviceInfo, _impl_.ip_address_),
        PROTOBUF_FIELD_OFFSET(::linxos_device::DeviceInfo, _impl_.port_),
        PROTOBUF_FIELD_OFFSET(::linxos_device::DeviceInfo, _impl_.capabilities_),
        PROTOBUF_FIELD_OFFSET(::linxos_device::DeviceInfo, _impl_.last_heartbeat_),
        0,
        1,
        2,
        3,
        4,
        6,
        ~0u,
        5,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::linxos_device::RegisterDeviceRequest, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::linxos_device::RegisterDeviceRequest, _impl_.device_info_),
        PROTOBUF_FIELD_OFFSET(::linxos_device::RegisterDeviceRequest, _impl_.available_tools_),
        0,
        ~0u,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::linxos_device::RegisterDeviceResponse, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::linxos_device::RegisterDeviceResponse, _impl_.status_),
        PROTOBUF_FIELD_OFFSET(::linxos_device::RegisterDeviceResponse, _impl_.session_id_),
        PROTOBUF_FIELD_OFFSET(::linxos_device::RegisterDeviceResponse, _impl_.heartbeat_interval_),
        1,
        0,
        2,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::linxos_device::HeartbeatRequest_StatusInfoEntry_DoNotUse, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::linxos_device::HeartbeatRequest_StatusInfoEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::linxos_device::HeartbeatRequest_StatusInfoEntry_DoNotUse, _impl_.value_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::linxos_device::HeartbeatRequest, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::linxos_device::HeartbeatRequest, _impl_.device_id_),
        PROTOBUF_FIELD_OFFSET(::linxos_device::HeartbeatRequest, _impl_.session_id_),
        PROTOBUF_FIELD_OFFSET(::linxos_device::HeartbeatRequest, _impl_.status_info_),
        0,
        1,
        ~0u,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::linxos_device::HeartbeatResponse, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::linxos_device::HeartbeatResponse, _impl_.status_),
        PROTOBUF_FIELD_OFFSET(::linxos_device::HeartbeatResponse, _impl_.keep_alive_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::linxos_device::VoiceSpeakRequest, _impl_._has_bits_),
        8, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::linxos_device::VoiceSpeakRequest, _impl_.device_id_),
        PROTOBUF_FIELD_OFFSET(::linxos_device::VoiceSpeakRequest, _impl_.text_),
        PROTOBUF_FIELD_OFFSET(::linxos_device::VoiceSpeakRequest, _impl_.speed_),
        PROTOBUF_FIELD_OFFSET(::linxos_device::VoiceSpeakRequest, _impl_.volume_),
        PROTOBUF_FIELD_OFFSET(::linxos_device::VoiceSpeakRequest, _impl_.voice_type_),
        0,
        1,
        3,
        4,
        2,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::linxos_device::VoiceSpeakResponse, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::linxos_device::VoiceSpeakResponse, _impl_.status_),
        PROTOBUF_FIELD_OFFSET(::linxos_device::VoiceSpeakResponse, _impl_.duration_),
        PROTOBUF_FIELD_OFFSET(::linxos_device::VoiceSpeakResponse, _impl_.audio_id_),
        1,
        2,
        0,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::linxos_device::VoiceVolumeRequest, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::linxos_device::VoiceVolumeRequest, _impl_.device_id_),
        PROTOBUF_FIELD_OFFSET(::linxos_device::VoiceVolumeRequest, _impl_.volume_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::linxos_device::VoiceVolumeResponse, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::linxos_device::VoiceVolumeResponse, _impl_.status_),
        PROTOBUF_FIELD_OFFSET(::linxos_device::VoiceVolumeResponse, _impl_.current_volume_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::linxos_device::DisplayExpressionRequest, _impl_._has_bits_),
        7, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::linxos_device::DisplayExpressionRequest, _impl_.device_id_),
        PROTOBUF_FIELD_OFFSET(::linxos_device::DisplayExpressionRequest, _impl_.expression_),
        PROTOBUF_FIELD_OFFSET(::linxos_device::DisplayExpressionRequest, _impl_.duration_),
        PROTOBUF_FIELD_OFFSET(::linxos_device::DisplayExpressionRequest, _impl_.intensity_),
        0,
        1,
        2,
        3,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::linxos_device::DisplayExpressionResponse, _impl_._has_bits_),
        4, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::linxos_device::DisplayExpressionResponse, _impl_.status_),
        0,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::linxos_device::DisplayTextRequest, _impl_._has_bits_),
        8, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::linxos_device::DisplayTextRequest, _impl_.device_id_),
        PROTOBUF_FIELD_OFFSET(::linxos_device::DisplayTextRequest, _impl_.text_),
        PROTOBUF_FIELD_OFFSET(::linxos_device::DisplayTextRequest, _impl_.duration_),
        PROTOBUF_FIELD_OFFSET(::linxos_device::DisplayTextRequest, _impl_.font_size_),
        PROTOBUF_FIELD_OFFSET(::linxos_device::DisplayTextRequest, _impl_.color_),
        0,
        1,
        4,
        2,
        3,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::linxos_device::DisplayTextResponse, _impl_._has_bits_),
        4, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::linxos_device::DisplayTextResponse, _impl_.status_),
        0,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::linxos_device::DisplayBrightnessRequest, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::linxos_device::DisplayBrightnessRequest, _impl_.device_id_),
        PROTOBUF_FIELD_OFFSET(::linxos_device::DisplayBrightnessRequest, _impl_.brightness_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::linxos_device::DisplayBrightnessResponse, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::linxos_device::DisplayBrightnessResponse, _impl_.status_),
        PROTOBUF_FIELD_OFFSET(::linxos_device::DisplayBrightnessResponse, _impl_.current_brightness_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::linxos_device::LightControlRequest, _impl_._has_bits_),
        9, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::linxos_device::LightControlRequest, _impl_.device_id_),
        PROTOBUF_FIELD_OFFSET(::linxos_device::LightControlRequest, _impl_.red_),
        PROTOBUF_FIELD_OFFSET(::linxos_device::LightControlRequest, _impl_.green_),
        PROTOBUF_FIELD_OFFSET(::linxos_device::LightControlRequest, _impl_.blue_),
        PROTOBUF_FIELD_OFFSET(::linxos_device::LightControlRequest, _impl_.brightness_),
        PROTOBUF_FIELD_OFFSET(::linxos_device::LightControlRequest, _impl_.duration_),
        0,
        1,
        2,
        3,
        4,
        5,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::linxos_device::LightControlResponse, _impl_._has_bits_),
        4, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::linxos_device::LightControlResponse, _impl_.status_),
        0,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::linxos_device::LightModeRequest, _impl_._has_bits_),
        7, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::linxos_device::LightModeRequest, _impl_.device_id_),
        PROTOBUF_FIELD_OFFSET(::linxos_device::LightModeRequest, _impl_.mode_),
        PROTOBUF_FIELD_OFFSET(::linxos_device::LightModeRequest, _impl_.speed_),
        PROTOBUF_FIELD_OFFSET(::linxos_device::LightModeRequest, _impl_.colors_),
        0,
        1,
        2,
        ~0u,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::linxos_device::LightModeResponse, _impl_._has_bits_),
        4, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::linxos_device::LightModeResponse, _impl_.status_),
        0,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::linxos_device::AudioPlayRequest, _impl_._has_bits_),
        7, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::linxos_device::AudioPlayRequest, _impl_.device_id_),
        PROTOBUF_FIELD_OFFSET(::linxos_device::AudioPlayRequest, _impl_.file_path_),
        PROTOBUF_FIELD_OFFSET(::linxos_device::AudioPlayRequest, _impl_.volume_),
        PROTOBUF_FIELD_OFFSET(::linxos_device::AudioPlayRequest, _impl_.loop_),
        0,
        1,
        2,
        3,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::linxos_device::AudioPlayResponse, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::linxos_device::AudioPlayResponse, _impl_.status_),
        PROTOBUF_FIELD_OFFSET(::linxos_device::AudioPlayResponse, _impl_.audio_id_),
        PROTOBUF_FIELD_OFFSET(::linxos_device::AudioPlayResponse, _impl_.duration_),
        1,
        0,
        2,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::linxos_device::AudioRecordRequest, _impl_._has_bits_),
        7, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::linxos_device::AudioRecordRequest, _impl_.device_id_),
        PROTOBUF_FIELD_OFFSET(::linxos_device::AudioRecordRequest, _impl_.duration_),
        PROTOBUF_FIELD_OFFSET(::linxos_device::AudioRecordRequest, _impl_.format_),
        PROTOBUF_FIELD_OFFSET(::linxos_device::AudioRecordRequest, _impl_.sample_rate_),
        0,
        2,
        1,
        3,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::linxos_device::AudioRecordResponse, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::linxos_device::AudioRecordResponse, _impl_.status_),
        PROTOBUF_FIELD_OFFSET(::linxos_device::AudioRecordResponse, _impl_.record_id_),
        PROTOBUF_FIELD_OFFSET(::linxos_device::AudioRecordResponse, _impl_.file_path_),
        2,
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::linxos_device::AudioStopRequest, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::linxos_device::AudioStopRequest, _impl_.device_id_),
        PROTOBUF_FIELD_OFFSET(::linxos_device::AudioStopRequest, _impl_.audio_id_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::linxos_device::AudioStopResponse, _impl_._has_bits_),
        4, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::linxos_device::AudioStopResponse, _impl_.status_),
        0,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::linxos_device::SystemInfoRequest, _impl_._has_bits_),
        4, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::linxos_device::SystemInfoRequest, _impl_.device_id_),
        0,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::linxos_device::SystemInfoResponse_AdditionalInfoEntry_DoNotUse, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::linxos_device::SystemInfoResponse_AdditionalInfoEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::linxos_device::SystemInfoResponse_AdditionalInfoEntry_DoNotUse, _impl_.value_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::linxos_device::SystemInfoResponse, _impl_._has_bits_),
        11, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::linxos_device::SystemInfoResponse, _impl_.status_),
        PROTOBUF_FIELD_OFFSET(::linxos_device::SystemInfoResponse, _impl_.cpu_usage_),
        PROTOBUF_FIELD_OFFSET(::linxos_device::SystemInfoResponse, _impl_.memory_usage_),
        PROTOBUF_FIELD_OFFSET(::linxos_device::SystemInfoResponse, _impl_.temperature_),
        PROTOBUF_FIELD_OFFSET(::linxos_device::SystemInfoResponse, _impl_.uptime_),
        PROTOBUF_FIELD_OFFSET(::linxos_device::SystemInfoResponse, _impl_.wifi_status_),
        PROTOBUF_FIELD_OFFSET(::linxos_device::SystemInfoResponse, _impl_.free_heap_),
        PROTOBUF_FIELD_OFFSET(::linxos_device::SystemInfoResponse, _impl_.additional_info_),
        1,
        2,
        3,
        6,
        4,
        0,
        5,
        ~0u,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::linxos_device::SystemRestartRequest, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::linxos_device::SystemRestartRequest, _impl_.device_id_),
        PROTOBUF_FIELD_OFFSET(::linxos_device::SystemRestartRequest, _impl_.delay_),
        PROTOBUF_FIELD_OFFSET(::linxos_device::SystemRestartRequest, _impl_.reason_),
        0,
        2,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::linxos_device::SystemRestartResponse, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::linxos_device::SystemRestartResponse, _impl_.status_),
        PROTOBUF_FIELD_OFFSET(::linxos_device::SystemRestartResponse, _impl_.restart_time_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::linxos_device::SystemWifiReconnectRequest, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::linxos_device::SystemWifiReconnectRequest, _impl_.device_id_),
        PROTOBUF_FIELD_OFFSET(::linxos_device::SystemWifiReconnectRequest, _impl_.ssid_),
        PROTOBUF_FIELD_OFFSET(::linxos_device::SystemWifiReconnectRequest, _impl_.password_),
        0,
        1,
        2,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::linxos_device::SystemWifiReconnectResponse, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::linxos_device::SystemWifiReconnectResponse, _impl_.status_),
        PROTOBUF_FIELD_OFFSET(::linxos_device::SystemWifiReconnectResponse, _impl_.connection_status_),
        1,
        0,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::linxos_device::ToolCallRequest, _impl_._has_bits_),
        7, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::linxos_device::ToolCallRequest, _impl_.device_id_),
        PROTOBUF_FIELD_OFFSET(::linxos_device::ToolCallRequest, _impl_.tool_name_),
        PROTOBUF_FIELD_OFFSET(::linxos_device::ToolCallRequest, _impl_.parameters_),
        PROTOBUF_FIELD_OFFSET(::linxos_device::ToolCallRequest, _impl_.call_id_),
        0,
        1,
        2,
        3,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::linxos_device::ToolCallResponse, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::linxos_device::ToolCallResponse, _impl_.status_),
        PROTOBUF_FIELD_OFFSET(::linxos_device::ToolCallResponse, _impl_.result_),
        PROTOBUF_FIELD_OFFSET(::linxos_device::ToolCallResponse, _impl_.call_id_),
        2,
        0,
        1,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, sizeof(::linxos_device::ResponseStatus)},
        {9, sizeof(::linxos_device::DeviceInfo_CapabilitiesEntry_DoNotUse)},
        {16, sizeof(::linxos_device::DeviceInfo)},
        {35, sizeof(::linxos_device::RegisterDeviceRequest)},
        {42, sizeof(::linxos_device::RegisterDeviceResponse)},
        {51, sizeof(::linxos_device::HeartbeatRequest_StatusInfoEntry_DoNotUse)},
        {58, sizeof(::linxos_device::HeartbeatRequest)},
        {67, sizeof(::linxos_device::HeartbeatResponse)},
        {74, sizeof(::linxos_device::VoiceSpeakRequest)},
        {87, sizeof(::linxos_device::VoiceSpeakResponse)},
        {96, sizeof(::linxos_device::VoiceVolumeRequest)},
        {103, sizeof(::linxos_device::VoiceVolumeResponse)},
        {110, sizeof(::linxos_device::DisplayExpressionRequest)},
        {121, sizeof(::linxos_device::DisplayExpressionResponse)},
        {126, sizeof(::linxos_device::DisplayTextRequest)},
        {139, sizeof(::linxos_device::DisplayTextResponse)},
        {144, sizeof(::linxos_device::DisplayBrightnessRequest)},
        {151, sizeof(::linxos_device::DisplayBrightnessResponse)},
        {158, sizeof(::linxos_device::LightControlRequest)},
        {173, sizeof(::linxos_device::LightControlResponse)},
        {178, sizeof(::linxos_device::LightModeRequest)},
        {189, sizeof(::linxos_device::LightModeResponse)},
        {194, sizeof(::linxos_device::AudioPlayRequest)},
        {205, sizeof(::linxos_device::AudioPlayResponse)},
        {214, sizeof(::linxos_device::AudioRecordRequest)},
        {225, sizeof(::linxos_device::AudioRecordResponse)},
        {234, sizeof(::linxos_device::AudioStopRequest)},
        {241, sizeof(::linxos_device::AudioStopResponse)},
        {246, sizeof(::linxos_device::SystemInfoRequest)},
        {251, sizeof(::linxos_device::SystemInfoResponse_AdditionalInfoEntry_DoNotUse)},
        {258, sizeof(::linxos_device::SystemInfoResponse)},
        {277, sizeof(::linxos_device::SystemRestartRequest)},
        {286, sizeof(::linxos_device::SystemRestartResponse)},
        {293, sizeof(::linxos_device::SystemWifiReconnectRequest)},
        {302, sizeof(::linxos_device::SystemWifiReconnectResponse)},
        {309, sizeof(::linxos_device::ToolCallRequest)},
        {320, sizeof(::linxos_device::ToolCallResponse)},
};
static const ::_pb::Message* PROTOBUF_NONNULL const file_default_instances[] = {
    &::linxos_device::_ResponseStatus_default_instance_._instance,
    &::linxos_device::_DeviceInfo_CapabilitiesEntry_DoNotUse_default_instance_._instance,
    &::linxos_device::_DeviceInfo_default_instance_._instance,
    &::linxos_device::_RegisterDeviceRequest_default_instance_._instance,
    &::linxos_device::_RegisterDeviceResponse_default_instance_._instance,
    &::linxos_device::_HeartbeatRequest_StatusInfoEntry_DoNotUse_default_instance_._instance,
    &::linxos_device::_HeartbeatRequest_default_instance_._instance,
    &::linxos_device::_HeartbeatResponse_default_instance_._instance,
    &::linxos_device::_VoiceSpeakRequest_default_instance_._instance,
    &::linxos_device::_VoiceSpeakResponse_default_instance_._instance,
    &::linxos_device::_VoiceVolumeRequest_default_instance_._instance,
    &::linxos_device::_VoiceVolumeResponse_default_instance_._instance,
    &::linxos_device::_DisplayExpressionRequest_default_instance_._instance,
    &::linxos_device::_DisplayExpressionResponse_default_instance_._instance,
    &::linxos_device::_DisplayTextRequest_default_instance_._instance,
    &::linxos_device::_DisplayTextResponse_default_instance_._instance,
    &::linxos_device::_DisplayBrightnessRequest_default_instance_._instance,
    &::linxos_device::_DisplayBrightnessResponse_default_instance_._instance,
    &::linxos_device::_LightControlRequest_default_instance_._instance,
    &::linxos_device::_LightControlResponse_default_instance_._instance,
    &::linxos_device::_LightModeRequest_default_instance_._instance,
    &::linxos_device::_LightModeResponse_default_instance_._instance,
    &::linxos_device::_AudioPlayRequest_default_instance_._instance,
    &::linxos_device::_AudioPlayResponse_default_instance_._instance,
    &::linxos_device::_AudioRecordRequest_default_instance_._instance,
    &::linxos_device::_AudioRecordResponse_default_instance_._instance,
    &::linxos_device::_AudioStopRequest_default_instance_._instance,
    &::linxos_device::_AudioStopResponse_default_instance_._instance,
    &::linxos_device::_SystemInfoRequest_default_instance_._instance,
    &::linxos_device::_SystemInfoResponse_AdditionalInfoEntry_DoNotUse_default_instance_._instance,
    &::linxos_device::_SystemInfoResponse_default_instance_._instance,
    &::linxos_device::_SystemRestartRequest_default_instance_._instance,
    &::linxos_device::_SystemRestartResponse_default_instance_._instance,
    &::linxos_device::_SystemWifiReconnectRequest_default_instance_._instance,
    &::linxos_device::_SystemWifiReconnectResponse_default_instance_._instance,
    &::linxos_device::_ToolCallRequest_default_instance_._instance,
    &::linxos_device::_ToolCallResponse_default_instance_._instance,
};
const char descriptor_table_protodef_device_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\014device.proto\022\rlinxos_device\"F\n\016Respons"
    "eStatus\022\017\n\007success\030\001 \001(\010\022\017\n\007message\030\002 \001("
    "\t\022\022\n\nerror_code\030\003 \001(\005\"\225\002\n\nDeviceInfo\022\021\n\t"
    "device_id\030\001 \001(\t\022\023\n\013device_name\030\002 \001(\t\022\023\n\013"
    "device_type\030\003 \001(\t\022\030\n\020firmware_version\030\004 "
    "\001(\t\022\022\n\nip_address\030\005 \001(\t\022\014\n\004port\030\006 \001(\005\022A\n"
    "\014capabilities\030\007 \003(\0132+.linxos_device.Devi"
    "ceInfo.CapabilitiesEntry\022\026\n\016last_heartbe"
    "at\030\010 \001(\003\0323\n\021CapabilitiesEntry\022\013\n\003key\030\001 \001"
    "(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"`\n\025RegisterDeviceR"
    "equest\022.\n\013device_info\030\001 \001(\0132\031.linxos_dev"
    "ice.DeviceInfo\022\027\n\017available_tools\030\002 \003(\t\""
    "w\n\026RegisterDeviceResponse\022-\n\006status\030\001 \001("
    "\0132\035.linxos_device.ResponseStatus\022\022\n\nsess"
    "ion_id\030\002 \001(\t\022\032\n\022heartbeat_interval\030\003 \001(\005"
    "\"\262\001\n\020HeartbeatRequest\022\021\n\tdevice_id\030\001 \001(\t"
    "\022\022\n\nsession_id\030\002 \001(\t\022D\n\013status_info\030\003 \003("
    "\0132/.linxos_device.HeartbeatRequest.Statu"
    "sInfoEntry\0321\n\017StatusInfoEntry\022\013\n\003key\030\001 \001"
    "(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"V\n\021HeartbeatRespon"
    "se\022-\n\006status\030\001 \001(\0132\035.linxos_device.Respo"
    "nseStatus\022\022\n\nkeep_alive\030\002 \001(\010\"g\n\021VoiceSp"
    "eakRequest\022\021\n\tdevice_id\030\001 \001(\t\022\014\n\004text\030\002 "
    "\001(\t\022\r\n\005speed\030\003 \001(\002\022\016\n\006volume\030\004 \001(\005\022\022\n\nvo"
    "ice_type\030\005 \001(\t\"g\n\022VoiceSpeakResponse\022-\n\006"
    "status\030\001 \001(\0132\035.linxos_device.ResponseSta"
    "tus\022\020\n\010duration\030\002 \001(\002\022\020\n\010audio_id\030\003 \001(\t\""
    "7\n\022VoiceVolumeRequest\022\021\n\tdevice_id\030\001 \001(\t"
    "\022\016\n\006volume\030\002 \001(\005\"\\\n\023VoiceVolumeResponse\022"
    "-\n\006status\030\001 \001(\0132\035.linxos_device.Response"
    "Status\022\026\n\016current_volume\030\002 \001(\005\"f\n\030Displa"
    "yExpressionRequest\022\021\n\tdevice_id\030\001 \001(\t\022\022\n"
    "\nexpression\030\002 \001(\t\022\020\n\010duration\030\003 \001(\005\022\021\n\ti"
    "ntensity\030\004 \001(\005\"J\n\031DisplayExpressionRespo"
    "nse\022-\n\006status\030\001 \001(\0132\035.linxos_device.Resp"
    "onseStatus\"i\n\022DisplayTextRequest\022\021\n\tdevi"
    "ce_id\030\001 \001(\t\022\014\n\004text\030\002 \001(\t\022\020\n\010duration\030\003 "
    "\001(\005\022\021\n\tfont_size\030\004 \001(\t\022\r\n\005color\030\005 \001(\t\"D\n"
    "\023DisplayTextResponse\022-\n\006status\030\001 \001(\0132\035.l"
    "inxos_device.ResponseStatus\"A\n\030DisplayBr"
    "ightnessRequest\022\021\n\tdevice_id\030\001 \001(\t\022\022\n\nbr"
    "ightness\030\002 \001(\005\"f\n\031DisplayBrightnessRespo"
    "nse\022-\n\006status\030\001 \001(\0132\035.linxos_device.Resp"
    "onseStatus\022\032\n\022current_brightness\030\002 \001(\005\"x"
    "\n\023LightControlRequest\022\021\n\tdevice_id\030\001 \001(\t"
    "\022\013\n\003red\030\002 \001(\005\022\r\n\005green\030\003 \001(\005\022\014\n\004blue\030\004 \001"
    "(\005\022\022\n\nbrightness\030\005 \001(\005\022\020\n\010duration\030\006 \001(\005"
    "\"E\n\024LightControlResponse\022-\n\006status\030\001 \001(\013"
    "2\035.linxos_device.ResponseStatus\"R\n\020Light"
    "ModeRequest\022\021\n\tdevice_id\030\001 \001(\t\022\014\n\004mode\030\002"
    " \001(\t\022\r\n\005speed\030\003 \001(\005\022\016\n\006colors\030\004 \003(\005\"B\n\021L"
    "ightModeResponse\022-\n\006status\030\001 \001(\0132\035.linxo"
    "s_device.ResponseStatus\"V\n\020AudioPlayRequ"
    "est\022\021\n\tdevice_id\030\001 \001(\t\022\021\n\tfile_path\030\002 \001("
    "\t\022\016\n\006volume\030\003 \001(\002\022\014\n\004loop\030\004 \001(\010\"f\n\021Audio"
    "PlayResponse\022-\n\006status\030\001 \001(\0132\035.linxos_de"
    "vice.ResponseStatus\022\020\n\010audio_id\030\002 \001(\t\022\020\n"
    "\010duration\030\003 \001(\002\"^\n\022AudioRecordRequest\022\021\n"
    "\tdevice_id\030\001 \001(\t\022\020\n\010duration\030\002 \001(\005\022\016\n\006fo"
    "rmat\030\003 \001(\t\022\023\n\013sample_rate\030\004 \001(\005\"j\n\023Audio"
    "RecordResponse\022-\n\006status\030\001 \001(\0132\035.linxos_"
    "device.ResponseStatus\022\021\n\trecord_id\030\002 \001(\t"
    "\022\021\n\tfile_path\030\003 \001(\t\"7\n\020AudioStopRequest\022"
    "\021\n\tdevice_id\030\001 \001(\t\022\020\n\010audio_id\030\002 \001(\t\"B\n\021"
    "AudioStopResponse\022-\n\006status\030\001 \001(\0132\035.linx"
    "os_device.ResponseStatus\"&\n\021SystemInfoRe"
    "quest\022\021\n\tdevice_id\030\001 \001(\t\"\300\002\n\022SystemInfoR"
    "esponse\022-\n\006status\030\001 \001(\0132\035.linxos_device."
    "ResponseStatus\022\021\n\tcpu_usage\030\002 \001(\002\022\024\n\014mem"
    "ory_usage\030\003 \001(\002\022\023\n\013temperature\030\004 \001(\002\022\016\n\006"
    "uptime\030\005 \001(\003\022\023\n\013wifi_status\030\006 \001(\t\022\021\n\tfre"
    "e_heap\030\007 \001(\003\022N\n\017additional_info\030\010 \003(\01325."
    "linxos_device.SystemInfoResponse.Additio"
    "nalInfoEntry\0325\n\023AdditionalInfoEntry\022\013\n\003k"
    "ey\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"H\n\024SystemRes"
    "tartRequest\022\021\n\tdevice_id\030\001 \001(\t\022\r\n\005delay\030"
    "\002 \001(\005\022\016\n\006reason\030\003 \001(\t\"\\\n\025SystemRestartRe"
    "sponse\022-\n\006status\030\001 \001(\0132\035.linxos_device.R"
    "esponseStatus\022\024\n\014restart_time\030\002 \001(\003\"O\n\032S"
    "ystemWifiReconnectRequest\022\021\n\tdevice_id\030\001"
    " \001(\t\022\014\n\004ssid\030\002 \001(\t\022\020\n\010password\030\003 \001(\t\"g\n\033"
    "SystemWifiReconnectResponse\022-\n\006status\030\001 "
    "\001(\0132\035.linxos_device.ResponseStatus\022\031\n\021co"
    "nnection_status\030\002 \001(\t\"\\\n\017ToolCallRequest"
    "\022\021\n\tdevice_id\030\001 \001(\t\022\021\n\ttool_name\030\002 \001(\t\022\022"
    "\n\nparameters\030\003 \001(\t\022\017\n\007call_id\030\004 \001(\t\"b\n\020T"
    "oolCallResponse\022-\n\006status\030\001 \001(\0132\035.linxos"
    "_device.ResponseStatus\022\016\n\006result\030\002 \001(\t\022\017"
    "\n\007call_id\030\003 \001(\t2\234\013\n\023LinxOSDeviceService\022"
    "]\n\016RegisterDevice\022$.linxos_device.Regist"
    "erDeviceRequest\032%.linxos_device.Register"
    "DeviceResponse\022N\n\tHeartbeat\022\037.linxos_dev"
    "ice.HeartbeatRequest\032 .linxos_device.Hea"
    "rtbeatResponse\022Q\n\nVoiceSpeak\022 .linxos_de"
    "vice.VoiceSpeakRequest\032!.linxos_device.V"
    "oiceSpeakResponse\022T\n\013VoiceVolume\022!.linxo"
    "s_device.VoiceVolumeRequest\032\".linxos_dev"
    "ice.VoiceVolumeResponse\022f\n\021DisplayExpres"
    "sion\022\'.linxos_device.DisplayExpressionRe"
    "quest\032(.linxos_device.DisplayExpressionR"
    "esponse\022T\n\013DisplayText\022!.linxos_device.D"
    "isplayTextRequest\032\".linxos_device.Displa"
    "yTextResponse\022f\n\021DisplayBrightness\022\'.lin"
    "xos_device.DisplayBrightnessRequest\032(.li"
    "nxos_device.DisplayBrightnessResponse\022W\n"
    "\014LightControl\022\".linxos_device.LightContr"
    "olRequest\032#.linxos_device.LightControlRe"
    "sponse\022N\n\tLightMode\022\037.linxos_device.Ligh"
    "tModeRequest\032 .linxos_device.LightModeRe"
    "sponse\022N\n\tAudioPlay\022\037.linxos_device.Audi"
    "oPlayRequest\032 .linxos_device.AudioPlayRe"
    "sponse\022T\n\013AudioRecord\022!.linxos_device.Au"
    "dioRecordRequest\032\".linxos_device.AudioRe"
    "cordResponse\022N\n\tAudioStop\022\037.linxos_devic"
    "e.AudioStopRequest\032 .linxos_device.Audio"
    "StopResponse\022Q\n\nSystemInfo\022 .linxos_devi"
    "ce.SystemInfoRequest\032!.linxos_device.Sys"
    "temInfoResponse\022Z\n\rSystemRestart\022#.linxo"
    "s_device.SystemRestartRequest\032$.linxos_d"
    "evice.SystemRestartResponse\022l\n\023SystemWif"
    "iReconnect\022).linxos_device.SystemWifiRec"
    "onnectRequest\032*.linxos_device.SystemWifi"
    "ReconnectResponse\022K\n\010CallTool\022\036.linxos_d"
    "evice.ToolCallRequest\032\037.linxos_device.To"
    "olCallResponseB\\\n\027com.linxos.device.prot"
    "oB\013DeviceProtoZ\033github.com/linxos/rpc/pr"
    "oto\370\001\001\252\002\023LinxOS.Device.Protob\006proto3"
};
static ::absl::once_flag descriptor_table_device_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_device_2eproto = {
    false,
    false,
    5076,
    descriptor_table_protodef_device_2eproto,
    "device.proto",
    &descriptor_table_device_2eproto_once,
    nullptr,
    0,
    37,
    schemas,
    file_default_instances,
    TableStruct_device_2eproto::offsets,
    file_level_enum_descriptors_device_2eproto,
    file_level_service_descriptors_device_2eproto,
};
namespace linxos_device {
// ===================================================================

class ResponseStatus::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<ResponseStatus>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ResponseStatus, _impl_._has_bits_);
};

ResponseStatus::ResponseStatus(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ResponseStatus_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:linxos_device.ResponseStatus)
}
PROTOBUF_NDEBUG_INLINE ResponseStatus::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::linxos_device::ResponseStatus& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        message_(arena, from.message_) {}

ResponseStatus::ResponseStatus(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const ResponseStatus& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ResponseStatus_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ResponseStatus* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, success_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, success_),
           offsetof(Impl_, error_code_) -
               offsetof(Impl_, success_) +
               sizeof(Impl_::error_code_));

  // @@protoc_insertion_point(copy_constructor:linxos_device.ResponseStatus)
}
PROTOBUF_NDEBUG_INLINE ResponseStatus::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        message_(arena) {}

inline void ResponseStatus::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, success_),
           0,
           offsetof(Impl_, error_code_) -
               offsetof(Impl_, success_) +
               sizeof(Impl_::error_code_));
}
ResponseStatus::~ResponseStatus() {
  // @@protoc_insertion_point(destructor:linxos_device.ResponseStatus)
  SharedDtor(*this);
}
inline void ResponseStatus::SharedDtor(MessageLite& self) {
  ResponseStatus& this_ = static_cast<ResponseStatus&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.message_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL ResponseStatus::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) ResponseStatus(arena);
}
constexpr auto ResponseStatus::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(ResponseStatus),
                                            alignof(ResponseStatus));
}
constexpr auto ResponseStatus::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_ResponseStatus_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &ResponseStatus::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<ResponseStatus>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &ResponseStatus::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<ResponseStatus>(), &ResponseStatus::ByteSizeLong,
              &ResponseStatus::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(ResponseStatus, _impl_._cached_size_),
          false,
      },
      &ResponseStatus::kDescriptorMethods,
      &descriptor_table_device_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull ResponseStatus_class_data_ =
        ResponseStatus::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
ResponseStatus::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&ResponseStatus_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(ResponseStatus_class_data_.tc_table);
  return ResponseStatus_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 44, 2>
ResponseStatus::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ResponseStatus, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    ResponseStatus_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::linxos_device::ResponseStatus>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // bool success = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(ResponseStatus, _impl_.success_), 1>(),
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(ResponseStatus, _impl_.success_)}},
    // string message = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(ResponseStatus, _impl_.message_)}},
    // int32 error_code = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ResponseStatus, _impl_.error_code_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(ResponseStatus, _impl_.error_code_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bool success = 1;
    {PROTOBUF_FIELD_OFFSET(ResponseStatus, _impl_.success_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // string message = 2;
    {PROTOBUF_FIELD_OFFSET(ResponseStatus, _impl_.message_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 error_code = 3;
    {PROTOBUF_FIELD_OFFSET(ResponseStatus, _impl_.error_code_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
    "\34\0\7\0\0\0\0\0"
    "linxos_device.ResponseStatus"
    "message"
  }},
};
PROTOBUF_NOINLINE void ResponseStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:linxos_device.ResponseStatus)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    _impl_.message_.ClearNonDefaultToEmpty();
  }
  if ((cached_has_bits & 0x00000006U) != 0) {
    ::memset(&_impl_.success_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.error_code_) -
        reinterpret_cast<char*>(&_impl_.success_)) + sizeof(_impl_.error_code_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL ResponseStatus::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const ResponseStatus& this_ = static_cast<const ResponseStatus&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL ResponseStatus::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const ResponseStatus& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:linxos_device.ResponseStatus)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bool success = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (this_._internal_success() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          1, this_._internal_success(), target);
    }
  }

  // string message = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_message().empty()) {
      const ::std::string& _s = this_._internal_message();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "linxos_device.ResponseStatus.message");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  // int32 error_code = 3;
  if ((this_._impl_._has_bits_[0] & 0x00000004U) != 0) {
    if (this_._internal_error_code() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<3>(
              stream, this_._internal_error_code(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:linxos_device.ResponseStatus)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t ResponseStatus::ByteSizeLong(const MessageLite& base) {
  const ResponseStatus& this_ = static_cast<const ResponseStatus&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t ResponseStatus::ByteSizeLong() const {
  const ResponseStatus& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:linxos_device.ResponseStatus)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    // string message = 2;
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_message().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_message());
      }
    }
    // bool success = 1;
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (this_._internal_success() != 0) {
        total_size += 2;
      }
    }
    // int32 error_code = 3;
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (this_._internal_error_code() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_error_code());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void ResponseStatus::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ResponseStatus*>(&to_msg);
  auto& from = static_cast<const ResponseStatus&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:linxos_device.ResponseStatus)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_message().empty()) {
        _this->_internal_set_message(from._internal_message());
      } else {
        if (_this->_impl_.message_.IsDefault()) {
          _this->_internal_set_message("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (from._internal_success() != 0) {
        _this->_impl_.success_ = from._impl_.success_;
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (from._internal_error_code() != 0) {
        _this->_impl_.error_code_ = from._impl_.error_code_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ResponseStatus::CopyFrom(const ResponseStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:linxos_device.ResponseStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ResponseStatus::InternalSwap(ResponseStatus* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.message_, &other->_impl_.message_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ResponseStatus, _impl_.error_code_)
      + sizeof(ResponseStatus::_impl_.error_code_)
      - PROTOBUF_FIELD_OFFSET(ResponseStatus, _impl_.success_)>(
          reinterpret_cast<char*>(&_impl_.success_),
          reinterpret_cast<char*>(&other->_impl_.success_));
}

::google::protobuf::Metadata ResponseStatus::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
DeviceInfo_CapabilitiesEntry_DoNotUse::DeviceInfo_CapabilitiesEntry_DoNotUse()
    : SuperType(DeviceInfo_CapabilitiesEntry_DoNotUse_class_data_.base()) {}
DeviceInfo_CapabilitiesEntry_DoNotUse::DeviceInfo_CapabilitiesEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
    : SuperType(arena, DeviceInfo_CapabilitiesEntry_DoNotUse_class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
DeviceInfo_CapabilitiesEntry_DoNotUse::DeviceInfo_CapabilitiesEntry_DoNotUse() : SuperType() {}
DeviceInfo_CapabilitiesEntry_DoNotUse::DeviceInfo_CapabilitiesEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
inline void* PROTOBUF_NONNULL DeviceInfo_CapabilitiesEntry_DoNotUse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) DeviceInfo_CapabilitiesEntry_DoNotUse(arena);
}
constexpr auto DeviceInfo_CapabilitiesEntry_DoNotUse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(DeviceInfo_CapabilitiesEntry_DoNotUse),
                                            alignof(DeviceInfo_CapabilitiesEntry_DoNotUse));
}
constexpr auto DeviceInfo_CapabilitiesEntry_DoNotUse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_DeviceInfo_CapabilitiesEntry_DoNotUse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &DeviceInfo_CapabilitiesEntry_DoNotUse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<DeviceInfo_CapabilitiesEntry_DoNotUse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &DeviceInfo_CapabilitiesEntry_DoNotUse::SharedDtor,
          static_cast<void (::google::protobuf::MessageLite::*)()>(&DeviceInfo_CapabilitiesEntry_DoNotUse::ClearImpl),
              ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
              ,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(DeviceInfo_CapabilitiesEntry_DoNotUse, _impl_._cached_size_),
          false,
      },
      &DeviceInfo_CapabilitiesEntry_DoNotUse::kDescriptorMethods,
      &descriptor_table_device_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull DeviceInfo_CapabilitiesEntry_DoNotUse_class_data_ =
        DeviceInfo_CapabilitiesEntry_DoNotUse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
DeviceInfo_CapabilitiesEntry_DoNotUse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&DeviceInfo_CapabilitiesEntry_DoNotUse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(DeviceInfo_CapabilitiesEntry_DoNotUse_class_data_.tc_table);
  return DeviceInfo_CapabilitiesEntry_DoNotUse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 59, 2>
DeviceInfo_CapabilitiesEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(DeviceInfo_CapabilitiesEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    DeviceInfo_CapabilitiesEntry_DoNotUse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::linxos_device::DeviceInfo_CapabilitiesEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(DeviceInfo_CapabilitiesEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(DeviceInfo_CapabilitiesEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(DeviceInfo_CapabilitiesEntry_DoNotUse, _impl_.key_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2;
    {PROTOBUF_FIELD_OFFSET(DeviceInfo_CapabilitiesEntry_DoNotUse, _impl_.value_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\52\3\5\0\0\0\0\0"
    "linxos_device.DeviceInfo.CapabilitiesEntry"
    "key"
    "value"
  }},
};
// ===================================================================

class DeviceInfo::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<DeviceInfo>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(DeviceInfo, _impl_._has_bits_);
};

DeviceInfo::DeviceInfo(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, DeviceInfo_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:linxos_device.DeviceInfo)
}
PROTOBUF_NDEBUG_INLINE DeviceInfo::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::linxos_device::DeviceInfo& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        capabilities_{visibility, arena, from.capabilities_},
        device_id_(arena, from.device_id_),
        device_name_(arena, from.device_name_),
        device_type_(arena, from.device_type_),
        firmware_version_(arena, from.firmware_version_),
        ip_address_(arena, from.ip_address_) {}

DeviceInfo::DeviceInfo(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const DeviceInfo& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, DeviceInfo_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  DeviceInfo* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, last_heartbeat_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, last_heartbeat_),
           offsetof(Impl_, port_) -
               offsetof(Impl_, last_heartbeat_) +
               sizeof(Impl_::port_));

  // @@protoc_insertion_point(copy_constructor:linxos_device.DeviceInfo)
}
PROTOBUF_NDEBUG_INLINE DeviceInfo::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        capabilities_{visibility, arena},
        device_id_(arena),
        device_name_(arena),
        device_type_(arena),
        firmware_version_(arena),
        ip_address_(arena) {}

inline void DeviceInfo::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, last_heartbeat_),
           0,
           offsetof(Impl_, port_) -
               offsetof(Impl_, last_heartbeat_) +
               sizeof(Impl_::port_));
}
DeviceInfo::~DeviceInfo() {
  // @@protoc_insertion_point(destructor:linxos_device.DeviceInfo)
  SharedDtor(*this);
}
inline void DeviceInfo::SharedDtor(MessageLite& self) {
  DeviceInfo& this_ = static_cast<DeviceInfo&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.device_id_.Destroy();
  this_._impl_.device_name_.Destroy();
  this_._impl_.device_type_.Destroy();
  this_._impl_.firmware_version_.Destroy();
  this_._impl_.ip_address_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL DeviceInfo::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) DeviceInfo(arena);
}
constexpr auto DeviceInfo::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(DeviceInfo, _impl_.capabilities_) +
          decltype(DeviceInfo::_impl_.capabilities_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(DeviceInfo, _impl_.capabilities_) +
          decltype(DeviceInfo::_impl_.capabilities_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(DeviceInfo), alignof(DeviceInfo), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&DeviceInfo::PlacementNew_,
                                 sizeof(DeviceInfo),
                                 alignof(DeviceInfo));
  }
}
constexpr auto DeviceInfo::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_DeviceInfo_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &DeviceInfo::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<DeviceInfo>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &DeviceInfo::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<DeviceInfo>(), &DeviceInfo::ByteSizeLong,
              &DeviceInfo::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(DeviceInfo, _impl_._cached_size_),
          false,
      },
      &DeviceInfo::kDescriptorMethods,
      &descriptor_table_device_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull DeviceInfo_class_data_ =
        DeviceInfo::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
DeviceInfo::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&DeviceInfo_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(DeviceInfo_class_data_.tc_table);
  return DeviceInfo_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 8, 1, 110, 2>
DeviceInfo::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(DeviceInfo, _impl_._has_bits_),
    0, // no _extensions_
    8, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967040,  // skipmap
    offsetof(decltype(_table_), field_entries),
    8,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    DeviceInfo_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::linxos_device::DeviceInfo>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int64 last_heartbeat = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(DeviceInfo, _impl_.last_heartbeat_), 5>(),
     {64, 5, 0, PROTOBUF_FIELD_OFFSET(DeviceInfo, _impl_.last_heartbeat_)}},
    // string device_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(DeviceInfo, _impl_.device_id_)}},
    // string device_name = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(DeviceInfo, _impl_.device_name_)}},
    // string device_type = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 2, 0, PROTOBUF_FIELD_OFFSET(DeviceInfo, _impl_.device_type_)}},
    // string firmware_version = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 3, 0, PROTOBUF_FIELD_OFFSET(DeviceInfo, _impl_.firmware_version_)}},
    // string ip_address = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 4, 0, PROTOBUF_FIELD_OFFSET(DeviceInfo, _impl_.ip_address_)}},
    // int32 port = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(DeviceInfo, _impl_.port_), 6>(),
     {48, 6, 0, PROTOBUF_FIELD_OFFSET(DeviceInfo, _impl_.port_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string device_id = 1;
    {PROTOBUF_FIELD_OFFSET(DeviceInfo, _impl_.device_id_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string device_name = 2;
    {PROTOBUF_FIELD_OFFSET(DeviceInfo, _impl_.device_name_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string device_type = 3;
    {PROTOBUF_FIELD_OFFSET(DeviceInfo, _impl_.device_type_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string firmware_version = 4;
    {PROTOBUF_FIELD_OFFSET(DeviceInfo, _impl_.firmware_version_), _Internal::kHasBitsOffset + 3, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string ip_address = 5;
    {PROTOBUF_FIELD_OFFSET(DeviceInfo, _impl_.ip_address_), _Internal::kHasBitsOffset + 4, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 port = 6;
    {PROTOBUF_FIELD_OFFSET(DeviceInfo, _impl_.port_), _Internal::kHasBitsOffset + 6, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // map<string, string> capabilities = 7;
    {PROTOBUF_FIELD_OFFSET(DeviceInfo, _impl_.capabilities_), -1, 0, (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // int64 last_heartbeat = 8;
    {PROTOBUF_FIELD_OFFSET(DeviceInfo, _impl_.last_heartbeat_), _Internal::kHasBitsOffset + 5, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
  }},
  {{
      {::_pbi::TcParser::GetMapAuxInfo(1, 0, 0,
                                       9, 9,
                                       0)},
  }},
  {{
    "\30\11\13\13\20\12\0\14\0\0\0\0\0\0\0\0"
    "linxos_device.DeviceInfo"
    "device_id"
    "device_name"
    "device_type"
    "firmware_version"
    "ip_address"
    "capabilities"
  }},
};
PROTOBUF_NOINLINE void DeviceInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:linxos_device.DeviceInfo)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.capabilities_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      _impl_.device_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      _impl_.device_name_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      _impl_.device_type_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      _impl_.firmware_version_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000010U) != 0) {
      _impl_.ip_address_.ClearNonDefaultToEmpty();
    }
  }
  if ((cached_has_bits & 0x00000060U) != 0) {
    ::memset(&_impl_.last_heartbeat_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.port_) -
        reinterpret_cast<char*>(&_impl_.last_heartbeat_)) + sizeof(_impl_.port_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL DeviceInfo::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const DeviceInfo& this_ = static_cast<const DeviceInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL DeviceInfo::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const DeviceInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:linxos_device.DeviceInfo)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string device_id = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_device_id().empty()) {
      const ::std::string& _s = this_._internal_device_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "linxos_device.DeviceInfo.device_id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // string device_name = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (!this_._internal_device_name().empty()) {
      const ::std::string& _s = this_._internal_device_name();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "linxos_device.DeviceInfo.device_name");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  // string device_type = 3;
  if ((this_._impl_._has_bits_[0] & 0x00000004U) != 0) {
    if (!this_._internal_device_type().empty()) {
      const ::std::string& _s = this_._internal_device_type();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "linxos_device.DeviceInfo.device_type");
      target = stream->WriteStringMaybeAliased(3, _s, target);
    }
  }

  // string firmware_version = 4;
  if ((this_._impl_._has_bits_[0] & 0x00000008U) != 0) {
    if (!this_._internal_firmware_version().empty()) {
      const ::std::string& _s = this_._internal_firmware_version();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "linxos_device.DeviceInfo.firmware_version");
      target = stream->WriteStringMaybeAliased(4, _s, target);
    }
  }

  // string ip_address = 5;
  if ((this_._impl_._has_bits_[0] & 0x00000010U) != 0) {
    if (!this_._internal_ip_address().empty()) {
      const ::std::string& _s = this_._internal_ip_address();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "linxos_device.DeviceInfo.ip_address");
      target = stream->WriteStringMaybeAliased(5, _s, target);
    }
  }

  // int32 port = 6;
  if ((this_._impl_._has_bits_[0] & 0x00000040U) != 0) {
    if (this_._internal_port() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<6>(
              stream, this_._internal_port(), target);
    }
  }

  // map<string, string> capabilities = 7;
  if (!this_._internal_capabilities().empty()) {
    using MapType = ::google::protobuf::Map<::std::string, ::std::string>;
    using WireHelper = _pbi::MapEntryFuncs<::std::string, ::std::string,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_STRING>;
    const auto& field = this_._internal_capabilities();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            7, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "linxos_device.DeviceInfo.capabilities");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "linxos_device.DeviceInfo.capabilities");
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            7, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "linxos_device.DeviceInfo.capabilities");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "linxos_device.DeviceInfo.capabilities");
      }
    }
  }

  // int64 last_heartbeat = 8;
  if ((this_._impl_._has_bits_[0] & 0x00000020U) != 0) {
    if (this_._internal_last_heartbeat() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<8>(
              stream, this_._internal_last_heartbeat(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:linxos_device.DeviceInfo)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t DeviceInfo::ByteSizeLong(const MessageLite& base) {
  const DeviceInfo& this_ = static_cast<const DeviceInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t DeviceInfo::ByteSizeLong() const {
  const DeviceInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:linxos_device.DeviceInfo)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // map<string, string> capabilities = 7;
    {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_capabilities_size());
      for (const auto& entry : this_._internal_capabilities()) {
        total_size += _pbi::MapEntryFuncs<::std::string, ::std::string,
                                       _pbi::WireFormatLite::TYPE_STRING,
                                       _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000007fU) != 0) {
    // string device_id = 1;
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_device_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_device_id());
      }
    }
    // string device_name = 2;
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!this_._internal_device_name().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_device_name());
      }
    }
    // string device_type = 3;
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (!this_._internal_device_type().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_device_type());
      }
    }
    // string firmware_version = 4;
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (!this_._internal_firmware_version().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_firmware_version());
      }
    }
    // string ip_address = 5;
    if ((cached_has_bits & 0x00000010U) != 0) {
      if (!this_._internal_ip_address().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_ip_address());
      }
    }
    // int64 last_heartbeat = 8;
    if ((cached_has_bits & 0x00000020U) != 0) {
      if (this_._internal_last_heartbeat() != 0) {
        total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
            this_._internal_last_heartbeat());
      }
    }
    // int32 port = 6;
    if ((cached_has_bits & 0x00000040U) != 0) {
      if (this_._internal_port() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_port());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void DeviceInfo::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<DeviceInfo*>(&to_msg);
  auto& from = static_cast<const DeviceInfo&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:linxos_device.DeviceInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.capabilities_.MergeFrom(from._impl_.capabilities_);
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000007fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_device_id().empty()) {
        _this->_internal_set_device_id(from._internal_device_id());
      } else {
        if (_this->_impl_.device_id_.IsDefault()) {
          _this->_internal_set_device_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!from._internal_device_name().empty()) {
        _this->_internal_set_device_name(from._internal_device_name());
      } else {
        if (_this->_impl_.device_name_.IsDefault()) {
          _this->_internal_set_device_name("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (!from._internal_device_type().empty()) {
        _this->_internal_set_device_type(from._internal_device_type());
      } else {
        if (_this->_impl_.device_type_.IsDefault()) {
          _this->_internal_set_device_type("");
        }
      }
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (!from._internal_firmware_version().empty()) {
        _this->_internal_set_firmware_version(from._internal_firmware_version());
      } else {
        if (_this->_impl_.firmware_version_.IsDefault()) {
          _this->_internal_set_firmware_version("");
        }
      }
    }
    if ((cached_has_bits & 0x00000010U) != 0) {
      if (!from._internal_ip_address().empty()) {
        _this->_internal_set_ip_address(from._internal_ip_address());
      } else {
        if (_this->_impl_.ip_address_.IsDefault()) {
          _this->_internal_set_ip_address("");
        }
      }
    }
    if ((cached_has_bits & 0x00000020U) != 0) {
      if (from._internal_last_heartbeat() != 0) {
        _this->_impl_.last_heartbeat_ = from._impl_.last_heartbeat_;
      }
    }
    if ((cached_has_bits & 0x00000040U) != 0) {
      if (from._internal_port() != 0) {
        _this->_impl_.port_ = from._impl_.port_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DeviceInfo::CopyFrom(const DeviceInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:linxos_device.DeviceInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void DeviceInfo::InternalSwap(DeviceInfo* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.capabilities_.InternalSwap(&other->_impl_.capabilities_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.device_id_, &other->_impl_.device_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.device_name_, &other->_impl_.device_name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.device_type_, &other->_impl_.device_type_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.firmware_version_, &other->_impl_.firmware_version_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.ip_address_, &other->_impl_.ip_address_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DeviceInfo, _impl_.port_)
      + sizeof(DeviceInfo::_impl_.port_)
      - PROTOBUF_FIELD_OFFSET(DeviceInfo, _impl_.last_heartbeat_)>(
          reinterpret_cast<char*>(&_impl_.last_heartbeat_),
          reinterpret_cast<char*>(&other->_impl_.last_heartbeat_));
}

::google::protobuf::Metadata DeviceInfo::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class RegisterDeviceRequest::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<RegisterDeviceRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(RegisterDeviceRequest, _impl_._has_bits_);
};

RegisterDeviceRequest::RegisterDeviceRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, RegisterDeviceRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:linxos_device.RegisterDeviceRequest)
}
PROTOBUF_NDEBUG_INLINE RegisterDeviceRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::linxos_device::RegisterDeviceRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        available_tools_{visibility, arena, from.available_tools_} {}

RegisterDeviceRequest::RegisterDeviceRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const RegisterDeviceRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, RegisterDeviceRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  RegisterDeviceRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.device_info_ = ((cached_has_bits & 0x00000001U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.device_info_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:linxos_device.RegisterDeviceRequest)
}
PROTOBUF_NDEBUG_INLINE RegisterDeviceRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        available_tools_{visibility, arena} {}

inline void RegisterDeviceRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.device_info_ = {};
}
RegisterDeviceRequest::~RegisterDeviceRequest() {
  // @@protoc_insertion_point(destructor:linxos_device.RegisterDeviceRequest)
  SharedDtor(*this);
}
inline void RegisterDeviceRequest::SharedDtor(MessageLite& self) {
  RegisterDeviceRequest& this_ = static_cast<RegisterDeviceRequest&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.device_info_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL RegisterDeviceRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) RegisterDeviceRequest(arena);
}
constexpr auto RegisterDeviceRequest::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(RegisterDeviceRequest, _impl_.available_tools_) +
          decltype(RegisterDeviceRequest::_impl_.available_tools_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(RegisterDeviceRequest), alignof(RegisterDeviceRequest), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&RegisterDeviceRequest::PlacementNew_,
                                 sizeof(RegisterDeviceRequest),
                                 alignof(RegisterDeviceRequest));
  }
}
constexpr auto RegisterDeviceRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_RegisterDeviceRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &RegisterDeviceRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<RegisterDeviceRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &RegisterDeviceRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<RegisterDeviceRequest>(), &RegisterDeviceRequest::ByteSizeLong,
              &RegisterDeviceRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(RegisterDeviceRequest, _impl_._cached_size_),
          false,
      },
      &RegisterDeviceRequest::kDescriptorMethods,
      &descriptor_table_device_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull RegisterDeviceRequest_class_data_ =
        RegisterDeviceRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
RegisterDeviceRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&RegisterDeviceRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(RegisterDeviceRequest_class_data_.tc_table);
  return RegisterDeviceRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 59, 2>
RegisterDeviceRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RegisterDeviceRequest, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    RegisterDeviceRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::linxos_device::RegisterDeviceRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated string available_tools = 2;
    {::_pbi::TcParser::FastUR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(RegisterDeviceRequest, _impl_.available_tools_)}},
    // .linxos_device.DeviceInfo device_info = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(RegisterDeviceRequest, _impl_.device_info_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .linxos_device.DeviceInfo device_info = 1;
    {PROTOBUF_FIELD_OFFSET(RegisterDeviceRequest, _impl_.device_info_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated string available_tools = 2;
    {PROTOBUF_FIELD_OFFSET(RegisterDeviceRequest, _impl_.available_tools_), -1, 0, (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::linxos_device::DeviceInfo>()},
  }},
  {{
    "\43\0\17\0\0\0\0\0"
    "linxos_device.RegisterDeviceRequest"
    "available_tools"
  }},
};
PROTOBUF_NOINLINE void RegisterDeviceRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:linxos_device.RegisterDeviceRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.available_tools_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    ABSL_DCHECK(_impl_.device_info_ != nullptr);
    _impl_.device_info_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL RegisterDeviceRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const RegisterDeviceRequest& this_ = static_cast<const RegisterDeviceRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL RegisterDeviceRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const RegisterDeviceRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:linxos_device.RegisterDeviceRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .linxos_device.DeviceInfo device_info = 1;
  if ((cached_has_bits & 0x00000001U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.device_info_, this_._impl_.device_info_->GetCachedSize(), target,
        stream);
  }

  // repeated string available_tools = 2;
  for (int i = 0, n = this_._internal_available_tools_size(); i < n; ++i) {
    const auto& s = this_._internal_available_tools().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "linxos_device.RegisterDeviceRequest.available_tools");
    target = stream->WriteString(2, s, target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:linxos_device.RegisterDeviceRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t RegisterDeviceRequest::ByteSizeLong(const MessageLite& base) {
  const RegisterDeviceRequest& this_ = static_cast<const RegisterDeviceRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t RegisterDeviceRequest::ByteSizeLong() const {
  const RegisterDeviceRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:linxos_device.RegisterDeviceRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated string available_tools = 2;
    {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_available_tools().size());
      for (int i = 0, n = this_._internal_available_tools().size(); i < n; ++i) {
        total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
            this_._internal_available_tools().Get(i));
      }
    }
  }
   {
    // .linxos_device.DeviceInfo device_info = 1;
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.device_info_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void RegisterDeviceRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RegisterDeviceRequest*>(&to_msg);
  auto& from = static_cast<const RegisterDeviceRequest&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:linxos_device.RegisterDeviceRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_available_tools()->MergeFrom(from._internal_available_tools());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    ABSL_DCHECK(from._impl_.device_info_ != nullptr);
    if (_this->_impl_.device_info_ == nullptr) {
      _this->_impl_.device_info_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.device_info_);
    } else {
      _this->_impl_.device_info_->MergeFrom(*from._impl_.device_info_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RegisterDeviceRequest::CopyFrom(const RegisterDeviceRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:linxos_device.RegisterDeviceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void RegisterDeviceRequest::InternalSwap(RegisterDeviceRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.available_tools_.InternalSwap(&other->_impl_.available_tools_);
  swap(_impl_.device_info_, other->_impl_.device_info_);
}

::google::protobuf::Metadata RegisterDeviceRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class RegisterDeviceResponse::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<RegisterDeviceResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(RegisterDeviceResponse, _impl_._has_bits_);
};

RegisterDeviceResponse::RegisterDeviceResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, RegisterDeviceResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:linxos_device.RegisterDeviceResponse)
}
PROTOBUF_NDEBUG_INLINE RegisterDeviceResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::linxos_device::RegisterDeviceResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        session_id_(arena, from.session_id_) {}

RegisterDeviceResponse::RegisterDeviceResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const RegisterDeviceResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, RegisterDeviceResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  RegisterDeviceResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.status_ = ((cached_has_bits & 0x00000002U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.status_)
                : nullptr;
  _impl_.heartbeat_interval_ = from._impl_.heartbeat_interval_;

  // @@protoc_insertion_point(copy_constructor:linxos_device.RegisterDeviceResponse)
}
PROTOBUF_NDEBUG_INLINE RegisterDeviceResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        session_id_(arena) {}

inline void RegisterDeviceResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, status_),
           0,
           offsetof(Impl_, heartbeat_interval_) -
               offsetof(Impl_, status_) +
               sizeof(Impl_::heartbeat_interval_));
}
RegisterDeviceResponse::~RegisterDeviceResponse() {
  // @@protoc_insertion_point(destructor:linxos_device.RegisterDeviceResponse)
  SharedDtor(*this);
}
inline void RegisterDeviceResponse::SharedDtor(MessageLite& self) {
  RegisterDeviceResponse& this_ = static_cast<RegisterDeviceResponse&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.session_id_.Destroy();
  delete this_._impl_.status_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL RegisterDeviceResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) RegisterDeviceResponse(arena);
}
constexpr auto RegisterDeviceResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(RegisterDeviceResponse),
                                            alignof(RegisterDeviceResponse));
}
constexpr auto RegisterDeviceResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_RegisterDeviceResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &RegisterDeviceResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<RegisterDeviceResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &RegisterDeviceResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<RegisterDeviceResponse>(), &RegisterDeviceResponse::ByteSizeLong,
              &RegisterDeviceResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(RegisterDeviceResponse, _impl_._cached_size_),
          false,
      },
      &RegisterDeviceResponse::kDescriptorMethods,
      &descriptor_table_device_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull RegisterDeviceResponse_class_data_ =
        RegisterDeviceResponse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
RegisterDeviceResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&RegisterDeviceResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(RegisterDeviceResponse_class_data_.tc_table);
  return RegisterDeviceResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 55, 2>
RegisterDeviceResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RegisterDeviceResponse, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    RegisterDeviceResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::linxos_device::RegisterDeviceResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .linxos_device.ResponseStatus status = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 1, 0, PROTOBUF_FIELD_OFFSET(RegisterDeviceResponse, _impl_.status_)}},
    // string session_id = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(RegisterDeviceResponse, _impl_.session_id_)}},
    // int32 heartbeat_interval = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RegisterDeviceResponse, _impl_.heartbeat_interval_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(RegisterDeviceResponse, _impl_.heartbeat_interval_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .linxos_device.ResponseStatus status = 1;
    {PROTOBUF_FIELD_OFFSET(RegisterDeviceResponse, _impl_.status_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string session_id = 2;
    {PROTOBUF_FIELD_OFFSET(RegisterDeviceResponse, _impl_.session_id_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 heartbeat_interval = 3;
    {PROTOBUF_FIELD_OFFSET(RegisterDeviceResponse, _impl_.heartbeat_interval_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::linxos_device::ResponseStatus>()},
  }},
  {{
    "\44\0\12\0\0\0\0\0"
    "linxos_device.RegisterDeviceResponse"
    "session_id"
  }},
};
PROTOBUF_NOINLINE void RegisterDeviceResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:linxos_device.RegisterDeviceResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      _impl_.session_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      ABSL_DCHECK(_impl_.status_ != nullptr);
      _impl_.status_->Clear();
    }
  }
  _impl_.heartbeat_interval_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL RegisterDeviceResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const RegisterDeviceResponse& this_ = static_cast<const RegisterDeviceResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL RegisterDeviceResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const RegisterDeviceResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:linxos_device.RegisterDeviceResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .linxos_device.ResponseStatus status = 1;
  if ((cached_has_bits & 0x00000002U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.status_, this_._impl_.status_->GetCachedSize(), target,
        stream);
  }

  // string session_id = 2;
  if ((cached_has_bits & 0x00000001U) != 0) {
    if (!this_._internal_session_id().empty()) {
      const ::std::string& _s = this_._internal_session_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "linxos_device.RegisterDeviceResponse.session_id");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  // int32 heartbeat_interval = 3;
  if ((cached_has_bits & 0x00000004U) != 0) {
    if (this_._internal_heartbeat_interval() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<3>(
              stream, this_._internal_heartbeat_interval(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:linxos_device.RegisterDeviceResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t RegisterDeviceResponse::ByteSizeLong(const MessageLite& base) {
  const RegisterDeviceResponse& this_ = static_cast<const RegisterDeviceResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t RegisterDeviceResponse::ByteSizeLong() const {
  const RegisterDeviceResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:linxos_device.RegisterDeviceResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    // string session_id = 2;
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_session_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_session_id());
      }
    }
    // .linxos_device.ResponseStatus status = 1;
    if ((cached_has_bits & 0x00000002U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.status_);
    }
    // int32 heartbeat_interval = 3;
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (this_._internal_heartbeat_interval() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_heartbeat_interval());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void RegisterDeviceResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RegisterDeviceResponse*>(&to_msg);
  auto& from = static_cast<const RegisterDeviceResponse&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:linxos_device.RegisterDeviceResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_session_id().empty()) {
        _this->_internal_set_session_id(from._internal_session_id());
      } else {
        if (_this->_impl_.session_id_.IsDefault()) {
          _this->_internal_set_session_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      ABSL_DCHECK(from._impl_.status_ != nullptr);
      if (_this->_impl_.status_ == nullptr) {
        _this->_impl_.status_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.status_);
      } else {
        _this->_impl_.status_->MergeFrom(*from._impl_.status_);
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (from._internal_heartbeat_interval() != 0) {
        _this->_impl_.heartbeat_interval_ = from._impl_.heartbeat_interval_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RegisterDeviceResponse::CopyFrom(const RegisterDeviceResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:linxos_device.RegisterDeviceResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void RegisterDeviceResponse::InternalSwap(RegisterDeviceResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.session_id_, &other->_impl_.session_id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RegisterDeviceResponse, _impl_.heartbeat_interval_)
      + sizeof(RegisterDeviceResponse::_impl_.heartbeat_interval_)
      - PROTOBUF_FIELD_OFFSET(RegisterDeviceResponse, _impl_.status_)>(
          reinterpret_cast<char*>(&_impl_.status_),
          reinterpret_cast<char*>(&other->_impl_.status_));
}

::google::protobuf::Metadata RegisterDeviceResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
HeartbeatRequest_StatusInfoEntry_DoNotUse::HeartbeatRequest_StatusInfoEntry_DoNotUse()
    : SuperType(HeartbeatRequest_StatusInfoEntry_DoNotUse_class_data_.base()) {}
HeartbeatRequest_StatusInfoEntry_DoNotUse::HeartbeatRequest_StatusInfoEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
    : SuperType(arena, HeartbeatRequest_StatusInfoEntry_DoNotUse_class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
HeartbeatRequest_StatusInfoEntry_DoNotUse::HeartbeatRequest_StatusInfoEntry_DoNotUse() : SuperType() {}
HeartbeatRequest_StatusInfoEntry_DoNotUse::HeartbeatRequest_StatusInfoEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
inline void* PROTOBUF_NONNULL HeartbeatRequest_StatusInfoEntry_DoNotUse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) HeartbeatRequest_StatusInfoEntry_DoNotUse(arena);
}
constexpr auto HeartbeatRequest_StatusInfoEntry_DoNotUse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(HeartbeatRequest_StatusInfoEntry_DoNotUse),
                                            alignof(HeartbeatRequest_StatusInfoEntry_DoNotUse));
}
constexpr auto HeartbeatRequest_StatusInfoEntry_DoNotUse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_HeartbeatRequest_StatusInfoEntry_DoNotUse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &HeartbeatRequest_StatusInfoEntry_DoNotUse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<HeartbeatRequest_StatusInfoEntry_DoNotUse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &HeartbeatRequest_StatusInfoEntry_DoNotUse::SharedDtor,
          static_cast<void (::google::protobuf::MessageLite::*)()>(&HeartbeatRequest_StatusInfoEntry_DoNotUse::ClearImpl),
              ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
              ,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(HeartbeatRequest_StatusInfoEntry_DoNotUse, _impl_._cached_size_),
          false,
      },
      &HeartbeatRequest_StatusInfoEntry_DoNotUse::kDescriptorMethods,
      &descriptor_table_device_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull HeartbeatRequest_StatusInfoEntry_DoNotUse_class_data_ =
        HeartbeatRequest_StatusInfoEntry_DoNotUse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
HeartbeatRequest_StatusInfoEntry_DoNotUse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&HeartbeatRequest_StatusInfoEntry_DoNotUse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(HeartbeatRequest_StatusInfoEntry_DoNotUse_class_data_.tc_table);
  return HeartbeatRequest_StatusInfoEntry_DoNotUse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 63, 2>
HeartbeatRequest_StatusInfoEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(HeartbeatRequest_StatusInfoEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    HeartbeatRequest_StatusInfoEntry_DoNotUse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::linxos_device::HeartbeatRequest_StatusInfoEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(HeartbeatRequest_StatusInfoEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(HeartbeatRequest_StatusInfoEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(HeartbeatRequest_StatusInfoEntry_DoNotUse, _impl_.key_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2;
    {PROTOBUF_FIELD_OFFSET(HeartbeatRequest_StatusInfoEntry_DoNotUse, _impl_.value_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\56\3\5\0\0\0\0\0"
    "linxos_device.HeartbeatRequest.StatusInfoEntry"
    "key"
    "value"
  }},
};
// ===================================================================

class HeartbeatRequest::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<HeartbeatRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(HeartbeatRequest, _impl_._has_bits_);
};

HeartbeatRequest::HeartbeatRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, HeartbeatRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:linxos_device.HeartbeatRequest)
}
PROTOBUF_NDEBUG_INLINE HeartbeatRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::linxos_device::HeartbeatRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        status_info_{visibility, arena, from.status_info_},
        device_id_(arena, from.device_id_),
        session_id_(arena, from.session_id_) {}

HeartbeatRequest::HeartbeatRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const HeartbeatRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, HeartbeatRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  HeartbeatRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:linxos_device.HeartbeatRequest)
}
PROTOBUF_NDEBUG_INLINE HeartbeatRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        status_info_{visibility, arena},
        device_id_(arena),
        session_id_(arena) {}

inline void HeartbeatRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
HeartbeatRequest::~HeartbeatRequest() {
  // @@protoc_insertion_point(destructor:linxos_device.HeartbeatRequest)
  SharedDtor(*this);
}
inline void HeartbeatRequest::SharedDtor(MessageLite& self) {
  HeartbeatRequest& this_ = static_cast<HeartbeatRequest&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.device_id_.Destroy();
  this_._impl_.session_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL HeartbeatRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) HeartbeatRequest(arena);
}
constexpr auto HeartbeatRequest::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(HeartbeatRequest, _impl_.status_info_) +
          decltype(HeartbeatRequest::_impl_.status_info_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(HeartbeatRequest, _impl_.status_info_) +
          decltype(HeartbeatRequest::_impl_.status_info_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(HeartbeatRequest), alignof(HeartbeatRequest), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&HeartbeatRequest::PlacementNew_,
                                 sizeof(HeartbeatRequest),
                                 alignof(HeartbeatRequest));
  }
}
constexpr auto HeartbeatRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_HeartbeatRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &HeartbeatRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<HeartbeatRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &HeartbeatRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<HeartbeatRequest>(), &HeartbeatRequest::ByteSizeLong,
              &HeartbeatRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(HeartbeatRequest, _impl_._cached_size_),
          false,
      },
      &HeartbeatRequest::kDescriptorMethods,
      &descriptor_table_device_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull HeartbeatRequest_class_data_ =
        HeartbeatRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
HeartbeatRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&HeartbeatRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(HeartbeatRequest_class_data_.tc_table);
  return HeartbeatRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 3, 1, 69, 2>
HeartbeatRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(HeartbeatRequest, _impl_._has_bits_),
    0, // no _extensions_
    3, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    HeartbeatRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::linxos_device::HeartbeatRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string session_id = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(HeartbeatRequest, _impl_.session_id_)}},
    // string device_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(HeartbeatRequest, _impl_.device_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string device_id = 1;
    {PROTOBUF_FIELD_OFFSET(HeartbeatRequest, _impl_.device_id_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string session_id = 2;
    {PROTOBUF_FIELD_OFFSET(HeartbeatRequest, _impl_.session_id_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // map<string, string> status_info = 3;
    {PROTOBUF_FIELD_OFFSET(HeartbeatRequest, _impl_.status_info_), -1, 0, (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
  }},
  {{
      {::_pbi::TcParser::GetMapAuxInfo(1, 0, 0,
                                       9, 9,
                                       0)},
  }},
  {{
    "\36\11\12\13\0\0\0\0"
    "linxos_device.HeartbeatRequest"
    "device_id"
    "session_id"
    "status_info"
  }},
};
PROTOBUF_NOINLINE void HeartbeatRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:linxos_device.HeartbeatRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.status_info_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      _impl_.device_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      _impl_.session_id_.ClearNonDefaultToEmpty();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL HeartbeatRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const HeartbeatRequest& this_ = static_cast<const HeartbeatRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL HeartbeatRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const HeartbeatRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:linxos_device.HeartbeatRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string device_id = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_device_id().empty()) {
      const ::std::string& _s = this_._internal_device_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "linxos_device.HeartbeatRequest.device_id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // string session_id = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (!this_._internal_session_id().empty()) {
      const ::std::string& _s = this_._internal_session_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "linxos_device.HeartbeatRequest.session_id");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  // map<string, string> status_info = 3;
  if (!this_._internal_status_info().empty()) {
    using MapType = ::google::protobuf::Map<::std::string, ::std::string>;
    using WireHelper = _pbi::MapEntryFuncs<::std::string, ::std::string,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_STRING>;
    const auto& field = this_._internal_status_info();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            3, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "linxos_device.HeartbeatRequest.status_info");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "linxos_device.HeartbeatRequest.status_info");
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            3, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "linxos_device.HeartbeatRequest.status_info");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "linxos_device.HeartbeatRequest.status_info");
      }
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:linxos_device.HeartbeatRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t HeartbeatRequest::ByteSizeLong(const MessageLite& base) {
  const HeartbeatRequest& this_ = static_cast<const HeartbeatRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t HeartbeatRequest::ByteSizeLong() const {
  const HeartbeatRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:linxos_device.HeartbeatRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // map<string, string> status_info = 3;
    {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_status_info_size());
      for (const auto& entry : this_._internal_status_info()) {
        total_size += _pbi::MapEntryFuncs<::std::string, ::std::string,
                                       _pbi::WireFormatLite::TYPE_STRING,
                                       _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    // string device_id = 1;
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_device_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_device_id());
      }
    }
    // string session_id = 2;
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!this_._internal_session_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_session_id());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void HeartbeatRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<HeartbeatRequest*>(&to_msg);
  auto& from = static_cast<const HeartbeatRequest&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:linxos_device.HeartbeatRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.status_info_.MergeFrom(from._impl_.status_info_);
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_device_id().empty()) {
        _this->_internal_set_device_id(from._internal_device_id());
      } else {
        if (_this->_impl_.device_id_.IsDefault()) {
          _this->_internal_set_device_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!from._internal_session_id().empty()) {
        _this->_internal_set_session_id(from._internal_session_id());
      } else {
        if (_this->_impl_.session_id_.IsDefault()) {
          _this->_internal_set_session_id("");
        }
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void HeartbeatRequest::CopyFrom(const HeartbeatRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:linxos_device.HeartbeatRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void HeartbeatRequest::InternalSwap(HeartbeatRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.status_info_.InternalSwap(&other->_impl_.status_info_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.device_id_, &other->_impl_.device_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.session_id_, &other->_impl_.session_id_, arena);
}

::google::protobuf::Metadata HeartbeatRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class HeartbeatResponse::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<HeartbeatResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(HeartbeatResponse, _impl_._has_bits_);
};

HeartbeatResponse::HeartbeatResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, HeartbeatResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:linxos_device.HeartbeatResponse)
}
PROTOBUF_NDEBUG_INLINE HeartbeatResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::linxos_device::HeartbeatResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

HeartbeatResponse::HeartbeatResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const HeartbeatResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, HeartbeatResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  HeartbeatResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.status_ = ((cached_has_bits & 0x00000001U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.status_)
                : nullptr;
  _impl_.keep_alive_ = from._impl_.keep_alive_;

  // @@protoc_insertion_point(copy_constructor:linxos_device.HeartbeatResponse)
}
PROTOBUF_NDEBUG_INLINE HeartbeatResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void HeartbeatResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, status_),
           0,
           offsetof(Impl_, keep_alive_) -
               offsetof(Impl_, status_) +
               sizeof(Impl_::keep_alive_));
}
HeartbeatResponse::~HeartbeatResponse() {
  // @@protoc_insertion_point(destructor:linxos_device.HeartbeatResponse)
  SharedDtor(*this);
}
inline void HeartbeatResponse::SharedDtor(MessageLite& self) {
  HeartbeatResponse& this_ = static_cast<HeartbeatResponse&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.status_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL HeartbeatResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) HeartbeatResponse(arena);
}
constexpr auto HeartbeatResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(HeartbeatResponse),
                                            alignof(HeartbeatResponse));
}
constexpr auto HeartbeatResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_HeartbeatResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &HeartbeatResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<HeartbeatResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &HeartbeatResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<HeartbeatResponse>(), &HeartbeatResponse::ByteSizeLong,
              &HeartbeatResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(HeartbeatResponse, _impl_._cached_size_),
          false,
      },
      &HeartbeatResponse::kDescriptorMethods,
      &descriptor_table_device_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull HeartbeatResponse_class_data_ =
        HeartbeatResponse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
HeartbeatResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&HeartbeatResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(HeartbeatResponse_class_data_.tc_table);
  return HeartbeatResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2>
HeartbeatResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(HeartbeatResponse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    HeartbeatResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::linxos_device::HeartbeatResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // bool keep_alive = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(HeartbeatResponse, _impl_.keep_alive_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(HeartbeatResponse, _impl_.keep_alive_)}},
    // .linxos_device.ResponseStatus status = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(HeartbeatResponse, _impl_.status_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .linxos_device.ResponseStatus status = 1;
    {PROTOBUF_FIELD_OFFSET(HeartbeatResponse, _impl_.status_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // bool keep_alive = 2;
    {PROTOBUF_FIELD_OFFSET(HeartbeatResponse, _impl_.keep_alive_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kBool)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::linxos_device::ResponseStatus>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void HeartbeatResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:linxos_device.HeartbeatResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    ABSL_DCHECK(_impl_.status_ != nullptr);
    _impl_.status_->Clear();
  }
  _impl_.keep_alive_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL HeartbeatResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const HeartbeatResponse& this_ = static_cast<const HeartbeatResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL HeartbeatResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const HeartbeatResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:linxos_device.HeartbeatResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .linxos_device.ResponseStatus status = 1;
  if ((cached_has_bits & 0x00000001U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.status_, this_._impl_.status_->GetCachedSize(), target,
        stream);
  }

  // bool keep_alive = 2;
  if ((cached_has_bits & 0x00000002U) != 0) {
    if (this_._internal_keep_alive() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          2, this_._internal_keep_alive(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:linxos_device.HeartbeatResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t HeartbeatResponse::ByteSizeLong(const MessageLite& base) {
  const HeartbeatResponse& this_ = static_cast<const HeartbeatResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t HeartbeatResponse::ByteSizeLong() const {
  const HeartbeatResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:linxos_device.HeartbeatResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    // .linxos_device.ResponseStatus status = 1;
    if ((cached_has_bits & 0x00000001U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.status_);
    }
    // bool keep_alive = 2;
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (this_._internal_keep_alive() != 0) {
        total_size += 2;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void HeartbeatResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<HeartbeatResponse*>(&to_msg);
  auto& from = static_cast<const HeartbeatResponse&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:linxos_device.HeartbeatResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      ABSL_DCHECK(from._impl_.status_ != nullptr);
      if (_this->_impl_.status_ == nullptr) {
        _this->_impl_.status_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.status_);
      } else {
        _this->_impl_.status_->MergeFrom(*from._impl_.status_);
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (from._internal_keep_alive() != 0) {
        _this->_impl_.keep_alive_ = from._impl_.keep_alive_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void HeartbeatResponse::CopyFrom(const HeartbeatResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:linxos_device.HeartbeatResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void HeartbeatResponse::InternalSwap(HeartbeatResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(HeartbeatResponse, _impl_.keep_alive_)
      + sizeof(HeartbeatResponse::_impl_.keep_alive_)
      - PROTOBUF_FIELD_OFFSET(HeartbeatResponse, _impl_.status_)>(
          reinterpret_cast<char*>(&_impl_.status_),
          reinterpret_cast<char*>(&other->_impl_.status_));
}

::google::protobuf::Metadata HeartbeatResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class VoiceSpeakRequest::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<VoiceSpeakRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(VoiceSpeakRequest, _impl_._has_bits_);
};

VoiceSpeakRequest::VoiceSpeakRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, VoiceSpeakRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:linxos_device.VoiceSpeakRequest)
}
PROTOBUF_NDEBUG_INLINE VoiceSpeakRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::linxos_device::VoiceSpeakRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        device_id_(arena, from.device_id_),
        text_(arena, from.text_),
        voice_type_(arena, from.voice_type_) {}

VoiceSpeakRequest::VoiceSpeakRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const VoiceSpeakRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, VoiceSpeakRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  VoiceSpeakRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, speed_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, speed_),
           offsetof(Impl_, volume_) -
               offsetof(Impl_, speed_) +
               sizeof(Impl_::volume_));

  // @@protoc_insertion_point(copy_constructor:linxos_device.VoiceSpeakRequest)
}
PROTOBUF_NDEBUG_INLINE VoiceSpeakRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        device_id_(arena),
        text_(arena),
        voice_type_(arena) {}

inline void VoiceSpeakRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, speed_),
           0,
           offsetof(Impl_, volume_) -
               offsetof(Impl_, speed_) +
               sizeof(Impl_::volume_));
}
VoiceSpeakRequest::~VoiceSpeakRequest() {
  // @@protoc_insertion_point(destructor:linxos_device.VoiceSpeakRequest)
  SharedDtor(*this);
}
inline void VoiceSpeakRequest::SharedDtor(MessageLite& self) {
  VoiceSpeakRequest& this_ = static_cast<VoiceSpeakRequest&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.device_id_.Destroy();
  this_._impl_.text_.Destroy();
  this_._impl_.voice_type_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL VoiceSpeakRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) VoiceSpeakRequest(arena);
}
constexpr auto VoiceSpeakRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(VoiceSpeakRequest),
                                            alignof(VoiceSpeakRequest));
}
constexpr auto VoiceSpeakRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_VoiceSpeakRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &VoiceSpeakRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<VoiceSpeakRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &VoiceSpeakRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<VoiceSpeakRequest>(), &VoiceSpeakRequest::ByteSizeLong,
              &VoiceSpeakRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(VoiceSpeakRequest, _impl_._cached_size_),
          false,
      },
      &VoiceSpeakRequest::kDescriptorMethods,
      &descriptor_table_device_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull VoiceSpeakRequest_class_data_ =
        VoiceSpeakRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
VoiceSpeakRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&VoiceSpeakRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(VoiceSpeakRequest_class_data_.tc_table);
  return VoiceSpeakRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 63, 2>
VoiceSpeakRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(VoiceSpeakRequest, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    VoiceSpeakRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::linxos_device::VoiceSpeakRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string device_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(VoiceSpeakRequest, _impl_.device_id_)}},
    // string text = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(VoiceSpeakRequest, _impl_.text_)}},
    // float speed = 3;
    {::_pbi::TcParser::FastF32S1,
     {29, 3, 0, PROTOBUF_FIELD_OFFSET(VoiceSpeakRequest, _impl_.speed_)}},
    // int32 volume = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(VoiceSpeakRequest, _impl_.volume_), 4>(),
     {32, 4, 0, PROTOBUF_FIELD_OFFSET(VoiceSpeakRequest, _impl_.volume_)}},
    // string voice_type = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 2, 0, PROTOBUF_FIELD_OFFSET(VoiceSpeakRequest, _impl_.voice_type_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string device_id = 1;
    {PROTOBUF_FIELD_OFFSET(VoiceSpeakRequest, _impl_.device_id_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string text = 2;
    {PROTOBUF_FIELD_OFFSET(VoiceSpeakRequest, _impl_.text_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // float speed = 3;
    {PROTOBUF_FIELD_OFFSET(VoiceSpeakRequest, _impl_.speed_), _Internal::kHasBitsOffset + 3, 0, (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // int32 volume = 4;
    {PROTOBUF_FIELD_OFFSET(VoiceSpeakRequest, _impl_.volume_), _Internal::kHasBitsOffset + 4, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // string voice_type = 5;
    {PROTOBUF_FIELD_OFFSET(VoiceSpeakRequest, _impl_.voice_type_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\37\11\4\0\0\12\0\0"
    "linxos_device.VoiceSpeakRequest"
    "device_id"
    "text"
    "voice_type"
  }},
};
PROTOBUF_NOINLINE void VoiceSpeakRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:linxos_device.VoiceSpeakRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      _impl_.device_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      _impl_.text_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      _impl_.voice_type_.ClearNonDefaultToEmpty();
    }
  }
  if ((cached_has_bits & 0x00000018U) != 0) {
    ::memset(&_impl_.speed_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.volume_) -
        reinterpret_cast<char*>(&_impl_.speed_)) + sizeof(_impl_.volume_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL VoiceSpeakRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const VoiceSpeakRequest& this_ = static_cast<const VoiceSpeakRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL VoiceSpeakRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const VoiceSpeakRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:linxos_device.VoiceSpeakRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string device_id = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_device_id().empty()) {
      const ::std::string& _s = this_._internal_device_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "linxos_device.VoiceSpeakRequest.device_id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // string text = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (!this_._internal_text().empty()) {
      const ::std::string& _s = this_._internal_text();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "linxos_device.VoiceSpeakRequest.text");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  // float speed = 3;
  if ((this_._impl_._has_bits_[0] & 0x00000008U) != 0) {
    if (::absl::bit_cast<::uint32_t>(this_._internal_speed()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteFloatToArray(
          3, this_._internal_speed(), target);
    }
  }

  // int32 volume = 4;
  if ((this_._impl_._has_bits_[0] & 0x00000010U) != 0) {
    if (this_._internal_volume() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<4>(
              stream, this_._internal_volume(), target);
    }
  }

  // string voice_type = 5;
  if ((this_._impl_._has_bits_[0] & 0x00000004U) != 0) {
    if (!this_._internal_voice_type().empty()) {
      const ::std::string& _s = this_._internal_voice_type();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "linxos_device.VoiceSpeakRequest.voice_type");
      target = stream->WriteStringMaybeAliased(5, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:linxos_device.VoiceSpeakRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t VoiceSpeakRequest::ByteSizeLong(const MessageLite& base) {
  const VoiceSpeakRequest& this_ = static_cast<const VoiceSpeakRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t VoiceSpeakRequest::ByteSizeLong() const {
  const VoiceSpeakRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:linxos_device.VoiceSpeakRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fU) != 0) {
    // string device_id = 1;
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_device_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_device_id());
      }
    }
    // string text = 2;
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!this_._internal_text().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_text());
      }
    }
    // string voice_type = 5;
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (!this_._internal_voice_type().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_voice_type());
      }
    }
    // float speed = 3;
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (::absl::bit_cast<::uint32_t>(this_._internal_speed()) != 0) {
        total_size += 5;
      }
    }
    // int32 volume = 4;
    if ((cached_has_bits & 0x00000010U) != 0) {
      if (this_._internal_volume() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_volume());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void VoiceSpeakRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<VoiceSpeakRequest*>(&to_msg);
  auto& from = static_cast<const VoiceSpeakRequest&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:linxos_device.VoiceSpeakRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_device_id().empty()) {
        _this->_internal_set_device_id(from._internal_device_id());
      } else {
        if (_this->_impl_.device_id_.IsDefault()) {
          _this->_internal_set_device_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!from._internal_text().empty()) {
        _this->_internal_set_text(from._internal_text());
      } else {
        if (_this->_impl_.text_.IsDefault()) {
          _this->_internal_set_text("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (!from._internal_voice_type().empty()) {
        _this->_internal_set_voice_type(from._internal_voice_type());
      } else {
        if (_this->_impl_.voice_type_.IsDefault()) {
          _this->_internal_set_voice_type("");
        }
      }
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (::absl::bit_cast<::uint32_t>(from._internal_speed()) != 0) {
        _this->_impl_.speed_ = from._impl_.speed_;
      }
    }
    if ((cached_has_bits & 0x00000010U) != 0) {
      if (from._internal_volume() != 0) {
        _this->_impl_.volume_ = from._impl_.volume_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void VoiceSpeakRequest::CopyFrom(const VoiceSpeakRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:linxos_device.VoiceSpeakRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void VoiceSpeakRequest::InternalSwap(VoiceSpeakRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.device_id_, &other->_impl_.device_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.text_, &other->_impl_.text_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.voice_type_, &other->_impl_.voice_type_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(VoiceSpeakRequest, _impl_.volume_)
      + sizeof(VoiceSpeakRequest::_impl_.volume_)
      - PROTOBUF_FIELD_OFFSET(VoiceSpeakRequest, _impl_.speed_)>(
          reinterpret_cast<char*>(&_impl_.speed_),
          reinterpret_cast<char*>(&other->_impl_.speed_));
}

::google::protobuf::Metadata VoiceSpeakRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class VoiceSpeakResponse::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<VoiceSpeakResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(VoiceSpeakResponse, _impl_._has_bits_);
};

VoiceSpeakResponse::VoiceSpeakResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, VoiceSpeakResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:linxos_device.VoiceSpeakResponse)
}
PROTOBUF_NDEBUG_INLINE VoiceSpeakResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::linxos_device::VoiceSpeakResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        audio_id_(arena, from.audio_id_) {}

VoiceSpeakResponse::VoiceSpeakResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const VoiceSpeakResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, VoiceSpeakResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  VoiceSpeakResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.status_ = ((cached_has_bits & 0x00000002U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.status_)
                : nullptr;
  _impl_.duration_ = from._impl_.duration_;

  // @@protoc_insertion_point(copy_constructor:linxos_device.VoiceSpeakResponse)
}
PROTOBUF_NDEBUG_INLINE VoiceSpeakResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        audio_id_(arena) {}

inline void VoiceSpeakResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, status_),
           0,
           offsetof(Impl_, duration_) -
               offsetof(Impl_, status_) +
               sizeof(Impl_::duration_));
}
VoiceSpeakResponse::~VoiceSpeakResponse() {
  // @@protoc_insertion_point(destructor:linxos_device.VoiceSpeakResponse)
  SharedDtor(*this);
}
inline void VoiceSpeakResponse::SharedDtor(MessageLite& self) {
  VoiceSpeakResponse& this_ = static_cast<VoiceSpeakResponse&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.audio_id_.Destroy();
  delete this_._impl_.status_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL VoiceSpeakResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) VoiceSpeakResponse(arena);
}
constexpr auto VoiceSpeakResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(VoiceSpeakResponse),
                                            alignof(VoiceSpeakResponse));
}
constexpr auto VoiceSpeakResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_VoiceSpeakResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &VoiceSpeakResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<VoiceSpeakResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &VoiceSpeakResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<VoiceSpeakResponse>(), &VoiceSpeakResponse::ByteSizeLong,
              &VoiceSpeakResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(VoiceSpeakResponse, _impl_._cached_size_),
          false,
      },
      &VoiceSpeakResponse::kDescriptorMethods,
      &descriptor_table_device_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull VoiceSpeakResponse_class_data_ =
        VoiceSpeakResponse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
VoiceSpeakResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&VoiceSpeakResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(VoiceSpeakResponse_class_data_.tc_table);
  return VoiceSpeakResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 49, 2>
VoiceSpeakResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(VoiceSpeakResponse, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    VoiceSpeakResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::linxos_device::VoiceSpeakResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .linxos_device.ResponseStatus status = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 1, 0, PROTOBUF_FIELD_OFFSET(VoiceSpeakResponse, _impl_.status_)}},
    // float duration = 2;
    {::_pbi::TcParser::FastF32S1,
     {21, 2, 0, PROTOBUF_FIELD_OFFSET(VoiceSpeakResponse, _impl_.duration_)}},
    // string audio_id = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(VoiceSpeakResponse, _impl_.audio_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .linxos_device.ResponseStatus status = 1;
    {PROTOBUF_FIELD_OFFSET(VoiceSpeakResponse, _impl_.status_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // float duration = 2;
    {PROTOBUF_FIELD_OFFSET(VoiceSpeakResponse, _impl_.duration_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // string audio_id = 3;
    {PROTOBUF_FIELD_OFFSET(VoiceSpeakResponse, _impl_.audio_id_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::linxos_device::ResponseStatus>()},
  }},
  {{
    "\40\0\0\10\0\0\0\0"
    "linxos_device.VoiceSpeakResponse"
    "audio_id"
  }},
};
PROTOBUF_NOINLINE void VoiceSpeakResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:linxos_device.VoiceSpeakResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      _impl_.audio_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      ABSL_DCHECK(_impl_.status_ != nullptr);
      _impl_.status_->Clear();
    }
  }
  _impl_.duration_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL VoiceSpeakResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const VoiceSpeakResponse& this_ = static_cast<const VoiceSpeakResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL VoiceSpeakResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const VoiceSpeakResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:linxos_device.VoiceSpeakResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .linxos_device.ResponseStatus status = 1;
  if ((cached_has_bits & 0x00000002U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.status_, this_._impl_.status_->GetCachedSize(), target,
        stream);
  }

  // float duration = 2;
  if ((cached_has_bits & 0x00000004U) != 0) {
    if (::absl::bit_cast<::uint32_t>(this_._internal_duration()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteFloatToArray(
          2, this_._internal_duration(), target);
    }
  }

  // string audio_id = 3;
  if ((cached_has_bits & 0x00000001U) != 0) {
    if (!this_._internal_audio_id().empty()) {
      const ::std::string& _s = this_._internal_audio_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "linxos_device.VoiceSpeakResponse.audio_id");
      target = stream->WriteStringMaybeAliased(3, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:linxos_device.VoiceSpeakResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t VoiceSpeakResponse::ByteSizeLong(const MessageLite& base) {
  const VoiceSpeakResponse& this_ = static_cast<const VoiceSpeakResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t VoiceSpeakResponse::ByteSizeLong() const {
  const VoiceSpeakResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:linxos_device.VoiceSpeakResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    // string audio_id = 3;
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_audio_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_audio_id());
      }
    }
    // .linxos_device.ResponseStatus status = 1;
    if ((cached_has_bits & 0x00000002U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.status_);
    }
    // float duration = 2;
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (::absl::bit_cast<::uint32_t>(this_._internal_duration()) != 0) {
        total_size += 5;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void VoiceSpeakResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<VoiceSpeakResponse*>(&to_msg);
  auto& from = static_cast<const VoiceSpeakResponse&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:linxos_device.VoiceSpeakResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_audio_id().empty()) {
        _this->_internal_set_audio_id(from._internal_audio_id());
      } else {
        if (_this->_impl_.audio_id_.IsDefault()) {
          _this->_internal_set_audio_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      ABSL_DCHECK(from._impl_.status_ != nullptr);
      if (_this->_impl_.status_ == nullptr) {
        _this->_impl_.status_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.status_);
      } else {
        _this->_impl_.status_->MergeFrom(*from._impl_.status_);
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (::absl::bit_cast<::uint32_t>(from._internal_duration()) != 0) {
        _this->_impl_.duration_ = from._impl_.duration_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void VoiceSpeakResponse::CopyFrom(const VoiceSpeakResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:linxos_device.VoiceSpeakResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void VoiceSpeakResponse::InternalSwap(VoiceSpeakResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.audio_id_, &other->_impl_.audio_id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(VoiceSpeakResponse, _impl_.duration_)
      + sizeof(VoiceSpeakResponse::_impl_.duration_)
      - PROTOBUF_FIELD_OFFSET(VoiceSpeakResponse, _impl_.status_)>(
          reinterpret_cast<char*>(&_impl_.status_),
          reinterpret_cast<char*>(&other->_impl_.status_));
}

::google::protobuf::Metadata VoiceSpeakResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class VoiceVolumeRequest::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<VoiceVolumeRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(VoiceVolumeRequest, _impl_._has_bits_);
};

VoiceVolumeRequest::VoiceVolumeRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, VoiceVolumeRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:linxos_device.VoiceVolumeRequest)
}
PROTOBUF_NDEBUG_INLINE VoiceVolumeRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::linxos_device::VoiceVolumeRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        device_id_(arena, from.device_id_) {}

VoiceVolumeRequest::VoiceVolumeRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const VoiceVolumeRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, VoiceVolumeRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  VoiceVolumeRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.volume_ = from._impl_.volume_;

  // @@protoc_insertion_point(copy_constructor:linxos_device.VoiceVolumeRequest)
}
PROTOBUF_NDEBUG_INLINE VoiceVolumeRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        device_id_(arena) {}

inline void VoiceVolumeRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.volume_ = {};
}
VoiceVolumeRequest::~VoiceVolumeRequest() {
  // @@protoc_insertion_point(destructor:linxos_device.VoiceVolumeRequest)
  SharedDtor(*this);
}
inline void VoiceVolumeRequest::SharedDtor(MessageLite& self) {
  VoiceVolumeRequest& this_ = static_cast<VoiceVolumeRequest&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.device_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL VoiceVolumeRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) VoiceVolumeRequest(arena);
}
constexpr auto VoiceVolumeRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(VoiceVolumeRequest),
                                            alignof(VoiceVolumeRequest));
}
constexpr auto VoiceVolumeRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_VoiceVolumeRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &VoiceVolumeRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<VoiceVolumeRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &VoiceVolumeRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<VoiceVolumeRequest>(), &VoiceVolumeRequest::ByteSizeLong,
              &VoiceVolumeRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(VoiceVolumeRequest, _impl_._cached_size_),
          false,
      },
      &VoiceVolumeRequest::kDescriptorMethods,
      &descriptor_table_device_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull VoiceVolumeRequest_class_data_ =
        VoiceVolumeRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
VoiceVolumeRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&VoiceVolumeRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(VoiceVolumeRequest_class_data_.tc_table);
  return VoiceVolumeRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 50, 2>
VoiceVolumeRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(VoiceVolumeRequest, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    VoiceVolumeRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::linxos_device::VoiceVolumeRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int32 volume = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(VoiceVolumeRequest, _impl_.volume_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(VoiceVolumeRequest, _impl_.volume_)}},
    // string device_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(VoiceVolumeRequest, _impl_.device_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string device_id = 1;
    {PROTOBUF_FIELD_OFFSET(VoiceVolumeRequest, _impl_.device_id_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 volume = 2;
    {PROTOBUF_FIELD_OFFSET(VoiceVolumeRequest, _impl_.volume_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
    "\40\11\0\0\0\0\0\0"
    "linxos_device.VoiceVolumeRequest"
    "device_id"
  }},
};
PROTOBUF_NOINLINE void VoiceVolumeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:linxos_device.VoiceVolumeRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    _impl_.device_id_.ClearNonDefaultToEmpty();
  }
  _impl_.volume_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL VoiceVolumeRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const VoiceVolumeRequest& this_ = static_cast<const VoiceVolumeRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL VoiceVolumeRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const VoiceVolumeRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:linxos_device.VoiceVolumeRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string device_id = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_device_id().empty()) {
      const ::std::string& _s = this_._internal_device_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "linxos_device.VoiceVolumeRequest.device_id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // int32 volume = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (this_._internal_volume() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<2>(
              stream, this_._internal_volume(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:linxos_device.VoiceVolumeRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t VoiceVolumeRequest::ByteSizeLong(const MessageLite& base) {
  const VoiceVolumeRequest& this_ = static_cast<const VoiceVolumeRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t VoiceVolumeRequest::ByteSizeLong() const {
  const VoiceVolumeRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:linxos_device.VoiceVolumeRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    // string device_id = 1;
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_device_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_device_id());
      }
    }
    // int32 volume = 2;
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (this_._internal_volume() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_volume());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void VoiceVolumeRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<VoiceVolumeRequest*>(&to_msg);
  auto& from = static_cast<const VoiceVolumeRequest&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:linxos_device.VoiceVolumeRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_device_id().empty()) {
        _this->_internal_set_device_id(from._internal_device_id());
      } else {
        if (_this->_impl_.device_id_.IsDefault()) {
          _this->_internal_set_device_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (from._internal_volume() != 0) {
        _this->_impl_.volume_ = from._impl_.volume_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void VoiceVolumeRequest::CopyFrom(const VoiceVolumeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:linxos_device.VoiceVolumeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void VoiceVolumeRequest::InternalSwap(VoiceVolumeRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.device_id_, &other->_impl_.device_id_, arena);
  swap(_impl_.volume_, other->_impl_.volume_);
}

::google::protobuf::Metadata VoiceVolumeRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class VoiceVolumeResponse::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<VoiceVolumeResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(VoiceVolumeResponse, _impl_._has_bits_);
};

VoiceVolumeResponse::VoiceVolumeResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, VoiceVolumeResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:linxos_device.VoiceVolumeResponse)
}
PROTOBUF_NDEBUG_INLINE VoiceVolumeResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::linxos_device::VoiceVolumeResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

VoiceVolumeResponse::VoiceVolumeResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const VoiceVolumeResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, VoiceVolumeResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  VoiceVolumeResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.status_ = ((cached_has_bits & 0x00000001U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.status_)
                : nullptr;
  _impl_.current_volume_ = from._impl_.current_volume_;

  // @@protoc_insertion_point(copy_constructor:linxos_device.VoiceVolumeResponse)
}
PROTOBUF_NDEBUG_INLINE VoiceVolumeResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void VoiceVolumeResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, status_),
           0,
           offsetof(Impl_, current_volume_) -
               offsetof(Impl_, status_) +
               sizeof(Impl_::current_volume_));
}
VoiceVolumeResponse::~VoiceVolumeResponse() {
  // @@protoc_insertion_point(destructor:linxos_device.VoiceVolumeResponse)
  SharedDtor(*this);
}
inline void VoiceVolumeResponse::SharedDtor(MessageLite& self) {
  VoiceVolumeResponse& this_ = static_cast<VoiceVolumeResponse&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.status_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL VoiceVolumeResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) VoiceVolumeResponse(arena);
}
constexpr auto VoiceVolumeResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(VoiceVolumeResponse),
                                            alignof(VoiceVolumeResponse));
}
constexpr auto VoiceVolumeResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_VoiceVolumeResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &VoiceVolumeResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<VoiceVolumeResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &VoiceVolumeResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<VoiceVolumeResponse>(), &VoiceVolumeResponse::ByteSizeLong,
              &VoiceVolumeResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(VoiceVolumeResponse, _impl_._cached_size_),
          false,
      },
      &VoiceVolumeResponse::kDescriptorMethods,
      &descriptor_table_device_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull VoiceVolumeResponse_class_data_ =
        VoiceVolumeResponse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
VoiceVolumeResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&VoiceVolumeResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(VoiceVolumeResponse_class_data_.tc_table);
  return VoiceVolumeResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2>
VoiceVolumeResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(VoiceVolumeResponse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    VoiceVolumeResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::linxos_device::VoiceVolumeResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int32 current_volume = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(VoiceVolumeResponse, _impl_.current_volume_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(VoiceVolumeResponse, _impl_.current_volume_)}},
    // .linxos_device.ResponseStatus status = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(VoiceVolumeResponse, _impl_.status_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .linxos_device.ResponseStatus status = 1;
    {PROTOBUF_FIELD_OFFSET(VoiceVolumeResponse, _impl_.status_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // int32 current_volume = 2;
    {PROTOBUF_FIELD_OFFSET(VoiceVolumeResponse, _impl_.current_volume_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::linxos_device::ResponseStatus>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void VoiceVolumeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:linxos_device.VoiceVolumeResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    ABSL_DCHECK(_impl_.status_ != nullptr);
    _impl_.status_->Clear();
  }
  _impl_.current_volume_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL VoiceVolumeResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const VoiceVolumeResponse& this_ = static_cast<const VoiceVolumeResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL VoiceVolumeResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const VoiceVolumeResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:linxos_device.VoiceVolumeResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .linxos_device.ResponseStatus status = 1;
  if ((cached_has_bits & 0x00000001U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.status_, this_._impl_.status_->GetCachedSize(), target,
        stream);
  }

  // int32 current_volume = 2;
  if ((cached_has_bits & 0x00000002U) != 0) {
    if (this_._internal_current_volume() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<2>(
              stream, this_._internal_current_volume(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:linxos_device.VoiceVolumeResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t VoiceVolumeResponse::ByteSizeLong(const MessageLite& base) {
  const VoiceVolumeResponse& this_ = static_cast<const VoiceVolumeResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t VoiceVolumeResponse::ByteSizeLong() const {
  const VoiceVolumeResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:linxos_device.VoiceVolumeResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    // .linxos_device.ResponseStatus status = 1;
    if ((cached_has_bits & 0x00000001U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.status_);
    }
    // int32 current_volume = 2;
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (this_._internal_current_volume() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_current_volume());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void VoiceVolumeResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<VoiceVolumeResponse*>(&to_msg);
  auto& from = static_cast<const VoiceVolumeResponse&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:linxos_device.VoiceVolumeResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      ABSL_DCHECK(from._impl_.status_ != nullptr);
      if (_this->_impl_.status_ == nullptr) {
        _this->_impl_.status_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.status_);
      } else {
        _this->_impl_.status_->MergeFrom(*from._impl_.status_);
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (from._internal_current_volume() != 0) {
        _this->_impl_.current_volume_ = from._impl_.current_volume_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void VoiceVolumeResponse::CopyFrom(const VoiceVolumeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:linxos_device.VoiceVolumeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void VoiceVolumeResponse::InternalSwap(VoiceVolumeResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(VoiceVolumeResponse, _impl_.current_volume_)
      + sizeof(VoiceVolumeResponse::_impl_.current_volume_)
      - PROTOBUF_FIELD_OFFSET(VoiceVolumeResponse, _impl_.status_)>(
          reinterpret_cast<char*>(&_impl_.status_),
          reinterpret_cast<char*>(&other->_impl_.status_));
}

::google::protobuf::Metadata VoiceVolumeResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class DisplayExpressionRequest::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<DisplayExpressionRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(DisplayExpressionRequest, _impl_._has_bits_);
};

DisplayExpressionRequest::DisplayExpressionRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, DisplayExpressionRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:linxos_device.DisplayExpressionRequest)
}
PROTOBUF_NDEBUG_INLINE DisplayExpressionRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::linxos_device::DisplayExpressionRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        device_id_(arena, from.device_id_),
        expression_(arena, from.expression_) {}

DisplayExpressionRequest::DisplayExpressionRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const DisplayExpressionRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, DisplayExpressionRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  DisplayExpressionRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, duration_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, duration_),
           offsetof(Impl_, intensity_) -
               offsetof(Impl_, duration_) +
               sizeof(Impl_::intensity_));

  // @@protoc_insertion_point(copy_constructor:linxos_device.DisplayExpressionRequest)
}
PROTOBUF_NDEBUG_INLINE DisplayExpressionRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        device_id_(arena),
        expression_(arena) {}

inline void DisplayExpressionRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, duration_),
           0,
           offsetof(Impl_, intensity_) -
               offsetof(Impl_, duration_) +
               sizeof(Impl_::intensity_));
}
DisplayExpressionRequest::~DisplayExpressionRequest() {
  // @@protoc_insertion_point(destructor:linxos_device.DisplayExpressionRequest)
  SharedDtor(*this);
}
inline void DisplayExpressionRequest::SharedDtor(MessageLite& self) {
  DisplayExpressionRequest& this_ = static_cast<DisplayExpressionRequest&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.device_id_.Destroy();
  this_._impl_.expression_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL DisplayExpressionRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) DisplayExpressionRequest(arena);
}
constexpr auto DisplayExpressionRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(DisplayExpressionRequest),
                                            alignof(DisplayExpressionRequest));
}
constexpr auto DisplayExpressionRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_DisplayExpressionRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &DisplayExpressionRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<DisplayExpressionRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &DisplayExpressionRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<DisplayExpressionRequest>(), &DisplayExpressionRequest::ByteSizeLong,
              &DisplayExpressionRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(DisplayExpressionRequest, _impl_._cached_size_),
          false,
      },
      &DisplayExpressionRequest::kDescriptorMethods,
      &descriptor_table_device_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull DisplayExpressionRequest_class_data_ =
        DisplayExpressionRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
DisplayExpressionRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&DisplayExpressionRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(DisplayExpressionRequest_class_data_.tc_table);
  return DisplayExpressionRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 66, 2>
DisplayExpressionRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(DisplayExpressionRequest, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    DisplayExpressionRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::linxos_device::DisplayExpressionRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int32 intensity = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(DisplayExpressionRequest, _impl_.intensity_), 3>(),
     {32, 3, 0, PROTOBUF_FIELD_OFFSET(DisplayExpressionRequest, _impl_.intensity_)}},
    // string device_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(DisplayExpressionRequest, _impl_.device_id_)}},
    // string expression = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(DisplayExpressionRequest, _impl_.expression_)}},
    // int32 duration = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(DisplayExpressionRequest, _impl_.duration_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(DisplayExpressionRequest, _impl_.duration_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string device_id = 1;
    {PROTOBUF_FIELD_OFFSET(DisplayExpressionRequest, _impl_.device_id_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string expression = 2;
    {PROTOBUF_FIELD_OFFSET(DisplayExpressionRequest, _impl_.expression_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 duration = 3;
    {PROTOBUF_FIELD_OFFSET(DisplayExpressionRequest, _impl_.duration_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // int32 intensity = 4;
    {PROTOBUF_FIELD_OFFSET(DisplayExpressionRequest, _impl_.intensity_), _Internal::kHasBitsOffset + 3, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
    "\46\11\12\0\0\0\0\0"
    "linxos_device.DisplayExpressionRequest"
    "device_id"
    "expression"
  }},
};
PROTOBUF_NOINLINE void DisplayExpressionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:linxos_device.DisplayExpressionRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      _impl_.device_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      _impl_.expression_.ClearNonDefaultToEmpty();
    }
  }
  if ((cached_has_bits & 0x0000000cU) != 0) {
    ::memset(&_impl_.duration_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.intensity_) -
        reinterpret_cast<char*>(&_impl_.duration_)) + sizeof(_impl_.intensity_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL DisplayExpressionRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const DisplayExpressionRequest& this_ = static_cast<const DisplayExpressionRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL DisplayExpressionRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const DisplayExpressionRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:linxos_device.DisplayExpressionRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string device_id = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_device_id().empty()) {
      const ::std::string& _s = this_._internal_device_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "linxos_device.DisplayExpressionRequest.device_id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // string expression = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (!this_._internal_expression().empty()) {
      const ::std::string& _s = this_._internal_expression();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "linxos_device.DisplayExpressionRequest.expression");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  // int32 duration = 3;
  if ((this_._impl_._has_bits_[0] & 0x00000004U) != 0) {
    if (this_._internal_duration() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<3>(
              stream, this_._internal_duration(), target);
    }
  }

  // int32 intensity = 4;
  if ((this_._impl_._has_bits_[0] & 0x00000008U) != 0) {
    if (this_._internal_intensity() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<4>(
              stream, this_._internal_intensity(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:linxos_device.DisplayExpressionRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t DisplayExpressionRequest::ByteSizeLong(const MessageLite& base) {
  const DisplayExpressionRequest& this_ = static_cast<const DisplayExpressionRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t DisplayExpressionRequest::ByteSizeLong() const {
  const DisplayExpressionRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:linxos_device.DisplayExpressionRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fU) != 0) {
    // string device_id = 1;
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_device_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_device_id());
      }
    }
    // string expression = 2;
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!this_._internal_expression().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_expression());
      }
    }
    // int32 duration = 3;
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (this_._internal_duration() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_duration());
      }
    }
    // int32 intensity = 4;
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (this_._internal_intensity() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_intensity());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void DisplayExpressionRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<DisplayExpressionRequest*>(&to_msg);
  auto& from = static_cast<const DisplayExpressionRequest&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:linxos_device.DisplayExpressionRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_device_id().empty()) {
        _this->_internal_set_device_id(from._internal_device_id());
      } else {
        if (_this->_impl_.device_id_.IsDefault()) {
          _this->_internal_set_device_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!from._internal_expression().empty()) {
        _this->_internal_set_expression(from._internal_expression());
      } else {
        if (_this->_impl_.expression_.IsDefault()) {
          _this->_internal_set_expression("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (from._internal_duration() != 0) {
        _this->_impl_.duration_ = from._impl_.duration_;
      }
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (from._internal_intensity() != 0) {
        _this->_impl_.intensity_ = from._impl_.intensity_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DisplayExpressionRequest::CopyFrom(const DisplayExpressionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:linxos_device.DisplayExpressionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void DisplayExpressionRequest::InternalSwap(DisplayExpressionRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.device_id_, &other->_impl_.device_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.expression_, &other->_impl_.expression_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DisplayExpressionRequest, _impl_.intensity_)
      + sizeof(DisplayExpressionRequest::_impl_.intensity_)
      - PROTOBUF_FIELD_OFFSET(DisplayExpressionRequest, _impl_.duration_)>(
          reinterpret_cast<char*>(&_impl_.duration_),
          reinterpret_cast<char*>(&other->_impl_.duration_));
}

::google::protobuf::Metadata DisplayExpressionRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class DisplayExpressionResponse::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<DisplayExpressionResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(DisplayExpressionResponse, _impl_._has_bits_);
};

DisplayExpressionResponse::DisplayExpressionResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, DisplayExpressionResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:linxos_device.DisplayExpressionResponse)
}
PROTOBUF_NDEBUG_INLINE DisplayExpressionResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::linxos_device::DisplayExpressionResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

DisplayExpressionResponse::DisplayExpressionResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const DisplayExpressionResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, DisplayExpressionResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  DisplayExpressionResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.status_ = ((cached_has_bits & 0x00000001U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.status_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:linxos_device.DisplayExpressionResponse)
}
PROTOBUF_NDEBUG_INLINE DisplayExpressionResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void DisplayExpressionResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.status_ = {};
}
DisplayExpressionResponse::~DisplayExpressionResponse() {
  // @@protoc_insertion_point(destructor:linxos_device.DisplayExpressionResponse)
  SharedDtor(*this);
}
inline void DisplayExpressionResponse::SharedDtor(MessageLite& self) {
  DisplayExpressionResponse& this_ = static_cast<DisplayExpressionResponse&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.status_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL DisplayExpressionResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) DisplayExpressionResponse(arena);
}
constexpr auto DisplayExpressionResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(DisplayExpressionResponse),
                                            alignof(DisplayExpressionResponse));
}
constexpr auto DisplayExpressionResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_DisplayExpressionResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &DisplayExpressionResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<DisplayExpressionResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &DisplayExpressionResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<DisplayExpressionResponse>(), &DisplayExpressionResponse::ByteSizeLong,
              &DisplayExpressionResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(DisplayExpressionResponse, _impl_._cached_size_),
          false,
      },
      &DisplayExpressionResponse::kDescriptorMethods,
      &descriptor_table_device_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull DisplayExpressionResponse_class_data_ =
        DisplayExpressionResponse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
DisplayExpressionResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&DisplayExpressionResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(DisplayExpressionResponse_class_data_.tc_table);
  return DisplayExpressionResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2>
DisplayExpressionResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(DisplayExpressionResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    DisplayExpressionResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::linxos_device::DisplayExpressionResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .linxos_device.ResponseStatus status = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(DisplayExpressionResponse, _impl_.status_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .linxos_device.ResponseStatus status = 1;
    {PROTOBUF_FIELD_OFFSET(DisplayExpressionResponse, _impl_.status_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::linxos_device::ResponseStatus>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void DisplayExpressionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:linxos_device.DisplayExpressionResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    ABSL_DCHECK(_impl_.status_ != nullptr);
    _impl_.status_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL DisplayExpressionResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const DisplayExpressionResponse& this_ = static_cast<const DisplayExpressionResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL DisplayExpressionResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const DisplayExpressionResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:linxos_device.DisplayExpressionResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .linxos_device.ResponseStatus status = 1;
  if ((cached_has_bits & 0x00000001U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.status_, this_._impl_.status_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:linxos_device.DisplayExpressionResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t DisplayExpressionResponse::ByteSizeLong(const MessageLite& base) {
  const DisplayExpressionResponse& this_ = static_cast<const DisplayExpressionResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t DisplayExpressionResponse::ByteSizeLong() const {
  const DisplayExpressionResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:linxos_device.DisplayExpressionResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

   {
    // .linxos_device.ResponseStatus status = 1;
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.status_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void DisplayExpressionResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<DisplayExpressionResponse*>(&to_msg);
  auto& from = static_cast<const DisplayExpressionResponse&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:linxos_device.DisplayExpressionResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    ABSL_DCHECK(from._impl_.status_ != nullptr);
    if (_this->_impl_.status_ == nullptr) {
      _this->_impl_.status_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.status_);
    } else {
      _this->_impl_.status_->MergeFrom(*from._impl_.status_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DisplayExpressionResponse::CopyFrom(const DisplayExpressionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:linxos_device.DisplayExpressionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void DisplayExpressionResponse::InternalSwap(DisplayExpressionResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.status_, other->_impl_.status_);
}

::google::protobuf::Metadata DisplayExpressionResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class DisplayTextRequest::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<DisplayTextRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(DisplayTextRequest, _impl_._has_bits_);
};

DisplayTextRequest::DisplayTextRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, DisplayTextRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:linxos_device.DisplayTextRequest)
}
PROTOBUF_NDEBUG_INLINE DisplayTextRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::linxos_device::DisplayTextRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        device_id_(arena, from.device_id_),
        text_(arena, from.text_),
        font_size_(arena, from.font_size_),
        color_(arena, from.color_) {}

DisplayTextRequest::DisplayTextRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const DisplayTextRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, DisplayTextRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  DisplayTextRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.duration_ = from._impl_.duration_;

  // @@protoc_insertion_point(copy_constructor:linxos_device.DisplayTextRequest)
}
PROTOBUF_NDEBUG_INLINE DisplayTextRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        device_id_(arena),
        text_(arena),
        font_size_(arena),
        color_(arena) {}

inline void DisplayTextRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.duration_ = {};
}
DisplayTextRequest::~DisplayTextRequest() {
  // @@protoc_insertion_point(destructor:linxos_device.DisplayTextRequest)
  SharedDtor(*this);
}
inline void DisplayTextRequest::SharedDtor(MessageLite& self) {
  DisplayTextRequest& this_ = static_cast<DisplayTextRequest&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.device_id_.Destroy();
  this_._impl_.text_.Destroy();
  this_._impl_.font_size_.Destroy();
  this_._impl_.color_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL DisplayTextRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) DisplayTextRequest(arena);
}
constexpr auto DisplayTextRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(DisplayTextRequest),
                                            alignof(DisplayTextRequest));
}
constexpr auto DisplayTextRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_DisplayTextRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &DisplayTextRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<DisplayTextRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &DisplayTextRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<DisplayTextRequest>(), &DisplayTextRequest::ByteSizeLong,
              &DisplayTextRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(DisplayTextRequest, _impl_._cached_size_),
          false,
      },
      &DisplayTextRequest::kDescriptorMethods,
      &descriptor_table_device_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull DisplayTextRequest_class_data_ =
        DisplayTextRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
DisplayTextRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&DisplayTextRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(DisplayTextRequest_class_data_.tc_table);
  return DisplayTextRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 68, 2>
DisplayTextRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(DisplayTextRequest, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    DisplayTextRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::linxos_device::DisplayTextRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string device_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(DisplayTextRequest, _impl_.device_id_)}},
    // string text = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(DisplayTextRequest, _impl_.text_)}},
    // int32 duration = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(DisplayTextRequest, _impl_.duration_), 4>(),
     {24, 4, 0, PROTOBUF_FIELD_OFFSET(DisplayTextRequest, _impl_.duration_)}},
    // string font_size = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 2, 0, PROTOBUF_FIELD_OFFSET(DisplayTextRequest, _impl_.font_size_)}},
    // string color = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 3, 0, PROTOBUF_FIELD_OFFSET(DisplayTextRequest, _impl_.color_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string device_id = 1;
    {PROTOBUF_FIELD_OFFSET(DisplayTextRequest, _impl_.device_id_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string text = 2;
    {PROTOBUF_FIELD_OFFSET(DisplayTextRequest, _impl_.text_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 duration = 3;
    {PROTOBUF_FIELD_OFFSET(DisplayTextRequest, _impl_.duration_), _Internal::kHasBitsOffset + 4, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // string font_size = 4;
    {PROTOBUF_FIELD_OFFSET(DisplayTextRequest, _impl_.font_size_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string color = 5;
    {PROTOBUF_FIELD_OFFSET(DisplayTextRequest, _impl_.color_), _Internal::kHasBitsOffset + 3, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\40\11\4\0\11\5\0\0"
    "linxos_device.DisplayTextRequest"
    "device_id"
    "text"
    "font_size"
    "color"
  }},
};
PROTOBUF_NOINLINE void DisplayTextRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:linxos_device.DisplayTextRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      _impl_.device_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      _impl_.text_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      _impl_.font_size_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      _impl_.color_.ClearNonDefaultToEmpty();
    }
  }
  _impl_.duration_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL DisplayTextRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const DisplayTextRequest& this_ = static_cast<const DisplayTextRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL DisplayTextRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const DisplayTextRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:linxos_device.DisplayTextRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string device_id = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_device_id().empty()) {
      const ::std::string& _s = this_._internal_device_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "linxos_device.DisplayTextRequest.device_id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // string text = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (!this_._internal_text().empty()) {
      const ::std::string& _s = this_._internal_text();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "linxos_device.DisplayTextRequest.text");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  // int32 duration = 3;
  if ((this_._impl_._has_bits_[0] & 0x00000010U) != 0) {
    if (this_._internal_duration() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<3>(
              stream, this_._internal_duration(), target);
    }
  }

  // string font_size = 4;
  if ((this_._impl_._has_bits_[0] & 0x00000004U) != 0) {
    if (!this_._internal_font_size().empty()) {
      const ::std::string& _s = this_._internal_font_size();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "linxos_device.DisplayTextRequest.font_size");
      target = stream->WriteStringMaybeAliased(4, _s, target);
    }
  }

  // string color = 5;
  if ((this_._impl_._has_bits_[0] & 0x00000008U) != 0) {
    if (!this_._internal_color().empty()) {
      const ::std::string& _s = this_._internal_color();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "linxos_device.DisplayTextRequest.color");
      target = stream->WriteStringMaybeAliased(5, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:linxos_device.DisplayTextRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t DisplayTextRequest::ByteSizeLong(const MessageLite& base) {
  const DisplayTextRequest& this_ = static_cast<const DisplayTextRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t DisplayTextRequest::ByteSizeLong() const {
  const DisplayTextRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:linxos_device.DisplayTextRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fU) != 0) {
    // string device_id = 1;
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_device_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_device_id());
      }
    }
    // string text = 2;
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!this_._internal_text().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_text());
      }
    }
    // string font_size = 4;
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (!this_._internal_font_size().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_font_size());
      }
    }
    // string color = 5;
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (!this_._internal_color().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_color());
      }
    }
    // int32 duration = 3;
    if ((cached_has_bits & 0x00000010U) != 0) {
      if (this_._internal_duration() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_duration());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void DisplayTextRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<DisplayTextRequest*>(&to_msg);
  auto& from = static_cast<const DisplayTextRequest&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:linxos_device.DisplayTextRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_device_id().empty()) {
        _this->_internal_set_device_id(from._internal_device_id());
      } else {
        if (_this->_impl_.device_id_.IsDefault()) {
          _this->_internal_set_device_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!from._internal_text().empty()) {
        _this->_internal_set_text(from._internal_text());
      } else {
        if (_this->_impl_.text_.IsDefault()) {
          _this->_internal_set_text("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (!from._internal_font_size().empty()) {
        _this->_internal_set_font_size(from._internal_font_size());
      } else {
        if (_this->_impl_.font_size_.IsDefault()) {
          _this->_internal_set_font_size("");
        }
      }
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (!from._internal_color().empty()) {
        _this->_internal_set_color(from._internal_color());
      } else {
        if (_this->_impl_.color_.IsDefault()) {
          _this->_internal_set_color("");
        }
      }
    }
    if ((cached_has_bits & 0x00000010U) != 0) {
      if (from._internal_duration() != 0) {
        _this->_impl_.duration_ = from._impl_.duration_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DisplayTextRequest::CopyFrom(const DisplayTextRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:linxos_device.DisplayTextRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void DisplayTextRequest::InternalSwap(DisplayTextRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.device_id_, &other->_impl_.device_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.text_, &other->_impl_.text_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.font_size_, &other->_impl_.font_size_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.color_, &other->_impl_.color_, arena);
  swap(_impl_.duration_, other->_impl_.duration_);
}

::google::protobuf::Metadata DisplayTextRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class DisplayTextResponse::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<DisplayTextResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(DisplayTextResponse, _impl_._has_bits_);
};

DisplayTextResponse::DisplayTextResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, DisplayTextResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:linxos_device.DisplayTextResponse)
}
PROTOBUF_NDEBUG_INLINE DisplayTextResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::linxos_device::DisplayTextResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

DisplayTextResponse::DisplayTextResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const DisplayTextResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, DisplayTextResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  DisplayTextResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.status_ = ((cached_has_bits & 0x00000001U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.status_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:linxos_device.DisplayTextResponse)
}
PROTOBUF_NDEBUG_INLINE DisplayTextResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void DisplayTextResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.status_ = {};
}
DisplayTextResponse::~DisplayTextResponse() {
  // @@protoc_insertion_point(destructor:linxos_device.DisplayTextResponse)
  SharedDtor(*this);
}
inline void DisplayTextResponse::SharedDtor(MessageLite& self) {
  DisplayTextResponse& this_ = static_cast<DisplayTextResponse&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.status_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL DisplayTextResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) DisplayTextResponse(arena);
}
constexpr auto DisplayTextResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(DisplayTextResponse),
                                            alignof(DisplayTextResponse));
}
constexpr auto DisplayTextResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_DisplayTextResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &DisplayTextResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<DisplayTextResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &DisplayTextResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<DisplayTextResponse>(), &DisplayTextResponse::ByteSizeLong,
              &DisplayTextResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(DisplayTextResponse, _impl_._cached_size_),
          false,
      },
      &DisplayTextResponse::kDescriptorMethods,
      &descriptor_table_device_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull DisplayTextResponse_class_data_ =
        DisplayTextResponse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
DisplayTextResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&DisplayTextResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(DisplayTextResponse_class_data_.tc_table);
  return DisplayTextResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2>
DisplayTextResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(DisplayTextResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    DisplayTextResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::linxos_device::DisplayTextResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .linxos_device.ResponseStatus status = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(DisplayTextResponse, _impl_.status_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .linxos_device.ResponseStatus status = 1;
    {PROTOBUF_FIELD_OFFSET(DisplayTextResponse, _impl_.status_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::linxos_device::ResponseStatus>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void DisplayTextResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:linxos_device.DisplayTextResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    ABSL_DCHECK(_impl_.status_ != nullptr);
    _impl_.status_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL DisplayTextResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const DisplayTextResponse& this_ = static_cast<const DisplayTextResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL DisplayTextResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const DisplayTextResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:linxos_device.DisplayTextResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .linxos_device.ResponseStatus status = 1;
  if ((cached_has_bits & 0x00000001U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.status_, this_._impl_.status_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:linxos_device.DisplayTextResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t DisplayTextResponse::ByteSizeLong(const MessageLite& base) {
  const DisplayTextResponse& this_ = static_cast<const DisplayTextResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t DisplayTextResponse::ByteSizeLong() const {
  const DisplayTextResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:linxos_device.DisplayTextResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

   {
    // .linxos_device.ResponseStatus status = 1;
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.status_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void DisplayTextResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<DisplayTextResponse*>(&to_msg);
  auto& from = static_cast<const DisplayTextResponse&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:linxos_device.DisplayTextResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    ABSL_DCHECK(from._impl_.status_ != nullptr);
    if (_this->_impl_.status_ == nullptr) {
      _this->_impl_.status_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.status_);
    } else {
      _this->_impl_.status_->MergeFrom(*from._impl_.status_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DisplayTextResponse::CopyFrom(const DisplayTextResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:linxos_device.DisplayTextResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void DisplayTextResponse::InternalSwap(DisplayTextResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.status_, other->_impl_.status_);
}

::google::protobuf::Metadata DisplayTextResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class DisplayBrightnessRequest::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<DisplayBrightnessRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(DisplayBrightnessRequest, _impl_._has_bits_);
};

DisplayBrightnessRequest::DisplayBrightnessRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, DisplayBrightnessRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:linxos_device.DisplayBrightnessRequest)
}
PROTOBUF_NDEBUG_INLINE DisplayBrightnessRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::linxos_device::DisplayBrightnessRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        device_id_(arena, from.device_id_) {}

DisplayBrightnessRequest::DisplayBrightnessRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const DisplayBrightnessRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, DisplayBrightnessRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  DisplayBrightnessRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.brightness_ = from._impl_.brightness_;

  // @@protoc_insertion_point(copy_constructor:linxos_device.DisplayBrightnessRequest)
}
PROTOBUF_NDEBUG_INLINE DisplayBrightnessRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        device_id_(arena) {}

inline void DisplayBrightnessRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.brightness_ = {};
}
DisplayBrightnessRequest::~DisplayBrightnessRequest() {
  // @@protoc_insertion_point(destructor:linxos_device.DisplayBrightnessRequest)
  SharedDtor(*this);
}
inline void DisplayBrightnessRequest::SharedDtor(MessageLite& self) {
  DisplayBrightnessRequest& this_ = static_cast<DisplayBrightnessRequest&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.device_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL DisplayBrightnessRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) DisplayBrightnessRequest(arena);
}
constexpr auto DisplayBrightnessRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(DisplayBrightnessRequest),
                                            alignof(DisplayBrightnessRequest));
}
constexpr auto DisplayBrightnessRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_DisplayBrightnessRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &DisplayBrightnessRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<DisplayBrightnessRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &DisplayBrightnessRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<DisplayBrightnessRequest>(), &DisplayBrightnessRequest::ByteSizeLong,
              &DisplayBrightnessRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(DisplayBrightnessRequest, _impl_._cached_size_),
          false,
      },
      &DisplayBrightnessRequest::kDescriptorMethods,
      &descriptor_table_device_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull DisplayBrightnessRequest_class_data_ =
        DisplayBrightnessRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
DisplayBrightnessRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&DisplayBrightnessRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(DisplayBrightnessRequest_class_data_.tc_table);
  return DisplayBrightnessRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 56, 2>
DisplayBrightnessRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(DisplayBrightnessRequest, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    DisplayBrightnessRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::linxos_device::DisplayBrightnessRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int32 brightness = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(DisplayBrightnessRequest, _impl_.brightness_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(DisplayBrightnessRequest, _impl_.brightness_)}},
    // string device_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(DisplayBrightnessRequest, _impl_.device_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string device_id = 1;
    {PROTOBUF_FIELD_OFFSET(DisplayBrightnessRequest, _impl_.device_id_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 brightness = 2;
    {PROTOBUF_FIELD_OFFSET(DisplayBrightnessRequest, _impl_.brightness_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
    "\46\11\0\0\0\0\0\0"
    "linxos_device.DisplayBrightnessRequest"
    "device_id"
  }},
};
PROTOBUF_NOINLINE void DisplayBrightnessRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:linxos_device.DisplayBrightnessRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    _impl_.device_id_.ClearNonDefaultToEmpty();
  }
  _impl_.brightness_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL DisplayBrightnessRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const DisplayBrightnessRequest& this_ = static_cast<const DisplayBrightnessRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL DisplayBrightnessRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const DisplayBrightnessRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:linxos_device.DisplayBrightnessRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string device_id = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_device_id().empty()) {
      const ::std::string& _s = this_._internal_device_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "linxos_device.DisplayBrightnessRequest.device_id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // int32 brightness = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (this_._internal_brightness() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<2>(
              stream, this_._internal_brightness(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:linxos_device.DisplayBrightnessRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t DisplayBrightnessRequest::ByteSizeLong(const MessageLite& base) {
  const DisplayBrightnessRequest& this_ = static_cast<const DisplayBrightnessRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t DisplayBrightnessRequest::ByteSizeLong() const {
  const DisplayBrightnessRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:linxos_device.DisplayBrightnessRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    // string device_id = 1;
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_device_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_device_id());
      }
    }
    // int32 brightness = 2;
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (this_._internal_brightness() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_brightness());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void DisplayBrightnessRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<DisplayBrightnessRequest*>(&to_msg);
  auto& from = static_cast<const DisplayBrightnessRequest&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:linxos_device.DisplayBrightnessRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_device_id().empty()) {
        _this->_internal_set_device_id(from._internal_device_id());
      } else {
        if (_this->_impl_.device_id_.IsDefault()) {
          _this->_internal_set_device_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (from._internal_brightness() != 0) {
        _this->_impl_.brightness_ = from._impl_.brightness_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DisplayBrightnessRequest::CopyFrom(const DisplayBrightnessRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:linxos_device.DisplayBrightnessRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void DisplayBrightnessRequest::InternalSwap(DisplayBrightnessRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.device_id_, &other->_impl_.device_id_, arena);
  swap(_impl_.brightness_, other->_impl_.brightness_);
}

::google::protobuf::Metadata DisplayBrightnessRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class DisplayBrightnessResponse::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<DisplayBrightnessResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(DisplayBrightnessResponse, _impl_._has_bits_);
};

DisplayBrightnessResponse::DisplayBrightnessResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, DisplayBrightnessResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:linxos_device.DisplayBrightnessResponse)
}
PROTOBUF_NDEBUG_INLINE DisplayBrightnessResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::linxos_device::DisplayBrightnessResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

DisplayBrightnessResponse::DisplayBrightnessResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const DisplayBrightnessResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, DisplayBrightnessResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  DisplayBrightnessResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.status_ = ((cached_has_bits & 0x00000001U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.status_)
                : nullptr;
  _impl_.current_brightness_ = from._impl_.current_brightness_;

  // @@protoc_insertion_point(copy_constructor:linxos_device.DisplayBrightnessResponse)
}
PROTOBUF_NDEBUG_INLINE DisplayBrightnessResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void DisplayBrightnessResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, status_),
           0,
           offsetof(Impl_, current_brightness_) -
               offsetof(Impl_, status_) +
               sizeof(Impl_::current_brightness_));
}
DisplayBrightnessResponse::~DisplayBrightnessResponse() {
  // @@protoc_insertion_point(destructor:linxos_device.DisplayBrightnessResponse)
  SharedDtor(*this);
}
inline void DisplayBrightnessResponse::SharedDtor(MessageLite& self) {
  DisplayBrightnessResponse& this_ = static_cast<DisplayBrightnessResponse&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.status_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL DisplayBrightnessResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) DisplayBrightnessResponse(arena);
}
constexpr auto DisplayBrightnessResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(DisplayBrightnessResponse),
                                            alignof(DisplayBrightnessResponse));
}
constexpr auto DisplayBrightnessResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_DisplayBrightnessResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &DisplayBrightnessResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<DisplayBrightnessResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &DisplayBrightnessResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<DisplayBrightnessResponse>(), &DisplayBrightnessResponse::ByteSizeLong,
              &DisplayBrightnessResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(DisplayBrightnessResponse, _impl_._cached_size_),
          false,
      },
      &DisplayBrightnessResponse::kDescriptorMethods,
      &descriptor_table_device_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull DisplayBrightnessResponse_class_data_ =
        DisplayBrightnessResponse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
DisplayBrightnessResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&DisplayBrightnessResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(DisplayBrightnessResponse_class_data_.tc_table);
  return DisplayBrightnessResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2>
DisplayBrightnessResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(DisplayBrightnessResponse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    DisplayBrightnessResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::linxos_device::DisplayBrightnessResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int32 current_brightness = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(DisplayBrightnessResponse, _impl_.current_brightness_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(DisplayBrightnessResponse, _impl_.current_brightness_)}},
    // .linxos_device.ResponseStatus status = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(DisplayBrightnessResponse, _impl_.status_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .linxos_device.ResponseStatus status = 1;
    {PROTOBUF_FIELD_OFFSET(DisplayBrightnessResponse, _impl_.status_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // int32 current_brightness = 2;
    {PROTOBUF_FIELD_OFFSET(DisplayBrightnessResponse, _impl_.current_brightness_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::linxos_device::ResponseStatus>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void DisplayBrightnessResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:linxos_device.DisplayBrightnessResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    ABSL_DCHECK(_impl_.status_ != nullptr);
    _impl_.status_->Clear();
  }
  _impl_.current_brightness_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL DisplayBrightnessResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const DisplayBrightnessResponse& this_ = static_cast<const DisplayBrightnessResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL DisplayBrightnessResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const DisplayBrightnessResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:linxos_device.DisplayBrightnessResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .linxos_device.ResponseStatus status = 1;
  if ((cached_has_bits & 0x00000001U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.status_, this_._impl_.status_->GetCachedSize(), target,
        stream);
  }

  // int32 current_brightness = 2;
  if ((cached_has_bits & 0x00000002U) != 0) {
    if (this_._internal_current_brightness() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<2>(
              stream, this_._internal_current_brightness(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:linxos_device.DisplayBrightnessResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t DisplayBrightnessResponse::ByteSizeLong(const MessageLite& base) {
  const DisplayBrightnessResponse& this_ = static_cast<const DisplayBrightnessResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t DisplayBrightnessResponse::ByteSizeLong() const {
  const DisplayBrightnessResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:linxos_device.DisplayBrightnessResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    // .linxos_device.ResponseStatus status = 1;
    if ((cached_has_bits & 0x00000001U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.status_);
    }
    // int32 current_brightness = 2;
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (this_._internal_current_brightness() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_current_brightness());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void DisplayBrightnessResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<DisplayBrightnessResponse*>(&to_msg);
  auto& from = static_cast<const DisplayBrightnessResponse&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:linxos_device.DisplayBrightnessResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      ABSL_DCHECK(from._impl_.status_ != nullptr);
      if (_this->_impl_.status_ == nullptr) {
        _this->_impl_.status_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.status_);
      } else {
        _this->_impl_.status_->MergeFrom(*from._impl_.status_);
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (from._internal_current_brightness() != 0) {
        _this->_impl_.current_brightness_ = from._impl_.current_brightness_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DisplayBrightnessResponse::CopyFrom(const DisplayBrightnessResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:linxos_device.DisplayBrightnessResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void DisplayBrightnessResponse::InternalSwap(DisplayBrightnessResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DisplayBrightnessResponse, _impl_.current_brightness_)
      + sizeof(DisplayBrightnessResponse::_impl_.current_brightness_)
      - PROTOBUF_FIELD_OFFSET(DisplayBrightnessResponse, _impl_.status_)>(
          reinterpret_cast<char*>(&_impl_.status_),
          reinterpret_cast<char*>(&other->_impl_.status_));
}

::google::protobuf::Metadata DisplayBrightnessResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class LightControlRequest::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<LightControlRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(LightControlRequest, _impl_._has_bits_);
};

LightControlRequest::LightControlRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, LightControlRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:linxos_device.LightControlRequest)
}
PROTOBUF_NDEBUG_INLINE LightControlRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::linxos_device::LightControlRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        device_id_(arena, from.device_id_) {}

LightControlRequest::LightControlRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const LightControlRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, LightControlRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  LightControlRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, red_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, red_),
           offsetof(Impl_, duration_) -
               offsetof(Impl_, red_) +
               sizeof(Impl_::duration_));

  // @@protoc_insertion_point(copy_constructor:linxos_device.LightControlRequest)
}
PROTOBUF_NDEBUG_INLINE LightControlRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        device_id_(arena) {}

inline void LightControlRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, red_),
           0,
           offsetof(Impl_, duration_) -
               offsetof(Impl_, red_) +
               sizeof(Impl_::duration_));
}
LightControlRequest::~LightControlRequest() {
  // @@protoc_insertion_point(destructor:linxos_device.LightControlRequest)
  SharedDtor(*this);
}
inline void LightControlRequest::SharedDtor(MessageLite& self) {
  LightControlRequest& this_ = static_cast<LightControlRequest&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.device_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL LightControlRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) LightControlRequest(arena);
}
constexpr auto LightControlRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(LightControlRequest),
                                            alignof(LightControlRequest));
}
constexpr auto LightControlRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_LightControlRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &LightControlRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<LightControlRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &LightControlRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<LightControlRequest>(), &LightControlRequest::ByteSizeLong,
              &LightControlRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(LightControlRequest, _impl_._cached_size_),
          false,
      },
      &LightControlRequest::kDescriptorMethods,
      &descriptor_table_device_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull LightControlRequest_class_data_ =
        LightControlRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
LightControlRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&LightControlRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(LightControlRequest_class_data_.tc_table);
  return LightControlRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 0, 51, 2>
LightControlRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(LightControlRequest, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    LightControlRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::linxos_device::LightControlRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string device_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(LightControlRequest, _impl_.device_id_)}},
    // int32 red = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(LightControlRequest, _impl_.red_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(LightControlRequest, _impl_.red_)}},
    // int32 green = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(LightControlRequest, _impl_.green_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(LightControlRequest, _impl_.green_)}},
    // int32 blue = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(LightControlRequest, _impl_.blue_), 3>(),
     {32, 3, 0, PROTOBUF_FIELD_OFFSET(LightControlRequest, _impl_.blue_)}},
    // int32 brightness = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(LightControlRequest, _impl_.brightness_), 4>(),
     {40, 4, 0, PROTOBUF_FIELD_OFFSET(LightControlRequest, _impl_.brightness_)}},
    // int32 duration = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(LightControlRequest, _impl_.duration_), 5>(),
     {48, 5, 0, PROTOBUF_FIELD_OFFSET(LightControlRequest, _impl_.duration_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string device_id = 1;
    {PROTOBUF_FIELD_OFFSET(LightControlRequest, _impl_.device_id_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 red = 2;
    {PROTOBUF_FIELD_OFFSET(LightControlRequest, _impl_.red_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // int32 green = 3;
    {PROTOBUF_FIELD_OFFSET(LightControlRequest, _impl_.green_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // int32 blue = 4;
    {PROTOBUF_FIELD_OFFSET(LightControlRequest, _impl_.blue_), _Internal::kHasBitsOffset + 3, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // int32 brightness = 5;
    {PROTOBUF_FIELD_OFFSET(LightControlRequest, _impl_.brightness_), _Internal::kHasBitsOffset + 4, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // int32 duration = 6;
    {PROTOBUF_FIELD_OFFSET(LightControlRequest, _impl_.duration_), _Internal::kHasBitsOffset + 5, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
    "\41\11\0\0\0\0\0\0"
    "linxos_device.LightControlRequest"
    "device_id"
  }},
};
PROTOBUF_NOINLINE void LightControlRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:linxos_device.LightControlRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    _impl_.device_id_.ClearNonDefaultToEmpty();
  }
  if ((cached_has_bits & 0x0000003eU) != 0) {
    ::memset(&_impl_.red_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.duration_) -
        reinterpret_cast<char*>(&_impl_.red_)) + sizeof(_impl_.duration_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL LightControlRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const LightControlRequest& this_ = static_cast<const LightControlRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL LightControlRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const LightControlRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:linxos_device.LightControlRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string device_id = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_device_id().empty()) {
      const ::std::string& _s = this_._internal_device_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "linxos_device.LightControlRequest.device_id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // int32 red = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (this_._internal_red() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<2>(
              stream, this_._internal_red(), target);
    }
  }

  // int32 green = 3;
  if ((this_._impl_._has_bits_[0] & 0x00000004U) != 0) {
    if (this_._internal_green() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<3>(
              stream, this_._internal_green(), target);
    }
  }

  // int32 blue = 4;
  if ((this_._impl_._has_bits_[0] & 0x00000008U) != 0) {
    if (this_._internal_blue() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<4>(
              stream, this_._internal_blue(), target);
    }
  }

  // int32 brightness = 5;
  if ((this_._impl_._has_bits_[0] & 0x00000010U) != 0) {
    if (this_._internal_brightness() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<5>(
              stream, this_._internal_brightness(), target);
    }
  }

  // int32 duration = 6;
  if ((this_._impl_._has_bits_[0] & 0x00000020U) != 0) {
    if (this_._internal_duration() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<6>(
              stream, this_._internal_duration(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:linxos_device.LightControlRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t LightControlRequest::ByteSizeLong(const MessageLite& base) {
  const LightControlRequest& this_ = static_cast<const LightControlRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t LightControlRequest::ByteSizeLong() const {
  const LightControlRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:linxos_device.LightControlRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000003fU) != 0) {
    // string device_id = 1;
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_device_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_device_id());
      }
    }
    // int32 red = 2;
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (this_._internal_red() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_red());
      }
    }
    // int32 green = 3;
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (this_._internal_green() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_green());
      }
    }
    // int32 blue = 4;
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (this_._internal_blue() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_blue());
      }
    }
    // int32 brightness = 5;
    if ((cached_has_bits & 0x00000010U) != 0) {
      if (this_._internal_brightness() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_brightness());
      }
    }
    // int32 duration = 6;
    if ((cached_has_bits & 0x00000020U) != 0) {
      if (this_._internal_duration() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_duration());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void LightControlRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<LightControlRequest*>(&to_msg);
  auto& from = static_cast<const LightControlRequest&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:linxos_device.LightControlRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000003fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_device_id().empty()) {
        _this->_internal_set_device_id(from._internal_device_id());
      } else {
        if (_this->_impl_.device_id_.IsDefault()) {
          _this->_internal_set_device_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (from._internal_red() != 0) {
        _this->_impl_.red_ = from._impl_.red_;
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (from._internal_green() != 0) {
        _this->_impl_.green_ = from._impl_.green_;
      }
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (from._internal_blue() != 0) {
        _this->_impl_.blue_ = from._impl_.blue_;
      }
    }
    if ((cached_has_bits & 0x00000010U) != 0) {
      if (from._internal_brightness() != 0) {
        _this->_impl_.brightness_ = from._impl_.brightness_;
      }
    }
    if ((cached_has_bits & 0x00000020U) != 0) {
      if (from._internal_duration() != 0) {
        _this->_impl_.duration_ = from._impl_.duration_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void LightControlRequest::CopyFrom(const LightControlRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:linxos_device.LightControlRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void LightControlRequest::InternalSwap(LightControlRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.device_id_, &other->_impl_.device_id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(LightControlRequest, _impl_.duration_)
      + sizeof(LightControlRequest::_impl_.duration_)
      - PROTOBUF_FIELD_OFFSET(LightControlRequest, _impl_.red_)>(
          reinterpret_cast<char*>(&_impl_.red_),
          reinterpret_cast<char*>(&other->_impl_.red_));
}

::google::protobuf::Metadata LightControlRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class LightControlResponse::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<LightControlResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(LightControlResponse, _impl_._has_bits_);
};

LightControlResponse::LightControlResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, LightControlResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:linxos_device.LightControlResponse)
}
PROTOBUF_NDEBUG_INLINE LightControlResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::linxos_device::LightControlResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

LightControlResponse::LightControlResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const LightControlResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, LightControlResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  LightControlResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.status_ = ((cached_has_bits & 0x00000001U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.status_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:linxos_device.LightControlResponse)
}
PROTOBUF_NDEBUG_INLINE LightControlResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void LightControlResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.status_ = {};
}
LightControlResponse::~LightControlResponse() {
  // @@protoc_insertion_point(destructor:linxos_device.LightControlResponse)
  SharedDtor(*this);
}
inline void LightControlResponse::SharedDtor(MessageLite& self) {
  LightControlResponse& this_ = static_cast<LightControlResponse&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.status_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL LightControlResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) LightControlResponse(arena);
}
constexpr auto LightControlResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(LightControlResponse),
                                            alignof(LightControlResponse));
}
constexpr auto LightControlResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_LightControlResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &LightControlResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<LightControlResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &LightControlResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<LightControlResponse>(), &LightControlResponse::ByteSizeLong,
              &LightControlResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(LightControlResponse, _impl_._cached_size_),
          false,
      },
      &LightControlResponse::kDescriptorMethods,
      &descriptor_table_device_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull LightControlResponse_class_data_ =
        LightControlResponse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
LightControlResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&LightControlResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(LightControlResponse_class_data_.tc_table);
  return LightControlResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2>
LightControlResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(LightControlResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    LightControlResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::linxos_device::LightControlResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .linxos_device.ResponseStatus status = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(LightControlResponse, _impl_.status_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .linxos_device.ResponseStatus status = 1;
    {PROTOBUF_FIELD_OFFSET(LightControlResponse, _impl_.status_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::linxos_device::ResponseStatus>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void LightControlResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:linxos_device.LightControlResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    ABSL_DCHECK(_impl_.status_ != nullptr);
    _impl_.status_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL LightControlResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const LightControlResponse& this_ = static_cast<const LightControlResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL LightControlResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const LightControlResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:linxos_device.LightControlResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .linxos_device.ResponseStatus status = 1;
  if ((cached_has_bits & 0x00000001U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.status_, this_._impl_.status_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:linxos_device.LightControlResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t LightControlResponse::ByteSizeLong(const MessageLite& base) {
  const LightControlResponse& this_ = static_cast<const LightControlResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t LightControlResponse::ByteSizeLong() const {
  const LightControlResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:linxos_device.LightControlResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

   {
    // .linxos_device.ResponseStatus status = 1;
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.status_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void LightControlResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<LightControlResponse*>(&to_msg);
  auto& from = static_cast<const LightControlResponse&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:linxos_device.LightControlResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    ABSL_DCHECK(from._impl_.status_ != nullptr);
    if (_this->_impl_.status_ == nullptr) {
      _this->_impl_.status_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.status_);
    } else {
      _this->_impl_.status_->MergeFrom(*from._impl_.status_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void LightControlResponse::CopyFrom(const LightControlResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:linxos_device.LightControlResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void LightControlResponse::InternalSwap(LightControlResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.status_, other->_impl_.status_);
}

::google::protobuf::Metadata LightControlResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class LightModeRequest::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<LightModeRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(LightModeRequest, _impl_._has_bits_);
};

LightModeRequest::LightModeRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, LightModeRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:linxos_device.LightModeRequest)
}
PROTOBUF_NDEBUG_INLINE LightModeRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::linxos_device::LightModeRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        colors_{visibility, arena, from.colors_},
        _colors_cached_byte_size_{0},
        device_id_(arena, from.device_id_),
        mode_(arena, from.mode_) {}

LightModeRequest::LightModeRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const LightModeRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, LightModeRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  LightModeRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.speed_ = from._impl_.speed_;

  // @@protoc_insertion_point(copy_constructor:linxos_device.LightModeRequest)
}
PROTOBUF_NDEBUG_INLINE LightModeRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        colors_{visibility, arena},
        _colors_cached_byte_size_{0},
        device_id_(arena),
        mode_(arena) {}

inline void LightModeRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.speed_ = {};
}
LightModeRequest::~LightModeRequest() {
  // @@protoc_insertion_point(destructor:linxos_device.LightModeRequest)
  SharedDtor(*this);
}
inline void LightModeRequest::SharedDtor(MessageLite& self) {
  LightModeRequest& this_ = static_cast<LightModeRequest&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.device_id_.Destroy();
  this_._impl_.mode_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL LightModeRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) LightModeRequest(arena);
}
constexpr auto LightModeRequest::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(LightModeRequest, _impl_.colors_) +
          decltype(LightModeRequest::_impl_.colors_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(LightModeRequest), alignof(LightModeRequest), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&LightModeRequest::PlacementNew_,
                                 sizeof(LightModeRequest),
                                 alignof(LightModeRequest));
  }
}
constexpr auto LightModeRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_LightModeRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &LightModeRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<LightModeRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &LightModeRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<LightModeRequest>(), &LightModeRequest::ByteSizeLong,
              &LightModeRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(LightModeRequest, _impl_._cached_size_),
          false,
      },
      &LightModeRequest::kDescriptorMethods,
      &descriptor_table_device_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull LightModeRequest_class_data_ =
        LightModeRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
LightModeRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&LightModeRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(LightModeRequest_class_data_.tc_table);
  return LightModeRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 52, 2>
LightModeRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(LightModeRequest, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    LightModeRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::linxos_device::LightModeRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated int32 colors = 4;
    {::_pbi::TcParser::FastV32P1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(LightModeRequest, _impl_.colors_)}},
    // string device_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(LightModeRequest, _impl_.device_id_)}},
    // string mode = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(LightModeRequest, _impl_.mode_)}},
    // int32 speed = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(LightModeRequest, _impl_.speed_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(LightModeRequest, _impl_.speed_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string device_id = 1;
    {PROTOBUF_FIELD_OFFSET(LightModeRequest, _impl_.device_id_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string mode = 2;
    {PROTOBUF_FIELD_OFFSET(LightModeRequest, _impl_.mode_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 speed = 3;
    {PROTOBUF_FIELD_OFFSET(LightModeRequest, _impl_.speed_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // repeated int32 colors = 4;
    {PROTOBUF_FIELD_OFFSET(LightModeRequest, _impl_.colors_), -1, 0, (0 | ::_fl::kFcRepeated | ::_fl::kPackedInt32)},
  }},
  // no aux_entries
  {{
    "\36\11\4\0\0\0\0\0"
    "linxos_device.LightModeRequest"
    "device_id"
    "mode"
  }},
};
PROTOBUF_NOINLINE void LightModeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:linxos_device.LightModeRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.colors_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      _impl_.device_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      _impl_.mode_.ClearNonDefaultToEmpty();
    }
  }
  _impl_.speed_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL LightModeRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const LightModeRequest& this_ = static_cast<const LightModeRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL LightModeRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const LightModeRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:linxos_device.LightModeRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string device_id = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_device_id().empty()) {
      const ::std::string& _s = this_._internal_device_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "linxos_device.LightModeRequest.device_id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // string mode = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (!this_._internal_mode().empty()) {
      const ::std::string& _s = this_._internal_mode();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "linxos_device.LightModeRequest.mode");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  // int32 speed = 3;
  if ((this_._impl_._has_bits_[0] & 0x00000004U) != 0) {
    if (this_._internal_speed() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<3>(
              stream, this_._internal_speed(), target);
    }
  }

  // repeated int32 colors = 4;
  {
    int byte_size = this_._impl_._colors_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          4, this_._internal_colors(), byte_size, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:linxos_device.LightModeRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t LightModeRequest::ByteSizeLong(const MessageLite& base) {
  const LightModeRequest& this_ = static_cast<const LightModeRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t LightModeRequest::ByteSizeLong() const {
  const LightModeRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:linxos_device.LightModeRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated int32 colors = 4;
    {
      total_size +=
          ::_pbi::WireFormatLite::Int32SizeWithPackedTagSize(
              this_._internal_colors(), 1,
              this_._impl_._colors_cached_byte_size_);
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    // string device_id = 1;
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_device_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_device_id());
      }
    }
    // string mode = 2;
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!this_._internal_mode().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_mode());
      }
    }
    // int32 speed = 3;
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (this_._internal_speed() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_speed());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void LightModeRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<LightModeRequest*>(&to_msg);
  auto& from = static_cast<const LightModeRequest&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:linxos_device.LightModeRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_colors()->MergeFrom(from._internal_colors());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_device_id().empty()) {
        _this->_internal_set_device_id(from._internal_device_id());
      } else {
        if (_this->_impl_.device_id_.IsDefault()) {
          _this->_internal_set_device_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!from._internal_mode().empty()) {
        _this->_internal_set_mode(from._internal_mode());
      } else {
        if (_this->_impl_.mode_.IsDefault()) {
          _this->_internal_set_mode("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (from._internal_speed() != 0) {
        _this->_impl_.speed_ = from._impl_.speed_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void LightModeRequest::CopyFrom(const LightModeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:linxos_device.LightModeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void LightModeRequest::InternalSwap(LightModeRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.colors_.InternalSwap(&other->_impl_.colors_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.device_id_, &other->_impl_.device_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.mode_, &other->_impl_.mode_, arena);
  swap(_impl_.speed_, other->_impl_.speed_);
}

::google::protobuf::Metadata LightModeRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class LightModeResponse::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<LightModeResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(LightModeResponse, _impl_._has_bits_);
};

LightModeResponse::LightModeResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, LightModeResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:linxos_device.LightModeResponse)
}
PROTOBUF_NDEBUG_INLINE LightModeResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::linxos_device::LightModeResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

LightModeResponse::LightModeResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const LightModeResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, LightModeResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  LightModeResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.status_ = ((cached_has_bits & 0x00000001U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.status_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:linxos_device.LightModeResponse)
}
PROTOBUF_NDEBUG_INLINE LightModeResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void LightModeResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.status_ = {};
}
LightModeResponse::~LightModeResponse() {
  // @@protoc_insertion_point(destructor:linxos_device.LightModeResponse)
  SharedDtor(*this);
}
inline void LightModeResponse::SharedDtor(MessageLite& self) {
  LightModeResponse& this_ = static_cast<LightModeResponse&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.status_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL LightModeResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) LightModeResponse(arena);
}
constexpr auto LightModeResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(LightModeResponse),
                                            alignof(LightModeResponse));
}
constexpr auto LightModeResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_LightModeResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &LightModeResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<LightModeResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &LightModeResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<LightModeResponse>(), &LightModeResponse::ByteSizeLong,
              &LightModeResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(LightModeResponse, _impl_._cached_size_),
          false,
      },
      &LightModeResponse::kDescriptorMethods,
      &descriptor_table_device_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull LightModeResponse_class_data_ =
        LightModeResponse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
LightModeResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&LightModeResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(LightModeResponse_class_data_.tc_table);
  return LightModeResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2>
LightModeResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(LightModeResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    LightModeResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::linxos_device::LightModeResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .linxos_device.ResponseStatus status = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(LightModeResponse, _impl_.status_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .linxos_device.ResponseStatus status = 1;
    {PROTOBUF_FIELD_OFFSET(LightModeResponse, _impl_.status_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::linxos_device::ResponseStatus>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void LightModeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:linxos_device.LightModeResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    ABSL_DCHECK(_impl_.status_ != nullptr);
    _impl_.status_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL LightModeResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const LightModeResponse& this_ = static_cast<const LightModeResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL LightModeResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const LightModeResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:linxos_device.LightModeResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .linxos_device.ResponseStatus status = 1;
  if ((cached_has_bits & 0x00000001U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.status_, this_._impl_.status_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:linxos_device.LightModeResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t LightModeResponse::ByteSizeLong(const MessageLite& base) {
  const LightModeResponse& this_ = static_cast<const LightModeResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t LightModeResponse::ByteSizeLong() const {
  const LightModeResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:linxos_device.LightModeResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

   {
    // .linxos_device.ResponseStatus status = 1;
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.status_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void LightModeResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<LightModeResponse*>(&to_msg);
  auto& from = static_cast<const LightModeResponse&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:linxos_device.LightModeResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    ABSL_DCHECK(from._impl_.status_ != nullptr);
    if (_this->_impl_.status_ == nullptr) {
      _this->_impl_.status_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.status_);
    } else {
      _this->_impl_.status_->MergeFrom(*from._impl_.status_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void LightModeResponse::CopyFrom(const LightModeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:linxos_device.LightModeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void LightModeResponse::InternalSwap(LightModeResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.status_, other->_impl_.status_);
}

::google::protobuf::Metadata LightModeResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class AudioPlayRequest::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<AudioPlayRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(AudioPlayRequest, _impl_._has_bits_);
};

AudioPlayRequest::AudioPlayRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, AudioPlayRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:linxos_device.AudioPlayRequest)
}
PROTOBUF_NDEBUG_INLINE AudioPlayRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::linxos_device::AudioPlayRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        device_id_(arena, from.device_id_),
        file_path_(arena, from.file_path_) {}

AudioPlayRequest::AudioPlayRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const AudioPlayRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, AudioPlayRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  AudioPlayRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, volume_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, volume_),
           offsetof(Impl_, loop_) -
               offsetof(Impl_, volume_) +
               sizeof(Impl_::loop_));

  // @@protoc_insertion_point(copy_constructor:linxos_device.AudioPlayRequest)
}
PROTOBUF_NDEBUG_INLINE AudioPlayRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        device_id_(arena),
        file_path_(arena) {}

inline void AudioPlayRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, volume_),
           0,
           offsetof(Impl_, loop_) -
               offsetof(Impl_, volume_) +
               sizeof(Impl_::loop_));
}
AudioPlayRequest::~AudioPlayRequest() {
  // @@protoc_insertion_point(destructor:linxos_device.AudioPlayRequest)
  SharedDtor(*this);
}
inline void AudioPlayRequest::SharedDtor(MessageLite& self) {
  AudioPlayRequest& this_ = static_cast<AudioPlayRequest&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.device_id_.Destroy();
  this_._impl_.file_path_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL AudioPlayRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) AudioPlayRequest(arena);
}
constexpr auto AudioPlayRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(AudioPlayRequest),
                                            alignof(AudioPlayRequest));
}
constexpr auto AudioPlayRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_AudioPlayRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &AudioPlayRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<AudioPlayRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &AudioPlayRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<AudioPlayRequest>(), &AudioPlayRequest::ByteSizeLong,
              &AudioPlayRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(AudioPlayRequest, _impl_._cached_size_),
          false,
      },
      &AudioPlayRequest::kDescriptorMethods,
      &descriptor_table_device_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull AudioPlayRequest_class_data_ =
        AudioPlayRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
AudioPlayRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&AudioPlayRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(AudioPlayRequest_class_data_.tc_table);
  return AudioPlayRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 57, 2>
AudioPlayRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(AudioPlayRequest, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    AudioPlayRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::linxos_device::AudioPlayRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // bool loop = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(AudioPlayRequest, _impl_.loop_), 3>(),
     {32, 3, 0, PROTOBUF_FIELD_OFFSET(AudioPlayRequest, _impl_.loop_)}},
    // string device_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(AudioPlayRequest, _impl_.device_id_)}},
    // string file_path = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(AudioPlayRequest, _impl_.file_path_)}},
    // float volume = 3;
    {::_pbi::TcParser::FastF32S1,
     {29, 2, 0, PROTOBUF_FIELD_OFFSET(AudioPlayRequest, _impl_.volume_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string device_id = 1;
    {PROTOBUF_FIELD_OFFSET(AudioPlayRequest, _impl_.device_id_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string file_path = 2;
    {PROTOBUF_FIELD_OFFSET(AudioPlayRequest, _impl_.file_path_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // float volume = 3;
    {PROTOBUF_FIELD_OFFSET(AudioPlayRequest, _impl_.volume_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // bool loop = 4;
    {PROTOBUF_FIELD_OFFSET(AudioPlayRequest, _impl_.loop_), _Internal::kHasBitsOffset + 3, 0, (0 | ::_fl::kFcOptional | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
    "\36\11\11\0\0\0\0\0"
    "linxos_device.AudioPlayRequest"
    "device_id"
    "file_path"
  }},
};
PROTOBUF_NOINLINE void AudioPlayRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:linxos_device.AudioPlayRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      _impl_.device_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      _impl_.file_path_.ClearNonDefaultToEmpty();
    }
  }
  if ((cached_has_bits & 0x0000000cU) != 0) {
    ::memset(&_impl_.volume_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.loop_) -
        reinterpret_cast<char*>(&_impl_.volume_)) + sizeof(_impl_.loop_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL AudioPlayRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const AudioPlayRequest& this_ = static_cast<const AudioPlayRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL AudioPlayRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const AudioPlayRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:linxos_device.AudioPlayRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string device_id = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_device_id().empty()) {
      const ::std::string& _s = this_._internal_device_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "linxos_device.AudioPlayRequest.device_id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // string file_path = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (!this_._internal_file_path().empty()) {
      const ::std::string& _s = this_._internal_file_path();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "linxos_device.AudioPlayRequest.file_path");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  // float volume = 3;
  if ((this_._impl_._has_bits_[0] & 0x00000004U) != 0) {
    if (::absl::bit_cast<::uint32_t>(this_._internal_volume()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteFloatToArray(
          3, this_._internal_volume(), target);
    }
  }

  // bool loop = 4;
  if ((this_._impl_._has_bits_[0] & 0x00000008U) != 0) {
    if (this_._internal_loop() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          4, this_._internal_loop(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:linxos_device.AudioPlayRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t AudioPlayRequest::ByteSizeLong(const MessageLite& base) {
  const AudioPlayRequest& this_ = static_cast<const AudioPlayRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t AudioPlayRequest::ByteSizeLong() const {
  const AudioPlayRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:linxos_device.AudioPlayRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fU) != 0) {
    // string device_id = 1;
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_device_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_device_id());
      }
    }
    // string file_path = 2;
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!this_._internal_file_path().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_file_path());
      }
    }
    // float volume = 3;
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (::absl::bit_cast<::uint32_t>(this_._internal_volume()) != 0) {
        total_size += 5;
      }
    }
    // bool loop = 4;
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (this_._internal_loop() != 0) {
        total_size += 2;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void AudioPlayRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AudioPlayRequest*>(&to_msg);
  auto& from = static_cast<const AudioPlayRequest&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:linxos_device.AudioPlayRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_device_id().empty()) {
        _this->_internal_set_device_id(from._internal_device_id());
      } else {
        if (_this->_impl_.device_id_.IsDefault()) {
          _this->_internal_set_device_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!from._internal_file_path().empty()) {
        _this->_internal_set_file_path(from._internal_file_path());
      } else {
        if (_this->_impl_.file_path_.IsDefault()) {
          _this->_internal_set_file_path("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (::absl::bit_cast<::uint32_t>(from._internal_volume()) != 0) {
        _this->_impl_.volume_ = from._impl_.volume_;
      }
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (from._internal_loop() != 0) {
        _this->_impl_.loop_ = from._impl_.loop_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AudioPlayRequest::CopyFrom(const AudioPlayRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:linxos_device.AudioPlayRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void AudioPlayRequest::InternalSwap(AudioPlayRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.device_id_, &other->_impl_.device_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.file_path_, &other->_impl_.file_path_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AudioPlayRequest, _impl_.loop_)
      + sizeof(AudioPlayRequest::_impl_.loop_)
      - PROTOBUF_FIELD_OFFSET(AudioPlayRequest, _impl_.volume_)>(
          reinterpret_cast<char*>(&_impl_.volume_),
          reinterpret_cast<char*>(&other->_impl_.volume_));
}

::google::protobuf::Metadata AudioPlayRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class AudioPlayResponse::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<AudioPlayResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(AudioPlayResponse, _impl_._has_bits_);
};

AudioPlayResponse::AudioPlayResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, AudioPlayResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:linxos_device.AudioPlayResponse)
}
PROTOBUF_NDEBUG_INLINE AudioPlayResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::linxos_device::AudioPlayResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        audio_id_(arena, from.audio_id_) {}

AudioPlayResponse::AudioPlayResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const AudioPlayResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, AudioPlayResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  AudioPlayResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.status_ = ((cached_has_bits & 0x00000002U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.status_)
                : nullptr;
  _impl_.duration_ = from._impl_.duration_;

  // @@protoc_insertion_point(copy_constructor:linxos_device.AudioPlayResponse)
}
PROTOBUF_NDEBUG_INLINE AudioPlayResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        audio_id_(arena) {}

inline void AudioPlayResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, status_),
           0,
           offsetof(Impl_, duration_) -
               offsetof(Impl_, status_) +
               sizeof(Impl_::duration_));
}
AudioPlayResponse::~AudioPlayResponse() {
  // @@protoc_insertion_point(destructor:linxos_device.AudioPlayResponse)
  SharedDtor(*this);
}
inline void AudioPlayResponse::SharedDtor(MessageLite& self) {
  AudioPlayResponse& this_ = static_cast<AudioPlayResponse&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.audio_id_.Destroy();
  delete this_._impl_.status_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL AudioPlayResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) AudioPlayResponse(arena);
}
constexpr auto AudioPlayResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(AudioPlayResponse),
                                            alignof(AudioPlayResponse));
}
constexpr auto AudioPlayResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_AudioPlayResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &AudioPlayResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<AudioPlayResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &AudioPlayResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<AudioPlayResponse>(), &AudioPlayResponse::ByteSizeLong,
              &AudioPlayResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(AudioPlayResponse, _impl_._cached_size_),
          false,
      },
      &AudioPlayResponse::kDescriptorMethods,
      &descriptor_table_device_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull AudioPlayResponse_class_data_ =
        AudioPlayResponse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
AudioPlayResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&AudioPlayResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(AudioPlayResponse_class_data_.tc_table);
  return AudioPlayResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 48, 2>
AudioPlayResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(AudioPlayResponse, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    AudioPlayResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::linxos_device::AudioPlayResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .linxos_device.ResponseStatus status = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 1, 0, PROTOBUF_FIELD_OFFSET(AudioPlayResponse, _impl_.status_)}},
    // string audio_id = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(AudioPlayResponse, _impl_.audio_id_)}},
    // float duration = 3;
    {::_pbi::TcParser::FastF32S1,
     {29, 2, 0, PROTOBUF_FIELD_OFFSET(AudioPlayResponse, _impl_.duration_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .linxos_device.ResponseStatus status = 1;
    {PROTOBUF_FIELD_OFFSET(AudioPlayResponse, _impl_.status_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string audio_id = 2;
    {PROTOBUF_FIELD_OFFSET(AudioPlayResponse, _impl_.audio_id_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // float duration = 3;
    {PROTOBUF_FIELD_OFFSET(AudioPlayResponse, _impl_.duration_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::linxos_device::ResponseStatus>()},
  }},
  {{
    "\37\0\10\0\0\0\0\0"
    "linxos_device.AudioPlayResponse"
    "audio_id"
  }},
};
PROTOBUF_NOINLINE void AudioPlayResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:linxos_device.AudioPlayResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      _impl_.audio_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      ABSL_DCHECK(_impl_.status_ != nullptr);
      _impl_.status_->Clear();
    }
  }
  _impl_.duration_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL AudioPlayResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const AudioPlayResponse& this_ = static_cast<const AudioPlayResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL AudioPlayResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const AudioPlayResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:linxos_device.AudioPlayResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .linxos_device.ResponseStatus status = 1;
  if ((cached_has_bits & 0x00000002U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.status_, this_._impl_.status_->GetCachedSize(), target,
        stream);
  }

  // string audio_id = 2;
  if ((cached_has_bits & 0x00000001U) != 0) {
    if (!this_._internal_audio_id().empty()) {
      const ::std::string& _s = this_._internal_audio_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "linxos_device.AudioPlayResponse.audio_id");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  // float duration = 3;
  if ((cached_has_bits & 0x00000004U) != 0) {
    if (::absl::bit_cast<::uint32_t>(this_._internal_duration()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteFloatToArray(
          3, this_._internal_duration(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:linxos_device.AudioPlayResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t AudioPlayResponse::ByteSizeLong(const MessageLite& base) {
  const AudioPlayResponse& this_ = static_cast<const AudioPlayResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t AudioPlayResponse::ByteSizeLong() const {
  const AudioPlayResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:linxos_device.AudioPlayResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    // string audio_id = 2;
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_audio_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_audio_id());
      }
    }
    // .linxos_device.ResponseStatus status = 1;
    if ((cached_has_bits & 0x00000002U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.status_);
    }
    // float duration = 3;
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (::absl::bit_cast<::uint32_t>(this_._internal_duration()) != 0) {
        total_size += 5;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void AudioPlayResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AudioPlayResponse*>(&to_msg);
  auto& from = static_cast<const AudioPlayResponse&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:linxos_device.AudioPlayResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_audio_id().empty()) {
        _this->_internal_set_audio_id(from._internal_audio_id());
      } else {
        if (_this->_impl_.audio_id_.IsDefault()) {
          _this->_internal_set_audio_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      ABSL_DCHECK(from._impl_.status_ != nullptr);
      if (_this->_impl_.status_ == nullptr) {
        _this->_impl_.status_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.status_);
      } else {
        _this->_impl_.status_->MergeFrom(*from._impl_.status_);
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (::absl::bit_cast<::uint32_t>(from._internal_duration()) != 0) {
        _this->_impl_.duration_ = from._impl_.duration_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AudioPlayResponse::CopyFrom(const AudioPlayResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:linxos_device.AudioPlayResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void AudioPlayResponse::InternalSwap(AudioPlayResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.audio_id_, &other->_impl_.audio_id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AudioPlayResponse, _impl_.duration_)
      + sizeof(AudioPlayResponse::_impl_.duration_)
      - PROTOBUF_FIELD_OFFSET(AudioPlayResponse, _impl_.status_)>(
          reinterpret_cast<char*>(&_impl_.status_),
          reinterpret_cast<char*>(&other->_impl_.status_));
}

::google::protobuf::Metadata AudioPlayResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class AudioRecordRequest::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<AudioRecordRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(AudioRecordRequest, _impl_._has_bits_);
};

AudioRecordRequest::AudioRecordRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, AudioRecordRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:linxos_device.AudioRecordRequest)
}
PROTOBUF_NDEBUG_INLINE AudioRecordRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::linxos_device::AudioRecordRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        device_id_(arena, from.device_id_),
        format_(arena, from.format_) {}

AudioRecordRequest::AudioRecordRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const AudioRecordRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, AudioRecordRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  AudioRecordRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, duration_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, duration_),
           offsetof(Impl_, sample_rate_) -
               offsetof(Impl_, duration_) +
               sizeof(Impl_::sample_rate_));

  // @@protoc_insertion_point(copy_constructor:linxos_device.AudioRecordRequest)
}
PROTOBUF_NDEBUG_INLINE AudioRecordRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        device_id_(arena),
        format_(arena) {}

inline void AudioRecordRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, duration_),
           0,
           offsetof(Impl_, sample_rate_) -
               offsetof(Impl_, duration_) +
               sizeof(Impl_::sample_rate_));
}
AudioRecordRequest::~AudioRecordRequest() {
  // @@protoc_insertion_point(destructor:linxos_device.AudioRecordRequest)
  SharedDtor(*this);
}
inline void AudioRecordRequest::SharedDtor(MessageLite& self) {
  AudioRecordRequest& this_ = static_cast<AudioRecordRequest&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.device_id_.Destroy();
  this_._impl_.format_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL AudioRecordRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) AudioRecordRequest(arena);
}
constexpr auto AudioRecordRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(AudioRecordRequest),
                                            alignof(AudioRecordRequest));
}
constexpr auto AudioRecordRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_AudioRecordRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &AudioRecordRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<AudioRecordRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &AudioRecordRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<AudioRecordRequest>(), &AudioRecordRequest::ByteSizeLong,
              &AudioRecordRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(AudioRecordRequest, _impl_._cached_size_),
          false,
      },
      &AudioRecordRequest::kDescriptorMethods,
      &descriptor_table_device_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull AudioRecordRequest_class_data_ =
        AudioRecordRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
AudioRecordRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&AudioRecordRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(AudioRecordRequest_class_data_.tc_table);
  return AudioRecordRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 56, 2>
AudioRecordRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(AudioRecordRequest, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    AudioRecordRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::linxos_device::AudioRecordRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int32 sample_rate = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AudioRecordRequest, _impl_.sample_rate_), 3>(),
     {32, 3, 0, PROTOBUF_FIELD_OFFSET(AudioRecordRequest, _impl_.sample_rate_)}},
    // string device_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(AudioRecordRequest, _impl_.device_id_)}},
    // int32 duration = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AudioRecordRequest, _impl_.duration_), 2>(),
     {16, 2, 0, PROTOBUF_FIELD_OFFSET(AudioRecordRequest, _impl_.duration_)}},
    // string format = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 1, 0, PROTOBUF_FIELD_OFFSET(AudioRecordRequest, _impl_.format_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string device_id = 1;
    {PROTOBUF_FIELD_OFFSET(AudioRecordRequest, _impl_.device_id_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 duration = 2;
    {PROTOBUF_FIELD_OFFSET(AudioRecordRequest, _impl_.duration_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // string format = 3;
    {PROTOBUF_FIELD_OFFSET(AudioRecordRequest, _impl_.format_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 sample_rate = 4;
    {PROTOBUF_FIELD_OFFSET(AudioRecordRequest, _impl_.sample_rate_), _Internal::kHasBitsOffset + 3, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
    "\40\11\0\6\0\0\0\0"
    "linxos_device.AudioRecordRequest"
    "device_id"
    "format"
  }},
};
PROTOBUF_NOINLINE void AudioRecordRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:linxos_device.AudioRecordRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      _impl_.device_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      _impl_.format_.ClearNonDefaultToEmpty();
    }
  }
  if ((cached_has_bits & 0x0000000cU) != 0) {
    ::memset(&_impl_.duration_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.sample_rate_) -
        reinterpret_cast<char*>(&_impl_.duration_)) + sizeof(_impl_.sample_rate_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL AudioRecordRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const AudioRecordRequest& this_ = static_cast<const AudioRecordRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL AudioRecordRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const AudioRecordRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:linxos_device.AudioRecordRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string device_id = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_device_id().empty()) {
      const ::std::string& _s = this_._internal_device_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "linxos_device.AudioRecordRequest.device_id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // int32 duration = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000004U) != 0) {
    if (this_._internal_duration() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<2>(
              stream, this_._internal_duration(), target);
    }
  }

  // string format = 3;
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (!this_._internal_format().empty()) {
      const ::std::string& _s = this_._internal_format();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "linxos_device.AudioRecordRequest.format");
      target = stream->WriteStringMaybeAliased(3, _s, target);
    }
  }

  // int32 sample_rate = 4;
  if ((this_._impl_._has_bits_[0] & 0x00000008U) != 0) {
    if (this_._internal_sample_rate() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<4>(
              stream, this_._internal_sample_rate(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:linxos_device.AudioRecordRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t AudioRecordRequest::ByteSizeLong(const MessageLite& base) {
  const AudioRecordRequest& this_ = static_cast<const AudioRecordRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t AudioRecordRequest::ByteSizeLong() const {
  const AudioRecordRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:linxos_device.AudioRecordRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fU) != 0) {
    // string device_id = 1;
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_device_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_device_id());
      }
    }
    // string format = 3;
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!this_._internal_format().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_format());
      }
    }
    // int32 duration = 2;
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (this_._internal_duration() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_duration());
      }
    }
    // int32 sample_rate = 4;
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (this_._internal_sample_rate() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_sample_rate());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void AudioRecordRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AudioRecordRequest*>(&to_msg);
  auto& from = static_cast<const AudioRecordRequest&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:linxos_device.AudioRecordRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_device_id().empty()) {
        _this->_internal_set_device_id(from._internal_device_id());
      } else {
        if (_this->_impl_.device_id_.IsDefault()) {
          _this->_internal_set_device_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!from._internal_format().empty()) {
        _this->_internal_set_format(from._internal_format());
      } else {
        if (_this->_impl_.format_.IsDefault()) {
          _this->_internal_set_format("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (from._internal_duration() != 0) {
        _this->_impl_.duration_ = from._impl_.duration_;
      }
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (from._internal_sample_rate() != 0) {
        _this->_impl_.sample_rate_ = from._impl_.sample_rate_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AudioRecordRequest::CopyFrom(const AudioRecordRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:linxos_device.AudioRecordRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void AudioRecordRequest::InternalSwap(AudioRecordRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.device_id_, &other->_impl_.device_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.format_, &other->_impl_.format_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AudioRecordRequest, _impl_.sample_rate_)
      + sizeof(AudioRecordRequest::_impl_.sample_rate_)
      - PROTOBUF_FIELD_OFFSET(AudioRecordRequest, _impl_.duration_)>(
          reinterpret_cast<char*>(&_impl_.duration_),
          reinterpret_cast<char*>(&other->_impl_.duration_));
}

::google::protobuf::Metadata AudioRecordRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class AudioRecordResponse::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<AudioRecordResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(AudioRecordResponse, _impl_._has_bits_);
};

AudioRecordResponse::AudioRecordResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, AudioRecordResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:linxos_device.AudioRecordResponse)
}
PROTOBUF_NDEBUG_INLINE AudioRecordResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::linxos_device::AudioRecordResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        record_id_(arena, from.record_id_),
        file_path_(arena, from.file_path_) {}

AudioRecordResponse::AudioRecordResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const AudioRecordResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, AudioRecordResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  AudioRecordResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.status_ = ((cached_has_bits & 0x00000004U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.status_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:linxos_device.AudioRecordResponse)
}
PROTOBUF_NDEBUG_INLINE AudioRecordResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        record_id_(arena),
        file_path_(arena) {}

inline void AudioRecordResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.status_ = {};
}
AudioRecordResponse::~AudioRecordResponse() {
  // @@protoc_insertion_point(destructor:linxos_device.AudioRecordResponse)
  SharedDtor(*this);
}
inline void AudioRecordResponse::SharedDtor(MessageLite& self) {
  AudioRecordResponse& this_ = static_cast<AudioRecordResponse&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.record_id_.Destroy();
  this_._impl_.file_path_.Destroy();
  delete this_._impl_.status_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL AudioRecordResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) AudioRecordResponse(arena);
}
constexpr auto AudioRecordResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(AudioRecordResponse),
                                            alignof(AudioRecordResponse));
}
constexpr auto AudioRecordResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_AudioRecordResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &AudioRecordResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<AudioRecordResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &AudioRecordResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<AudioRecordResponse>(), &AudioRecordResponse::ByteSizeLong,
              &AudioRecordResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(AudioRecordResponse, _impl_._cached_size_),
          false,
      },
      &AudioRecordResponse::kDescriptorMethods,
      &descriptor_table_device_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull AudioRecordResponse_class_data_ =
        AudioRecordResponse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
AudioRecordResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&AudioRecordResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(AudioRecordResponse_class_data_.tc_table);
  return AudioRecordResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 60, 2>
AudioRecordResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(AudioRecordResponse, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    AudioRecordResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::linxos_device::AudioRecordResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .linxos_device.ResponseStatus status = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 2, 0, PROTOBUF_FIELD_OFFSET(AudioRecordResponse, _impl_.status_)}},
    // string record_id = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(AudioRecordResponse, _impl_.record_id_)}},
    // string file_path = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 1, 0, PROTOBUF_FIELD_OFFSET(AudioRecordResponse, _impl_.file_path_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .linxos_device.ResponseStatus status = 1;
    {PROTOBUF_FIELD_OFFSET(AudioRecordResponse, _impl_.status_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string record_id = 2;
    {PROTOBUF_FIELD_OFFSET(AudioRecordResponse, _impl_.record_id_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string file_path = 3;
    {PROTOBUF_FIELD_OFFSET(AudioRecordResponse, _impl_.file_path_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::linxos_device::ResponseStatus>()},
  }},
  {{
    "\41\0\11\11\0\0\0\0"
    "linxos_device.AudioRecordResponse"
    "record_id"
    "file_path"
  }},
};
PROTOBUF_NOINLINE void AudioRecordResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:linxos_device.AudioRecordResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      _impl_.record_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      _impl_.file_path_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      ABSL_DCHECK(_impl_.status_ != nullptr);
      _impl_.status_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL AudioRecordResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const AudioRecordResponse& this_ = static_cast<const AudioRecordResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL AudioRecordResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const AudioRecordResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:linxos_device.AudioRecordResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .linxos_device.ResponseStatus status = 1;
  if ((cached_has_bits & 0x00000004U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.status_, this_._impl_.status_->GetCachedSize(), target,
        stream);
  }

  // string record_id = 2;
  if ((cached_has_bits & 0x00000001U) != 0) {
    if (!this_._internal_record_id().empty()) {
      const ::std::string& _s = this_._internal_record_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "linxos_device.AudioRecordResponse.record_id");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  // string file_path = 3;
  if ((cached_has_bits & 0x00000002U) != 0) {
    if (!this_._internal_file_path().empty()) {
      const ::std::string& _s = this_._internal_file_path();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "linxos_device.AudioRecordResponse.file_path");
      target = stream->WriteStringMaybeAliased(3, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:linxos_device.AudioRecordResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t AudioRecordResponse::ByteSizeLong(const MessageLite& base) {
  const AudioRecordResponse& this_ = static_cast<const AudioRecordResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t AudioRecordResponse::ByteSizeLong() const {
  const AudioRecordResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:linxos_device.AudioRecordResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    // string record_id = 2;
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_record_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_record_id());
      }
    }
    // string file_path = 3;
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!this_._internal_file_path().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_file_path());
      }
    }
    // .linxos_device.ResponseStatus status = 1;
    if ((cached_has_bits & 0x00000004U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.status_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void AudioRecordResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AudioRecordResponse*>(&to_msg);
  auto& from = static_cast<const AudioRecordResponse&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:linxos_device.AudioRecordResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_record_id().empty()) {
        _this->_internal_set_record_id(from._internal_record_id());
      } else {
        if (_this->_impl_.record_id_.IsDefault()) {
          _this->_internal_set_record_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!from._internal_file_path().empty()) {
        _this->_internal_set_file_path(from._internal_file_path());
      } else {
        if (_this->_impl_.file_path_.IsDefault()) {
          _this->_internal_set_file_path("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      ABSL_DCHECK(from._impl_.status_ != nullptr);
      if (_this->_impl_.status_ == nullptr) {
        _this->_impl_.status_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.status_);
      } else {
        _this->_impl_.status_->MergeFrom(*from._impl_.status_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AudioRecordResponse::CopyFrom(const AudioRecordResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:linxos_device.AudioRecordResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void AudioRecordResponse::InternalSwap(AudioRecordResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.record_id_, &other->_impl_.record_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.file_path_, &other->_impl_.file_path_, arena);
  swap(_impl_.status_, other->_impl_.status_);
}

::google::protobuf::Metadata AudioRecordResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class AudioStopRequest::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<AudioStopRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(AudioStopRequest, _impl_._has_bits_);
};

AudioStopRequest::AudioStopRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, AudioStopRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:linxos_device.AudioStopRequest)
}
PROTOBUF_NDEBUG_INLINE AudioStopRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::linxos_device::AudioStopRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        device_id_(arena, from.device_id_),
        audio_id_(arena, from.audio_id_) {}

AudioStopRequest::AudioStopRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const AudioStopRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, AudioStopRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  AudioStopRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:linxos_device.AudioStopRequest)
}
PROTOBUF_NDEBUG_INLINE AudioStopRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        device_id_(arena),
        audio_id_(arena) {}

inline void AudioStopRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
AudioStopRequest::~AudioStopRequest() {
  // @@protoc_insertion_point(destructor:linxos_device.AudioStopRequest)
  SharedDtor(*this);
}
inline void AudioStopRequest::SharedDtor(MessageLite& self) {
  AudioStopRequest& this_ = static_cast<AudioStopRequest&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.device_id_.Destroy();
  this_._impl_.audio_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL AudioStopRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) AudioStopRequest(arena);
}
constexpr auto AudioStopRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(AudioStopRequest),
                                            alignof(AudioStopRequest));
}
constexpr auto AudioStopRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_AudioStopRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &AudioStopRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<AudioStopRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &AudioStopRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<AudioStopRequest>(), &AudioStopRequest::ByteSizeLong,
              &AudioStopRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(AudioStopRequest, _impl_._cached_size_),
          false,
      },
      &AudioStopRequest::kDescriptorMethods,
      &descriptor_table_device_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull AudioStopRequest_class_data_ =
        AudioStopRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
AudioStopRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&AudioStopRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(AudioStopRequest_class_data_.tc_table);
  return AudioStopRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 56, 2>
AudioStopRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(AudioStopRequest, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    AudioStopRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::linxos_device::AudioStopRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string audio_id = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(AudioStopRequest, _impl_.audio_id_)}},
    // string device_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(AudioStopRequest, _impl_.device_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string device_id = 1;
    {PROTOBUF_FIELD_OFFSET(AudioStopRequest, _impl_.device_id_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string audio_id = 2;
    {PROTOBUF_FIELD_OFFSET(AudioStopRequest, _impl_.audio_id_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\36\11\10\0\0\0\0\0"
    "linxos_device.AudioStopRequest"
    "device_id"
    "audio_id"
  }},
};
PROTOBUF_NOINLINE void AudioStopRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:linxos_device.AudioStopRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      _impl_.device_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      _impl_.audio_id_.ClearNonDefaultToEmpty();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL AudioStopRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const AudioStopRequest& this_ = static_cast<const AudioStopRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL AudioStopRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const AudioStopRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:linxos_device.AudioStopRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string device_id = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_device_id().empty()) {
      const ::std::string& _s = this_._internal_device_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "linxos_device.AudioStopRequest.device_id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // string audio_id = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (!this_._internal_audio_id().empty()) {
      const ::std::string& _s = this_._internal_audio_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "linxos_device.AudioStopRequest.audio_id");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:linxos_device.AudioStopRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t AudioStopRequest::ByteSizeLong(const MessageLite& base) {
  const AudioStopRequest& this_ = static_cast<const AudioStopRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t AudioStopRequest::ByteSizeLong() const {
  const AudioStopRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:linxos_device.AudioStopRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    // string device_id = 1;
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_device_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_device_id());
      }
    }
    // string audio_id = 2;
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!this_._internal_audio_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_audio_id());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void AudioStopRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AudioStopRequest*>(&to_msg);
  auto& from = static_cast<const AudioStopRequest&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:linxos_device.AudioStopRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_device_id().empty()) {
        _this->_internal_set_device_id(from._internal_device_id());
      } else {
        if (_this->_impl_.device_id_.IsDefault()) {
          _this->_internal_set_device_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!from._internal_audio_id().empty()) {
        _this->_internal_set_audio_id(from._internal_audio_id());
      } else {
        if (_this->_impl_.audio_id_.IsDefault()) {
          _this->_internal_set_audio_id("");
        }
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AudioStopRequest::CopyFrom(const AudioStopRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:linxos_device.AudioStopRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void AudioStopRequest::InternalSwap(AudioStopRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.device_id_, &other->_impl_.device_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.audio_id_, &other->_impl_.audio_id_, arena);
}

::google::protobuf::Metadata AudioStopRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class AudioStopResponse::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<AudioStopResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(AudioStopResponse, _impl_._has_bits_);
};

AudioStopResponse::AudioStopResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, AudioStopResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:linxos_device.AudioStopResponse)
}
PROTOBUF_NDEBUG_INLINE AudioStopResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::linxos_device::AudioStopResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

AudioStopResponse::AudioStopResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const AudioStopResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, AudioStopResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  AudioStopResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.status_ = ((cached_has_bits & 0x00000001U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.status_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:linxos_device.AudioStopResponse)
}
PROTOBUF_NDEBUG_INLINE AudioStopResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void AudioStopResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.status_ = {};
}
AudioStopResponse::~AudioStopResponse() {
  // @@protoc_insertion_point(destructor:linxos_device.AudioStopResponse)
  SharedDtor(*this);
}
inline void AudioStopResponse::SharedDtor(MessageLite& self) {
  AudioStopResponse& this_ = static_cast<AudioStopResponse&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.status_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL AudioStopResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) AudioStopResponse(arena);
}
constexpr auto AudioStopResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(AudioStopResponse),
                                            alignof(AudioStopResponse));
}
constexpr auto AudioStopResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_AudioStopResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &AudioStopResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<AudioStopResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &AudioStopResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<AudioStopResponse>(), &AudioStopResponse::ByteSizeLong,
              &AudioStopResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(AudioStopResponse, _impl_._cached_size_),
          false,
      },
      &AudioStopResponse::kDescriptorMethods,
      &descriptor_table_device_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull AudioStopResponse_class_data_ =
        AudioStopResponse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
AudioStopResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&AudioStopResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(AudioStopResponse_class_data_.tc_table);
  return AudioStopResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2>
AudioStopResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(AudioStopResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    AudioStopResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::linxos_device::AudioStopResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .linxos_device.ResponseStatus status = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(AudioStopResponse, _impl_.status_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .linxos_device.ResponseStatus status = 1;
    {PROTOBUF_FIELD_OFFSET(AudioStopResponse, _impl_.status_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::linxos_device::ResponseStatus>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void AudioStopResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:linxos_device.AudioStopResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    ABSL_DCHECK(_impl_.status_ != nullptr);
    _impl_.status_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL AudioStopResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const AudioStopResponse& this_ = static_cast<const AudioStopResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL AudioStopResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const AudioStopResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:linxos_device.AudioStopResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .linxos_device.ResponseStatus status = 1;
  if ((cached_has_bits & 0x00000001U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.status_, this_._impl_.status_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:linxos_device.AudioStopResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t AudioStopResponse::ByteSizeLong(const MessageLite& base) {
  const AudioStopResponse& this_ = static_cast<const AudioStopResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t AudioStopResponse::ByteSizeLong() const {
  const AudioStopResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:linxos_device.AudioStopResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

   {
    // .linxos_device.ResponseStatus status = 1;
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.status_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void AudioStopResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AudioStopResponse*>(&to_msg);
  auto& from = static_cast<const AudioStopResponse&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:linxos_device.AudioStopResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    ABSL_DCHECK(from._impl_.status_ != nullptr);
    if (_this->_impl_.status_ == nullptr) {
      _this->_impl_.status_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.status_);
    } else {
      _this->_impl_.status_->MergeFrom(*from._impl_.status_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AudioStopResponse::CopyFrom(const AudioStopResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:linxos_device.AudioStopResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void AudioStopResponse::InternalSwap(AudioStopResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.status_, other->_impl_.status_);
}

::google::protobuf::Metadata AudioStopResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SystemInfoRequest::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<SystemInfoRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SystemInfoRequest, _impl_._has_bits_);
};

SystemInfoRequest::SystemInfoRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SystemInfoRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:linxos_device.SystemInfoRequest)
}
PROTOBUF_NDEBUG_INLINE SystemInfoRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::linxos_device::SystemInfoRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        device_id_(arena, from.device_id_) {}

SystemInfoRequest::SystemInfoRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const SystemInfoRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SystemInfoRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SystemInfoRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:linxos_device.SystemInfoRequest)
}
PROTOBUF_NDEBUG_INLINE SystemInfoRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        device_id_(arena) {}

inline void SystemInfoRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
SystemInfoRequest::~SystemInfoRequest() {
  // @@protoc_insertion_point(destructor:linxos_device.SystemInfoRequest)
  SharedDtor(*this);
}
inline void SystemInfoRequest::SharedDtor(MessageLite& self) {
  SystemInfoRequest& this_ = static_cast<SystemInfoRequest&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.device_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL SystemInfoRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) SystemInfoRequest(arena);
}
constexpr auto SystemInfoRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(SystemInfoRequest),
                                            alignof(SystemInfoRequest));
}
constexpr auto SystemInfoRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_SystemInfoRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &SystemInfoRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<SystemInfoRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &SystemInfoRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<SystemInfoRequest>(), &SystemInfoRequest::ByteSizeLong,
              &SystemInfoRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(SystemInfoRequest, _impl_._cached_size_),
          false,
      },
      &SystemInfoRequest::kDescriptorMethods,
      &descriptor_table_device_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull SystemInfoRequest_class_data_ =
        SystemInfoRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
SystemInfoRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&SystemInfoRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(SystemInfoRequest_class_data_.tc_table);
  return SystemInfoRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 49, 2>
SystemInfoRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SystemInfoRequest, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    SystemInfoRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::linxos_device::SystemInfoRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string device_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SystemInfoRequest, _impl_.device_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string device_id = 1;
    {PROTOBUF_FIELD_OFFSET(SystemInfoRequest, _impl_.device_id_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\37\11\0\0\0\0\0\0"
    "linxos_device.SystemInfoRequest"
    "device_id"
  }},
};
PROTOBUF_NOINLINE void SystemInfoRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:linxos_device.SystemInfoRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    _impl_.device_id_.ClearNonDefaultToEmpty();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL SystemInfoRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const SystemInfoRequest& this_ = static_cast<const SystemInfoRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL SystemInfoRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const SystemInfoRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:linxos_device.SystemInfoRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string device_id = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_device_id().empty()) {
      const ::std::string& _s = this_._internal_device_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "linxos_device.SystemInfoRequest.device_id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:linxos_device.SystemInfoRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t SystemInfoRequest::ByteSizeLong(const MessageLite& base) {
  const SystemInfoRequest& this_ = static_cast<const SystemInfoRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t SystemInfoRequest::ByteSizeLong() const {
  const SystemInfoRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:linxos_device.SystemInfoRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

   {
    // string device_id = 1;
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_device_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_device_id());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void SystemInfoRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SystemInfoRequest*>(&to_msg);
  auto& from = static_cast<const SystemInfoRequest&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:linxos_device.SystemInfoRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    if (!from._internal_device_id().empty()) {
      _this->_internal_set_device_id(from._internal_device_id());
    } else {
      if (_this->_impl_.device_id_.IsDefault()) {
        _this->_internal_set_device_id("");
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SystemInfoRequest::CopyFrom(const SystemInfoRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:linxos_device.SystemInfoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SystemInfoRequest::InternalSwap(SystemInfoRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.device_id_, &other->_impl_.device_id_, arena);
}

::google::protobuf::Metadata SystemInfoRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
SystemInfoResponse_AdditionalInfoEntry_DoNotUse::SystemInfoResponse_AdditionalInfoEntry_DoNotUse()
    : SuperType(SystemInfoResponse_AdditionalInfoEntry_DoNotUse_class_data_.base()) {}
SystemInfoResponse_AdditionalInfoEntry_DoNotUse::SystemInfoResponse_AdditionalInfoEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
    : SuperType(arena, SystemInfoResponse_AdditionalInfoEntry_DoNotUse_class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
SystemInfoResponse_AdditionalInfoEntry_DoNotUse::SystemInfoResponse_AdditionalInfoEntry_DoNotUse() : SuperType() {}
SystemInfoResponse_AdditionalInfoEntry_DoNotUse::SystemInfoResponse_AdditionalInfoEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
inline void* PROTOBUF_NONNULL SystemInfoResponse_AdditionalInfoEntry_DoNotUse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) SystemInfoResponse_AdditionalInfoEntry_DoNotUse(arena);
}
constexpr auto SystemInfoResponse_AdditionalInfoEntry_DoNotUse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(SystemInfoResponse_AdditionalInfoEntry_DoNotUse),
                                            alignof(SystemInfoResponse_AdditionalInfoEntry_DoNotUse));
}
constexpr auto SystemInfoResponse_AdditionalInfoEntry_DoNotUse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_SystemInfoResponse_AdditionalInfoEntry_DoNotUse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &SystemInfoResponse_AdditionalInfoEntry_DoNotUse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<SystemInfoResponse_AdditionalInfoEntry_DoNotUse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &SystemInfoResponse_AdditionalInfoEntry_DoNotUse::SharedDtor,
          static_cast<void (::google::protobuf::MessageLite::*)()>(&SystemInfoResponse_AdditionalInfoEntry_DoNotUse::ClearImpl),
              ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
              ,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(SystemInfoResponse_AdditionalInfoEntry_DoNotUse, _impl_._cached_size_),
          false,
      },
      &SystemInfoResponse_AdditionalInfoEntry_DoNotUse::kDescriptorMethods,
      &descriptor_table_device_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull SystemInfoResponse_AdditionalInfoEntry_DoNotUse_class_data_ =
        SystemInfoResponse_AdditionalInfoEntry_DoNotUse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
SystemInfoResponse_AdditionalInfoEntry_DoNotUse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&SystemInfoResponse_AdditionalInfoEntry_DoNotUse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(SystemInfoResponse_AdditionalInfoEntry_DoNotUse_class_data_.tc_table);
  return SystemInfoResponse_AdditionalInfoEntry_DoNotUse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 69, 2>
SystemInfoResponse_AdditionalInfoEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SystemInfoResponse_AdditionalInfoEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    SystemInfoResponse_AdditionalInfoEntry_DoNotUse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::linxos_device::SystemInfoResponse_AdditionalInfoEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(SystemInfoResponse_AdditionalInfoEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SystemInfoResponse_AdditionalInfoEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(SystemInfoResponse_AdditionalInfoEntry_DoNotUse, _impl_.key_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2;
    {PROTOBUF_FIELD_OFFSET(SystemInfoResponse_AdditionalInfoEntry_DoNotUse, _impl_.value_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\64\3\5\0\0\0\0\0"
    "linxos_device.SystemInfoResponse.AdditionalInfoEntry"
    "key"
    "value"
  }},
};
// ===================================================================

class SystemInfoResponse::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<SystemInfoResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SystemInfoResponse, _impl_._has_bits_);
};

SystemInfoResponse::SystemInfoResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SystemInfoResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:linxos_device.SystemInfoResponse)
}
PROTOBUF_NDEBUG_INLINE SystemInfoResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::linxos_device::SystemInfoResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        additional_info_{visibility, arena, from.additional_info_},
        wifi_status_(arena, from.wifi_status_) {}

SystemInfoResponse::SystemInfoResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const SystemInfoResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SystemInfoResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SystemInfoResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.status_ = ((cached_has_bits & 0x00000002U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.status_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, cpu_usage_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, cpu_usage_),
           offsetof(Impl_, temperature_) -
               offsetof(Impl_, cpu_usage_) +
               sizeof(Impl_::temperature_));

  // @@protoc_insertion_point(copy_constructor:linxos_device.SystemInfoResponse)
}
PROTOBUF_NDEBUG_INLINE SystemInfoResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        additional_info_{visibility, arena},
        wifi_status_(arena) {}

inline void SystemInfoResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, status_),
           0,
           offsetof(Impl_, temperature_) -
               offsetof(Impl_, status_) +
               sizeof(Impl_::temperature_));
}
SystemInfoResponse::~SystemInfoResponse() {
  // @@protoc_insertion_point(destructor:linxos_device.SystemInfoResponse)
  SharedDtor(*this);
}
inline void SystemInfoResponse::SharedDtor(MessageLite& self) {
  SystemInfoResponse& this_ = static_cast<SystemInfoResponse&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.wifi_status_.Destroy();
  delete this_._impl_.status_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL SystemInfoResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) SystemInfoResponse(arena);
}
constexpr auto SystemInfoResponse::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(SystemInfoResponse, _impl_.additional_info_) +
          decltype(SystemInfoResponse::_impl_.additional_info_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(SystemInfoResponse, _impl_.additional_info_) +
          decltype(SystemInfoResponse::_impl_.additional_info_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(SystemInfoResponse), alignof(SystemInfoResponse), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&SystemInfoResponse::PlacementNew_,
                                 sizeof(SystemInfoResponse),
                                 alignof(SystemInfoResponse));
  }
}
constexpr auto SystemInfoResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_SystemInfoResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &SystemInfoResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<SystemInfoResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &SystemInfoResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<SystemInfoResponse>(), &SystemInfoResponse::ByteSizeLong,
              &SystemInfoResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(SystemInfoResponse, _impl_._cached_size_),
          false,
      },
      &SystemInfoResponse::kDescriptorMethods,
      &descriptor_table_device_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull SystemInfoResponse_class_data_ =
        SystemInfoResponse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
SystemInfoResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&SystemInfoResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(SystemInfoResponse_class_data_.tc_table);
  return SystemInfoResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 8, 2, 75, 2>
SystemInfoResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SystemInfoResponse, _impl_._has_bits_),
    0, // no _extensions_
    8, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967040,  // skipmap
    offsetof(decltype(_table_), field_entries),
    8,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    SystemInfoResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::linxos_device::SystemInfoResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .linxos_device.ResponseStatus status = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 1, 0, PROTOBUF_FIELD_OFFSET(SystemInfoResponse, _impl_.status_)}},
    // float cpu_usage = 2;
    {::_pbi::TcParser::FastF32S1,
     {21, 2, 0, PROTOBUF_FIELD_OFFSET(SystemInfoResponse, _impl_.cpu_usage_)}},
    // float memory_usage = 3;
    {::_pbi::TcParser::FastF32S1,
     {29, 3, 0, PROTOBUF_FIELD_OFFSET(SystemInfoResponse, _impl_.memory_usage_)}},
    // float temperature = 4;
    {::_pbi::TcParser::FastF32S1,
     {37, 6, 0, PROTOBUF_FIELD_OFFSET(SystemInfoResponse, _impl_.temperature_)}},
    // int64 uptime = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(SystemInfoResponse, _impl_.uptime_), 4>(),
     {40, 4, 0, PROTOBUF_FIELD_OFFSET(SystemInfoResponse, _impl_.uptime_)}},
    // string wifi_status = 6;
    {::_pbi::TcParser::FastUS1,
     {50, 0, 0, PROTOBUF_FIELD_OFFSET(SystemInfoResponse, _impl_.wifi_status_)}},
    // int64 free_heap = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(SystemInfoResponse, _impl_.free_heap_), 5>(),
     {56, 5, 0, PROTOBUF_FIELD_OFFSET(SystemInfoResponse, _impl_.free_heap_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .linxos_device.ResponseStatus status = 1;
    {PROTOBUF_FIELD_OFFSET(SystemInfoResponse, _impl_.status_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // float cpu_usage = 2;
    {PROTOBUF_FIELD_OFFSET(SystemInfoResponse, _impl_.cpu_usage_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // float memory_usage = 3;
    {PROTOBUF_FIELD_OFFSET(SystemInfoResponse, _impl_.memory_usage_), _Internal::kHasBitsOffset + 3, 0, (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // float temperature = 4;
    {PROTOBUF_FIELD_OFFSET(SystemInfoResponse, _impl_.temperature_), _Internal::kHasBitsOffset + 6, 0, (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // int64 uptime = 5;
    {PROTOBUF_FIELD_OFFSET(SystemInfoResponse, _impl_.uptime_), _Internal::kHasBitsOffset + 4, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // string wifi_status = 6;
    {PROTOBUF_FIELD_OFFSET(SystemInfoResponse, _impl_.wifi_status_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int64 free_heap = 7;
    {PROTOBUF_FIELD_OFFSET(SystemInfoResponse, _impl_.free_heap_), _Internal::kHasBitsOffset + 5, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // map<string, string> additional_info = 8;
    {PROTOBUF_FIELD_OFFSET(SystemInfoResponse, _impl_.additional_info_), -1, 1, (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::linxos_device::ResponseStatus>()},
      {::_pbi::TcParser::GetMapAuxInfo(1, 0, 0,
                                       9, 9,
                                       0)},
  }},
  {{
    "\40\0\0\0\0\0\13\0\17\0\0\0\0\0\0\0"
    "linxos_device.SystemInfoResponse"
    "wifi_status"
    "additional_info"
  }},
};
PROTOBUF_NOINLINE void SystemInfoResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:linxos_device.SystemInfoResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.additional_info_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      _impl_.wifi_status_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      ABSL_DCHECK(_impl_.status_ != nullptr);
      _impl_.status_->Clear();
    }
  }
  if ((cached_has_bits & 0x0000007cU) != 0) {
    ::memset(&_impl_.cpu_usage_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.temperature_) -
        reinterpret_cast<char*>(&_impl_.cpu_usage_)) + sizeof(_impl_.temperature_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL SystemInfoResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const SystemInfoResponse& this_ = static_cast<const SystemInfoResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL SystemInfoResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const SystemInfoResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:linxos_device.SystemInfoResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .linxos_device.ResponseStatus status = 1;
  if ((cached_has_bits & 0x00000002U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.status_, this_._impl_.status_->GetCachedSize(), target,
        stream);
  }

  // float cpu_usage = 2;
  if ((cached_has_bits & 0x00000004U) != 0) {
    if (::absl::bit_cast<::uint32_t>(this_._internal_cpu_usage()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteFloatToArray(
          2, this_._internal_cpu_usage(), target);
    }
  }

  // float memory_usage = 3;
  if ((cached_has_bits & 0x00000008U) != 0) {
    if (::absl::bit_cast<::uint32_t>(this_._internal_memory_usage()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteFloatToArray(
          3, this_._internal_memory_usage(), target);
    }
  }

  // float temperature = 4;
  if ((cached_has_bits & 0x00000040U) != 0) {
    if (::absl::bit_cast<::uint32_t>(this_._internal_temperature()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteFloatToArray(
          4, this_._internal_temperature(), target);
    }
  }

  // int64 uptime = 5;
  if ((cached_has_bits & 0x00000010U) != 0) {
    if (this_._internal_uptime() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<5>(
              stream, this_._internal_uptime(), target);
    }
  }

  // string wifi_status = 6;
  if ((cached_has_bits & 0x00000001U) != 0) {
    if (!this_._internal_wifi_status().empty()) {
      const ::std::string& _s = this_._internal_wifi_status();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "linxos_device.SystemInfoResponse.wifi_status");
      target = stream->WriteStringMaybeAliased(6, _s, target);
    }
  }

  // int64 free_heap = 7;
  if ((cached_has_bits & 0x00000020U) != 0) {
    if (this_._internal_free_heap() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<7>(
              stream, this_._internal_free_heap(), target);
    }
  }

  // map<string, string> additional_info = 8;
  if (!this_._internal_additional_info().empty()) {
    using MapType = ::google::protobuf::Map<::std::string, ::std::string>;
    using WireHelper = _pbi::MapEntryFuncs<::std::string, ::std::string,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_STRING>;
    const auto& field = this_._internal_additional_info();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            8, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "linxos_device.SystemInfoResponse.additional_info");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "linxos_device.SystemInfoResponse.additional_info");
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            8, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "linxos_device.SystemInfoResponse.additional_info");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "linxos_device.SystemInfoResponse.additional_info");
      }
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:linxos_device.SystemInfoResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t SystemInfoResponse::ByteSizeLong(const MessageLite& base) {
  const SystemInfoResponse& this_ = static_cast<const SystemInfoResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t SystemInfoResponse::ByteSizeLong() const {
  const SystemInfoResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:linxos_device.SystemInfoResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // map<string, string> additional_info = 8;
    {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_additional_info_size());
      for (const auto& entry : this_._internal_additional_info()) {
        total_size += _pbi::MapEntryFuncs<::std::string, ::std::string,
                                       _pbi::WireFormatLite::TYPE_STRING,
                                       _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000007fU) != 0) {
    // string wifi_status = 6;
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_wifi_status().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_wifi_status());
      }
    }
    // .linxos_device.ResponseStatus status = 1;
    if ((cached_has_bits & 0x00000002U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.status_);
    }
    // float cpu_usage = 2;
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (::absl::bit_cast<::uint32_t>(this_._internal_cpu_usage()) != 0) {
        total_size += 5;
      }
    }
    // float memory_usage = 3;
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (::absl::bit_cast<::uint32_t>(this_._internal_memory_usage()) != 0) {
        total_size += 5;
      }
    }
    // int64 uptime = 5;
    if ((cached_has_bits & 0x00000010U) != 0) {
      if (this_._internal_uptime() != 0) {
        total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
            this_._internal_uptime());
      }
    }
    // int64 free_heap = 7;
    if ((cached_has_bits & 0x00000020U) != 0) {
      if (this_._internal_free_heap() != 0) {
        total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
            this_._internal_free_heap());
      }
    }
    // float temperature = 4;
    if ((cached_has_bits & 0x00000040U) != 0) {
      if (::absl::bit_cast<::uint32_t>(this_._internal_temperature()) != 0) {
        total_size += 5;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void SystemInfoResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SystemInfoResponse*>(&to_msg);
  auto& from = static_cast<const SystemInfoResponse&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:linxos_device.SystemInfoResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.additional_info_.MergeFrom(from._impl_.additional_info_);
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000007fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_wifi_status().empty()) {
        _this->_internal_set_wifi_status(from._internal_wifi_status());
      } else {
        if (_this->_impl_.wifi_status_.IsDefault()) {
          _this->_internal_set_wifi_status("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      ABSL_DCHECK(from._impl_.status_ != nullptr);
      if (_this->_impl_.status_ == nullptr) {
        _this->_impl_.status_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.status_);
      } else {
        _this->_impl_.status_->MergeFrom(*from._impl_.status_);
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (::absl::bit_cast<::uint32_t>(from._internal_cpu_usage()) != 0) {
        _this->_impl_.cpu_usage_ = from._impl_.cpu_usage_;
      }
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (::absl::bit_cast<::uint32_t>(from._internal_memory_usage()) != 0) {
        _this->_impl_.memory_usage_ = from._impl_.memory_usage_;
      }
    }
    if ((cached_has_bits & 0x00000010U) != 0) {
      if (from._internal_uptime() != 0) {
        _this->_impl_.uptime_ = from._impl_.uptime_;
      }
    }
    if ((cached_has_bits & 0x00000020U) != 0) {
      if (from._internal_free_heap() != 0) {
        _this->_impl_.free_heap_ = from._impl_.free_heap_;
      }
    }
    if ((cached_has_bits & 0x00000040U) != 0) {
      if (::absl::bit_cast<::uint32_t>(from._internal_temperature()) != 0) {
        _this->_impl_.temperature_ = from._impl_.temperature_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SystemInfoResponse::CopyFrom(const SystemInfoResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:linxos_device.SystemInfoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SystemInfoResponse::InternalSwap(SystemInfoResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.additional_info_.InternalSwap(&other->_impl_.additional_info_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.wifi_status_, &other->_impl_.wifi_status_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SystemInfoResponse, _impl_.temperature_)
      + sizeof(SystemInfoResponse::_impl_.temperature_)
      - PROTOBUF_FIELD_OFFSET(SystemInfoResponse, _impl_.status_)>(
          reinterpret_cast<char*>(&_impl_.status_),
          reinterpret_cast<char*>(&other->_impl_.status_));
}

::google::protobuf::Metadata SystemInfoResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SystemRestartRequest::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<SystemRestartRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SystemRestartRequest, _impl_._has_bits_);
};

SystemRestartRequest::SystemRestartRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SystemRestartRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:linxos_device.SystemRestartRequest)
}
PROTOBUF_NDEBUG_INLINE SystemRestartRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::linxos_device::SystemRestartRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        device_id_(arena, from.device_id_),
        reason_(arena, from.reason_) {}

SystemRestartRequest::SystemRestartRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const SystemRestartRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SystemRestartRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SystemRestartRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.delay_ = from._impl_.delay_;

  // @@protoc_insertion_point(copy_constructor:linxos_device.SystemRestartRequest)
}
PROTOBUF_NDEBUG_INLINE SystemRestartRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        device_id_(arena),
        reason_(arena) {}

inline void SystemRestartRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.delay_ = {};
}
SystemRestartRequest::~SystemRestartRequest() {
  // @@protoc_insertion_point(destructor:linxos_device.SystemRestartRequest)
  SharedDtor(*this);
}
inline void SystemRestartRequest::SharedDtor(MessageLite& self) {
  SystemRestartRequest& this_ = static_cast<SystemRestartRequest&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.device_id_.Destroy();
  this_._impl_.reason_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL SystemRestartRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) SystemRestartRequest(arena);
}
constexpr auto SystemRestartRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(SystemRestartRequest),
                                            alignof(SystemRestartRequest));
}
constexpr auto SystemRestartRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_SystemRestartRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &SystemRestartRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<SystemRestartRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &SystemRestartRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<SystemRestartRequest>(), &SystemRestartRequest::ByteSizeLong,
              &SystemRestartRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(SystemRestartRequest, _impl_._cached_size_),
          false,
      },
      &SystemRestartRequest::kDescriptorMethods,
      &descriptor_table_device_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull SystemRestartRequest_class_data_ =
        SystemRestartRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
SystemRestartRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&SystemRestartRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(SystemRestartRequest_class_data_.tc_table);
  return SystemRestartRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 58, 2>
SystemRestartRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SystemRestartRequest, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    SystemRestartRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::linxos_device::SystemRestartRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string device_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SystemRestartRequest, _impl_.device_id_)}},
    // int32 delay = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SystemRestartRequest, _impl_.delay_), 2>(),
     {16, 2, 0, PROTOBUF_FIELD_OFFSET(SystemRestartRequest, _impl_.delay_)}},
    // string reason = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 1, 0, PROTOBUF_FIELD_OFFSET(SystemRestartRequest, _impl_.reason_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string device_id = 1;
    {PROTOBUF_FIELD_OFFSET(SystemRestartRequest, _impl_.device_id_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 delay = 2;
    {PROTOBUF_FIELD_OFFSET(SystemRestartRequest, _impl_.delay_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // string reason = 3;
    {PROTOBUF_FIELD_OFFSET(SystemRestartRequest, _impl_.reason_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\42\11\0\6\0\0\0\0"
    "linxos_device.SystemRestartRequest"
    "device_id"
    "reason"
  }},
};
PROTOBUF_NOINLINE void SystemRestartRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:linxos_device.SystemRestartRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      _impl_.device_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      _impl_.reason_.ClearNonDefaultToEmpty();
    }
  }
  _impl_.delay_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL SystemRestartRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const SystemRestartRequest& this_ = static_cast<const SystemRestartRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL SystemRestartRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const SystemRestartRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:linxos_device.SystemRestartRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string device_id = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_device_id().empty()) {
      const ::std::string& _s = this_._internal_device_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "linxos_device.SystemRestartRequest.device_id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // int32 delay = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000004U) != 0) {
    if (this_._internal_delay() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<2>(
              stream, this_._internal_delay(), target);
    }
  }

  // string reason = 3;
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (!this_._internal_reason().empty()) {
      const ::std::string& _s = this_._internal_reason();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "linxos_device.SystemRestartRequest.reason");
      target = stream->WriteStringMaybeAliased(3, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:linxos_device.SystemRestartRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t SystemRestartRequest::ByteSizeLong(const MessageLite& base) {
  const SystemRestartRequest& this_ = static_cast<const SystemRestartRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t SystemRestartRequest::ByteSizeLong() const {
  const SystemRestartRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:linxos_device.SystemRestartRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    // string device_id = 1;
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_device_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_device_id());
      }
    }
    // string reason = 3;
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!this_._internal_reason().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_reason());
      }
    }
    // int32 delay = 2;
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (this_._internal_delay() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_delay());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void SystemRestartRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SystemRestartRequest*>(&to_msg);
  auto& from = static_cast<const SystemRestartRequest&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:linxos_device.SystemRestartRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_device_id().empty()) {
        _this->_internal_set_device_id(from._internal_device_id());
      } else {
        if (_this->_impl_.device_id_.IsDefault()) {
          _this->_internal_set_device_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!from._internal_reason().empty()) {
        _this->_internal_set_reason(from._internal_reason());
      } else {
        if (_this->_impl_.reason_.IsDefault()) {
          _this->_internal_set_reason("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (from._internal_delay() != 0) {
        _this->_impl_.delay_ = from._impl_.delay_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SystemRestartRequest::CopyFrom(const SystemRestartRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:linxos_device.SystemRestartRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SystemRestartRequest::InternalSwap(SystemRestartRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.device_id_, &other->_impl_.device_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.reason_, &other->_impl_.reason_, arena);
  swap(_impl_.delay_, other->_impl_.delay_);
}

::google::protobuf::Metadata SystemRestartRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SystemRestartResponse::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<SystemRestartResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SystemRestartResponse, _impl_._has_bits_);
};

SystemRestartResponse::SystemRestartResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SystemRestartResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:linxos_device.SystemRestartResponse)
}
PROTOBUF_NDEBUG_INLINE SystemRestartResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::linxos_device::SystemRestartResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

SystemRestartResponse::SystemRestartResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const SystemRestartResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SystemRestartResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SystemRestartResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.status_ = ((cached_has_bits & 0x00000001U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.status_)
                : nullptr;
  _impl_.restart_time_ = from._impl_.restart_time_;

  // @@protoc_insertion_point(copy_constructor:linxos_device.SystemRestartResponse)
}
PROTOBUF_NDEBUG_INLINE SystemRestartResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void SystemRestartResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, status_),
           0,
           offsetof(Impl_, restart_time_) -
               offsetof(Impl_, status_) +
               sizeof(Impl_::restart_time_));
}
SystemRestartResponse::~SystemRestartResponse() {
  // @@protoc_insertion_point(destructor:linxos_device.SystemRestartResponse)
  SharedDtor(*this);
}
inline void SystemRestartResponse::SharedDtor(MessageLite& self) {
  SystemRestartResponse& this_ = static_cast<SystemRestartResponse&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.status_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL SystemRestartResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) SystemRestartResponse(arena);
}
constexpr auto SystemRestartResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(SystemRestartResponse),
                                            alignof(SystemRestartResponse));
}
constexpr auto SystemRestartResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_SystemRestartResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &SystemRestartResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<SystemRestartResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &SystemRestartResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<SystemRestartResponse>(), &SystemRestartResponse::ByteSizeLong,
              &SystemRestartResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(SystemRestartResponse, _impl_._cached_size_),
          false,
      },
      &SystemRestartResponse::kDescriptorMethods,
      &descriptor_table_device_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull SystemRestartResponse_class_data_ =
        SystemRestartResponse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
SystemRestartResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&SystemRestartResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(SystemRestartResponse_class_data_.tc_table);
  return SystemRestartResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2>
SystemRestartResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SystemRestartResponse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    SystemRestartResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::linxos_device::SystemRestartResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int64 restart_time = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(SystemRestartResponse, _impl_.restart_time_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(SystemRestartResponse, _impl_.restart_time_)}},
    // .linxos_device.ResponseStatus status = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SystemRestartResponse, _impl_.status_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .linxos_device.ResponseStatus status = 1;
    {PROTOBUF_FIELD_OFFSET(SystemRestartResponse, _impl_.status_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // int64 restart_time = 2;
    {PROTOBUF_FIELD_OFFSET(SystemRestartResponse, _impl_.restart_time_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::linxos_device::ResponseStatus>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void SystemRestartResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:linxos_device.SystemRestartResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    ABSL_DCHECK(_impl_.status_ != nullptr);
    _impl_.status_->Clear();
  }
  _impl_.restart_time_ = ::int64_t{0};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL SystemRestartResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const SystemRestartResponse& this_ = static_cast<const SystemRestartResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL SystemRestartResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const SystemRestartResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:linxos_device.SystemRestartResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .linxos_device.ResponseStatus status = 1;
  if ((cached_has_bits & 0x00000001U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.status_, this_._impl_.status_->GetCachedSize(), target,
        stream);
  }

  // int64 restart_time = 2;
  if ((cached_has_bits & 0x00000002U) != 0) {
    if (this_._internal_restart_time() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<2>(
              stream, this_._internal_restart_time(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:linxos_device.SystemRestartResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t SystemRestartResponse::ByteSizeLong(const MessageLite& base) {
  const SystemRestartResponse& this_ = static_cast<const SystemRestartResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t SystemRestartResponse::ByteSizeLong() const {
  const SystemRestartResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:linxos_device.SystemRestartResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    // .linxos_device.ResponseStatus status = 1;
    if ((cached_has_bits & 0x00000001U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.status_);
    }
    // int64 restart_time = 2;
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (this_._internal_restart_time() != 0) {
        total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
            this_._internal_restart_time());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void SystemRestartResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SystemRestartResponse*>(&to_msg);
  auto& from = static_cast<const SystemRestartResponse&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:linxos_device.SystemRestartResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      ABSL_DCHECK(from._impl_.status_ != nullptr);
      if (_this->_impl_.status_ == nullptr) {
        _this->_impl_.status_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.status_);
      } else {
        _this->_impl_.status_->MergeFrom(*from._impl_.status_);
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (from._internal_restart_time() != 0) {
        _this->_impl_.restart_time_ = from._impl_.restart_time_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SystemRestartResponse::CopyFrom(const SystemRestartResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:linxos_device.SystemRestartResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SystemRestartResponse::InternalSwap(SystemRestartResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SystemRestartResponse, _impl_.restart_time_)
      + sizeof(SystemRestartResponse::_impl_.restart_time_)
      - PROTOBUF_FIELD_OFFSET(SystemRestartResponse, _impl_.status_)>(
          reinterpret_cast<char*>(&_impl_.status_),
          reinterpret_cast<char*>(&other->_impl_.status_));
}

::google::protobuf::Metadata SystemRestartResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SystemWifiReconnectRequest::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<SystemWifiReconnectRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SystemWifiReconnectRequest, _impl_._has_bits_);
};

SystemWifiReconnectRequest::SystemWifiReconnectRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SystemWifiReconnectRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:linxos_device.SystemWifiReconnectRequest)
}
PROTOBUF_NDEBUG_INLINE SystemWifiReconnectRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::linxos_device::SystemWifiReconnectRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        device_id_(arena, from.device_id_),
        ssid_(arena, from.ssid_),
        password_(arena, from.password_) {}

SystemWifiReconnectRequest::SystemWifiReconnectRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const SystemWifiReconnectRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SystemWifiReconnectRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SystemWifiReconnectRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:linxos_device.SystemWifiReconnectRequest)
}
PROTOBUF_NDEBUG_INLINE SystemWifiReconnectRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        device_id_(arena),
        ssid_(arena),
        password_(arena) {}

inline void SystemWifiReconnectRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
SystemWifiReconnectRequest::~SystemWifiReconnectRequest() {
  // @@protoc_insertion_point(destructor:linxos_device.SystemWifiReconnectRequest)
  SharedDtor(*this);
}
inline void SystemWifiReconnectRequest::SharedDtor(MessageLite& self) {
  SystemWifiReconnectRequest& this_ = static_cast<SystemWifiReconnectRequest&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.device_id_.Destroy();
  this_._impl_.ssid_.Destroy();
  this_._impl_.password_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL SystemWifiReconnectRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) SystemWifiReconnectRequest(arena);
}
constexpr auto SystemWifiReconnectRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(SystemWifiReconnectRequest),
                                            alignof(SystemWifiReconnectRequest));
}
constexpr auto SystemWifiReconnectRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_SystemWifiReconnectRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &SystemWifiReconnectRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<SystemWifiReconnectRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &SystemWifiReconnectRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<SystemWifiReconnectRequest>(), &SystemWifiReconnectRequest::ByteSizeLong,
              &SystemWifiReconnectRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(SystemWifiReconnectRequest, _impl_._cached_size_),
          false,
      },
      &SystemWifiReconnectRequest::kDescriptorMethods,
      &descriptor_table_device_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull SystemWifiReconnectRequest_class_data_ =
        SystemWifiReconnectRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
SystemWifiReconnectRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&SystemWifiReconnectRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(SystemWifiReconnectRequest_class_data_.tc_table);
  return SystemWifiReconnectRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 70, 2>
SystemWifiReconnectRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SystemWifiReconnectRequest, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    SystemWifiReconnectRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::linxos_device::SystemWifiReconnectRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string device_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SystemWifiReconnectRequest, _impl_.device_id_)}},
    // string ssid = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(SystemWifiReconnectRequest, _impl_.ssid_)}},
    // string password = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 2, 0, PROTOBUF_FIELD_OFFSET(SystemWifiReconnectRequest, _impl_.password_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string device_id = 1;
    {PROTOBUF_FIELD_OFFSET(SystemWifiReconnectRequest, _impl_.device_id_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string ssid = 2;
    {PROTOBUF_FIELD_OFFSET(SystemWifiReconnectRequest, _impl_.ssid_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string password = 3;
    {PROTOBUF_FIELD_OFFSET(SystemWifiReconnectRequest, _impl_.password_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\50\11\4\10\0\0\0\0"
    "linxos_device.SystemWifiReconnectRequest"
    "device_id"
    "ssid"
    "password"
  }},
};
PROTOBUF_NOINLINE void SystemWifiReconnectRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:linxos_device.SystemWifiReconnectRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      _impl_.device_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      _impl_.ssid_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      _impl_.password_.ClearNonDefaultToEmpty();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL SystemWifiReconnectRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const SystemWifiReconnectRequest& this_ = static_cast<const SystemWifiReconnectRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL SystemWifiReconnectRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const SystemWifiReconnectRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:linxos_device.SystemWifiReconnectRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string device_id = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_device_id().empty()) {
      const ::std::string& _s = this_._internal_device_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "linxos_device.SystemWifiReconnectRequest.device_id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // string ssid = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (!this_._internal_ssid().empty()) {
      const ::std::string& _s = this_._internal_ssid();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "linxos_device.SystemWifiReconnectRequest.ssid");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  // string password = 3;
  if ((this_._impl_._has_bits_[0] & 0x00000004U) != 0) {
    if (!this_._internal_password().empty()) {
      const ::std::string& _s = this_._internal_password();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "linxos_device.SystemWifiReconnectRequest.password");
      target = stream->WriteStringMaybeAliased(3, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:linxos_device.SystemWifiReconnectRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t SystemWifiReconnectRequest::ByteSizeLong(const MessageLite& base) {
  const SystemWifiReconnectRequest& this_ = static_cast<const SystemWifiReconnectRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t SystemWifiReconnectRequest::ByteSizeLong() const {
  const SystemWifiReconnectRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:linxos_device.SystemWifiReconnectRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    // string device_id = 1;
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_device_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_device_id());
      }
    }
    // string ssid = 2;
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!this_._internal_ssid().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_ssid());
      }
    }
    // string password = 3;
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (!this_._internal_password().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_password());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void SystemWifiReconnectRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SystemWifiReconnectRequest*>(&to_msg);
  auto& from = static_cast<const SystemWifiReconnectRequest&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:linxos_device.SystemWifiReconnectRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_device_id().empty()) {
        _this->_internal_set_device_id(from._internal_device_id());
      } else {
        if (_this->_impl_.device_id_.IsDefault()) {
          _this->_internal_set_device_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!from._internal_ssid().empty()) {
        _this->_internal_set_ssid(from._internal_ssid());
      } else {
        if (_this->_impl_.ssid_.IsDefault()) {
          _this->_internal_set_ssid("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (!from._internal_password().empty()) {
        _this->_internal_set_password(from._internal_password());
      } else {
        if (_this->_impl_.password_.IsDefault()) {
          _this->_internal_set_password("");
        }
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SystemWifiReconnectRequest::CopyFrom(const SystemWifiReconnectRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:linxos_device.SystemWifiReconnectRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SystemWifiReconnectRequest::InternalSwap(SystemWifiReconnectRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.device_id_, &other->_impl_.device_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.ssid_, &other->_impl_.ssid_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.password_, &other->_impl_.password_, arena);
}

::google::protobuf::Metadata SystemWifiReconnectRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SystemWifiReconnectResponse::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<SystemWifiReconnectResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SystemWifiReconnectResponse, _impl_._has_bits_);
};

SystemWifiReconnectResponse::SystemWifiReconnectResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SystemWifiReconnectResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:linxos_device.SystemWifiReconnectResponse)
}
PROTOBUF_NDEBUG_INLINE SystemWifiReconnectResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::linxos_device::SystemWifiReconnectResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        connection_status_(arena, from.connection_status_) {}

SystemWifiReconnectResponse::SystemWifiReconnectResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const SystemWifiReconnectResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SystemWifiReconnectResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SystemWifiReconnectResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.status_ = ((cached_has_bits & 0x00000002U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.status_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:linxos_device.SystemWifiReconnectResponse)
}
PROTOBUF_NDEBUG_INLINE SystemWifiReconnectResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        connection_status_(arena) {}

inline void SystemWifiReconnectResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.status_ = {};
}
SystemWifiReconnectResponse::~SystemWifiReconnectResponse() {
  // @@protoc_insertion_point(destructor:linxos_device.SystemWifiReconnectResponse)
  SharedDtor(*this);
}
inline void SystemWifiReconnectResponse::SharedDtor(MessageLite& self) {
  SystemWifiReconnectResponse& this_ = static_cast<SystemWifiReconnectResponse&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.connection_status_.Destroy();
  delete this_._impl_.status_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL SystemWifiReconnectResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) SystemWifiReconnectResponse(arena);
}
constexpr auto SystemWifiReconnectResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(SystemWifiReconnectResponse),
                                            alignof(SystemWifiReconnectResponse));
}
constexpr auto SystemWifiReconnectResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_SystemWifiReconnectResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &SystemWifiReconnectResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<SystemWifiReconnectResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &SystemWifiReconnectResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<SystemWifiReconnectResponse>(), &SystemWifiReconnectResponse::ByteSizeLong,
              &SystemWifiReconnectResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(SystemWifiReconnectResponse, _impl_._cached_size_),
          false,
      },
      &SystemWifiReconnectResponse::kDescriptorMethods,
      &descriptor_table_device_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull SystemWifiReconnectResponse_class_data_ =
        SystemWifiReconnectResponse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
SystemWifiReconnectResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&SystemWifiReconnectResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(SystemWifiReconnectResponse_class_data_.tc_table);
  return SystemWifiReconnectResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 67, 2>
SystemWifiReconnectResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SystemWifiReconnectResponse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    SystemWifiReconnectResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::linxos_device::SystemWifiReconnectResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string connection_status = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(SystemWifiReconnectResponse, _impl_.connection_status_)}},
    // .linxos_device.ResponseStatus status = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 1, 0, PROTOBUF_FIELD_OFFSET(SystemWifiReconnectResponse, _impl_.status_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .linxos_device.ResponseStatus status = 1;
    {PROTOBUF_FIELD_OFFSET(SystemWifiReconnectResponse, _impl_.status_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string connection_status = 2;
    {PROTOBUF_FIELD_OFFSET(SystemWifiReconnectResponse, _impl_.connection_status_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::linxos_device::ResponseStatus>()},
  }},
  {{
    "\51\0\21\0\0\0\0\0"
    "linxos_device.SystemWifiReconnectResponse"
    "connection_status"
  }},
};
PROTOBUF_NOINLINE void SystemWifiReconnectResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:linxos_device.SystemWifiReconnectResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      _impl_.connection_status_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      ABSL_DCHECK(_impl_.status_ != nullptr);
      _impl_.status_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL SystemWifiReconnectResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const SystemWifiReconnectResponse& this_ = static_cast<const SystemWifiReconnectResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL SystemWifiReconnectResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const SystemWifiReconnectResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:linxos_device.SystemWifiReconnectResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .linxos_device.ResponseStatus status = 1;
  if ((cached_has_bits & 0x00000002U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.status_, this_._impl_.status_->GetCachedSize(), target,
        stream);
  }

  // string connection_status = 2;
  if ((cached_has_bits & 0x00000001U) != 0) {
    if (!this_._internal_connection_status().empty()) {
      const ::std::string& _s = this_._internal_connection_status();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "linxos_device.SystemWifiReconnectResponse.connection_status");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:linxos_device.SystemWifiReconnectResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t SystemWifiReconnectResponse::ByteSizeLong(const MessageLite& base) {
  const SystemWifiReconnectResponse& this_ = static_cast<const SystemWifiReconnectResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t SystemWifiReconnectResponse::ByteSizeLong() const {
  const SystemWifiReconnectResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:linxos_device.SystemWifiReconnectResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    // string connection_status = 2;
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_connection_status().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_connection_status());
      }
    }
    // .linxos_device.ResponseStatus status = 1;
    if ((cached_has_bits & 0x00000002U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.status_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void SystemWifiReconnectResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SystemWifiReconnectResponse*>(&to_msg);
  auto& from = static_cast<const SystemWifiReconnectResponse&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:linxos_device.SystemWifiReconnectResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_connection_status().empty()) {
        _this->_internal_set_connection_status(from._internal_connection_status());
      } else {
        if (_this->_impl_.connection_status_.IsDefault()) {
          _this->_internal_set_connection_status("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      ABSL_DCHECK(from._impl_.status_ != nullptr);
      if (_this->_impl_.status_ == nullptr) {
        _this->_impl_.status_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.status_);
      } else {
        _this->_impl_.status_->MergeFrom(*from._impl_.status_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SystemWifiReconnectResponse::CopyFrom(const SystemWifiReconnectResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:linxos_device.SystemWifiReconnectResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SystemWifiReconnectResponse::InternalSwap(SystemWifiReconnectResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.connection_status_, &other->_impl_.connection_status_, arena);
  swap(_impl_.status_, other->_impl_.status_);
}

::google::protobuf::Metadata SystemWifiReconnectResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ToolCallRequest::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<ToolCallRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ToolCallRequest, _impl_._has_bits_);
};

ToolCallRequest::ToolCallRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ToolCallRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:linxos_device.ToolCallRequest)
}
PROTOBUF_NDEBUG_INLINE ToolCallRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::linxos_device::ToolCallRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        device_id_(arena, from.device_id_),
        tool_name_(arena, from.tool_name_),
        parameters_(arena, from.parameters_),
        call_id_(arena, from.call_id_) {}

ToolCallRequest::ToolCallRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const ToolCallRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ToolCallRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ToolCallRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:linxos_device.ToolCallRequest)
}
PROTOBUF_NDEBUG_INLINE ToolCallRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        device_id_(arena),
        tool_name_(arena),
        parameters_(arena),
        call_id_(arena) {}

inline void ToolCallRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
ToolCallRequest::~ToolCallRequest() {
  // @@protoc_insertion_point(destructor:linxos_device.ToolCallRequest)
  SharedDtor(*this);
}
inline void ToolCallRequest::SharedDtor(MessageLite& self) {
  ToolCallRequest& this_ = static_cast<ToolCallRequest&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.device_id_.Destroy();
  this_._impl_.tool_name_.Destroy();
  this_._impl_.parameters_.Destroy();
  this_._impl_.call_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL ToolCallRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) ToolCallRequest(arena);
}
constexpr auto ToolCallRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(ToolCallRequest),
                                            alignof(ToolCallRequest));
}
constexpr auto ToolCallRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_ToolCallRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &ToolCallRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<ToolCallRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &ToolCallRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<ToolCallRequest>(), &ToolCallRequest::ByteSizeLong,
              &ToolCallRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(ToolCallRequest, _impl_._cached_size_),
          false,
      },
      &ToolCallRequest::kDescriptorMethods,
      &descriptor_table_device_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull ToolCallRequest_class_data_ =
        ToolCallRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
ToolCallRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&ToolCallRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(ToolCallRequest_class_data_.tc_table);
  return ToolCallRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 73, 2>
ToolCallRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ToolCallRequest, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    ToolCallRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::linxos_device::ToolCallRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string call_id = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 3, 0, PROTOBUF_FIELD_OFFSET(ToolCallRequest, _impl_.call_id_)}},
    // string device_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(ToolCallRequest, _impl_.device_id_)}},
    // string tool_name = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(ToolCallRequest, _impl_.tool_name_)}},
    // string parameters = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 2, 0, PROTOBUF_FIELD_OFFSET(ToolCallRequest, _impl_.parameters_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string device_id = 1;
    {PROTOBUF_FIELD_OFFSET(ToolCallRequest, _impl_.device_id_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string tool_name = 2;
    {PROTOBUF_FIELD_OFFSET(ToolCallRequest, _impl_.tool_name_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string parameters = 3;
    {PROTOBUF_FIELD_OFFSET(ToolCallRequest, _impl_.parameters_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string call_id = 4;
    {PROTOBUF_FIELD_OFFSET(ToolCallRequest, _impl_.call_id_), _Internal::kHasBitsOffset + 3, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\35\11\11\12\7\0\0\0"
    "linxos_device.ToolCallRequest"
    "device_id"
    "tool_name"
    "parameters"
    "call_id"
  }},
};
PROTOBUF_NOINLINE void ToolCallRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:linxos_device.ToolCallRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      _impl_.device_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      _impl_.tool_name_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      _impl_.parameters_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      _impl_.call_id_.ClearNonDefaultToEmpty();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL ToolCallRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const ToolCallRequest& this_ = static_cast<const ToolCallRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL ToolCallRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const ToolCallRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:linxos_device.ToolCallRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string device_id = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_device_id().empty()) {
      const ::std::string& _s = this_._internal_device_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "linxos_device.ToolCallRequest.device_id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // string tool_name = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (!this_._internal_tool_name().empty()) {
      const ::std::string& _s = this_._internal_tool_name();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "linxos_device.ToolCallRequest.tool_name");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  // string parameters = 3;
  if ((this_._impl_._has_bits_[0] & 0x00000004U) != 0) {
    if (!this_._internal_parameters().empty()) {
      const ::std::string& _s = this_._internal_parameters();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "linxos_device.ToolCallRequest.parameters");
      target = stream->WriteStringMaybeAliased(3, _s, target);
    }
  }

  // string call_id = 4;
  if ((this_._impl_._has_bits_[0] & 0x00000008U) != 0) {
    if (!this_._internal_call_id().empty()) {
      const ::std::string& _s = this_._internal_call_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "linxos_device.ToolCallRequest.call_id");
      target = stream->WriteStringMaybeAliased(4, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:linxos_device.ToolCallRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t ToolCallRequest::ByteSizeLong(const MessageLite& base) {
  const ToolCallRequest& this_ = static_cast<const ToolCallRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t ToolCallRequest::ByteSizeLong() const {
  const ToolCallRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:linxos_device.ToolCallRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fU) != 0) {
    // string device_id = 1;
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_device_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_device_id());
      }
    }
    // string tool_name = 2;
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!this_._internal_tool_name().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_tool_name());
      }
    }
    // string parameters = 3;
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (!this_._internal_parameters().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_parameters());
      }
    }
    // string call_id = 4;
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (!this_._internal_call_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_call_id());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void ToolCallRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ToolCallRequest*>(&to_msg);
  auto& from = static_cast<const ToolCallRequest&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:linxos_device.ToolCallRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_device_id().empty()) {
        _this->_internal_set_device_id(from._internal_device_id());
      } else {
        if (_this->_impl_.device_id_.IsDefault()) {
          _this->_internal_set_device_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!from._internal_tool_name().empty()) {
        _this->_internal_set_tool_name(from._internal_tool_name());
      } else {
        if (_this->_impl_.tool_name_.IsDefault()) {
          _this->_internal_set_tool_name("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (!from._internal_parameters().empty()) {
        _this->_internal_set_parameters(from._internal_parameters());
      } else {
        if (_this->_impl_.parameters_.IsDefault()) {
          _this->_internal_set_parameters("");
        }
      }
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (!from._internal_call_id().empty()) {
        _this->_internal_set_call_id(from._internal_call_id());
      } else {
        if (_this->_impl_.call_id_.IsDefault()) {
          _this->_internal_set_call_id("");
        }
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ToolCallRequest::CopyFrom(const ToolCallRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:linxos_device.ToolCallRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ToolCallRequest::InternalSwap(ToolCallRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.device_id_, &other->_impl_.device_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.tool_name_, &other->_impl_.tool_name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.parameters_, &other->_impl_.parameters_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.call_id_, &other->_impl_.call_id_, arena);
}

::google::protobuf::Metadata ToolCallRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ToolCallResponse::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<ToolCallResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ToolCallResponse, _impl_._has_bits_);
};

ToolCallResponse::ToolCallResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ToolCallResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:linxos_device.ToolCallResponse)
}
PROTOBUF_NDEBUG_INLINE ToolCallResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::linxos_device::ToolCallResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        result_(arena, from.result_),
        call_id_(arena, from.call_id_) {}

ToolCallResponse::ToolCallResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const ToolCallResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ToolCallResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ToolCallResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.status_ = ((cached_has_bits & 0x00000004U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.status_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:linxos_device.ToolCallResponse)
}
PROTOBUF_NDEBUG_INLINE ToolCallResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        result_(arena),
        call_id_(arena) {}

inline void ToolCallResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.status_ = {};
}
ToolCallResponse::~ToolCallResponse() {
  // @@protoc_insertion_point(destructor:linxos_device.ToolCallResponse)
  SharedDtor(*this);
}
inline void ToolCallResponse::SharedDtor(MessageLite& self) {
  ToolCallResponse& this_ = static_cast<ToolCallResponse&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.result_.Destroy();
  this_._impl_.call_id_.Destroy();
  delete this_._impl_.status_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL ToolCallResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) ToolCallResponse(arena);
}
constexpr auto ToolCallResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(ToolCallResponse),
                                            alignof(ToolCallResponse));
}
constexpr auto ToolCallResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_ToolCallResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &ToolCallResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<ToolCallResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &ToolCallResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<ToolCallResponse>(), &ToolCallResponse::ByteSizeLong,
              &ToolCallResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(ToolCallResponse, _impl_._cached_size_),
          false,
      },
      &ToolCallResponse::kDescriptorMethods,
      &descriptor_table_device_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull ToolCallResponse_class_data_ =
        ToolCallResponse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
ToolCallResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&ToolCallResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(ToolCallResponse_class_data_.tc_table);
  return ToolCallResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 52, 2>
ToolCallResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ToolCallResponse, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    ToolCallResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::linxos_device::ToolCallResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .linxos_device.ResponseStatus status = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 2, 0, PROTOBUF_FIELD_OFFSET(ToolCallResponse, _impl_.status_)}},
    // string result = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(ToolCallResponse, _impl_.result_)}},
    // string call_id = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 1, 0, PROTOBUF_FIELD_OFFSET(ToolCallResponse, _impl_.call_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .linxos_device.ResponseStatus status = 1;
    {PROTOBUF_FIELD_OFFSET(ToolCallResponse, _impl_.status_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string result = 2;
    {PROTOBUF_FIELD_OFFSET(ToolCallResponse, _impl_.result_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string call_id = 3;
    {PROTOBUF_FIELD_OFFSET(ToolCallResponse, _impl_.call_id_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::linxos_device::ResponseStatus>()},
  }},
  {{
    "\36\0\6\7\0\0\0\0"
    "linxos_device.ToolCallResponse"
    "result"
    "call_id"
  }},
};
PROTOBUF_NOINLINE void ToolCallResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:linxos_device.ToolCallResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      _impl_.result_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      _impl_.call_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      ABSL_DCHECK(_impl_.status_ != nullptr);
      _impl_.status_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL ToolCallResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const ToolCallResponse& this_ = static_cast<const ToolCallResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL ToolCallResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const ToolCallResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:linxos_device.ToolCallResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .linxos_device.ResponseStatus status = 1;
  if ((cached_has_bits & 0x00000004U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.status_, this_._impl_.status_->GetCachedSize(), target,
        stream);
  }

  // string result = 2;
  if ((cached_has_bits & 0x00000001U) != 0) {
    if (!this_._internal_result().empty()) {
      const ::std::string& _s = this_._internal_result();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "linxos_device.ToolCallResponse.result");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  // string call_id = 3;
  if ((cached_has_bits & 0x00000002U) != 0) {
    if (!this_._internal_call_id().empty()) {
      const ::std::string& _s = this_._internal_call_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "linxos_device.ToolCallResponse.call_id");
      target = stream->WriteStringMaybeAliased(3, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:linxos_device.ToolCallResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t ToolCallResponse::ByteSizeLong(const MessageLite& base) {
  const ToolCallResponse& this_ = static_cast<const ToolCallResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t ToolCallResponse::ByteSizeLong() const {
  const ToolCallResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:linxos_device.ToolCallResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    // string result = 2;
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_result().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_result());
      }
    }
    // string call_id = 3;
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!this_._internal_call_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_call_id());
      }
    }
    // .linxos_device.ResponseStatus status = 1;
    if ((cached_has_bits & 0x00000004U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.status_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void ToolCallResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ToolCallResponse*>(&to_msg);
  auto& from = static_cast<const ToolCallResponse&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:linxos_device.ToolCallResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_result().empty()) {
        _this->_internal_set_result(from._internal_result());
      } else {
        if (_this->_impl_.result_.IsDefault()) {
          _this->_internal_set_result("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!from._internal_call_id().empty()) {
        _this->_internal_set_call_id(from._internal_call_id());
      } else {
        if (_this->_impl_.call_id_.IsDefault()) {
          _this->_internal_set_call_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      ABSL_DCHECK(from._impl_.status_ != nullptr);
      if (_this->_impl_.status_ == nullptr) {
        _this->_impl_.status_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.status_);
      } else {
        _this->_impl_.status_->MergeFrom(*from._impl_.status_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ToolCallResponse::CopyFrom(const ToolCallResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:linxos_device.ToolCallResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ToolCallResponse::InternalSwap(ToolCallResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.result_, &other->_impl_.result_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.call_id_, &other->_impl_.call_id_, arena);
  swap(_impl_.status_, other->_impl_.status_);
}

::google::protobuf::Metadata ToolCallResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace linxos_device
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ [[maybe_unused]] =
        (::_pbi::AddDescriptors(&descriptor_table_device_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
