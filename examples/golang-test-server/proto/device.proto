syntax = "proto3";

package linxos_device;

option go_package = "golang-test-server/proto";

// 通用响应状态
message ResponseStatus {
  bool success = 1;
  string message = 2;
  int32 error_code = 3;
}

// 设备信息
message DeviceInfo {
  string device_id = 1;
  string device_name = 2;
  string device_type = 3;
  string firmware_version = 4;
  string ip_address = 5;
  int32 port = 6;
  map<string, string> capabilities = 7;
  int64 last_heartbeat = 8;
}

// 设备注册请求
message RegisterDeviceRequest {
  DeviceInfo device_info = 1;
  repeated string available_tools = 2;
}

// 设备注册响应
message RegisterDeviceResponse {
  ResponseStatus status = 1;
  string session_id = 2;
  int32 heartbeat_interval = 3;
}

// 心跳请求
message HeartbeatRequest {
  string device_id = 1;
  string session_id = 2;
  map<string, string> status_info = 3;
}

// 心跳响应
message HeartbeatResponse {
  ResponseStatus status = 1;
  bool keep_alive = 2;
}

// 语音播放请求
message VoiceSpeakRequest {
  string device_id = 1;
  string text = 2;
  float speed = 3;
  int32 volume = 4;
  string voice_type = 5;
}

// 语音播放响应
message VoiceSpeakResponse {
  ResponseStatus status = 1;
  float duration = 2;
  string audio_id = 3;
}

// 音量控制请求
message VoiceVolumeRequest {
  string device_id = 1;
  int32 volume = 2; // -1 表示获取当前音量
}

// 音量控制响应
message VoiceVolumeResponse {
  ResponseStatus status = 1;
  int32 current_volume = 2;
}

// 表情显示请求
message DisplayExpressionRequest {
  string device_id = 1;
  string expression = 2;
  int32 duration = 3;
  int32 intensity = 4;
}

// 表情显示响应
message DisplayExpressionResponse {
  ResponseStatus status = 1;
}

// 文本显示请求
message DisplayTextRequest {
  string device_id = 1;
  string text = 2;
  int32 duration = 3;
  string font_size = 4;
  string color = 5;
}

// 文本显示响应
message DisplayTextResponse {
  ResponseStatus status = 1;
}

// 显示亮度请求
message DisplayBrightnessRequest {
  string device_id = 1;
  int32 brightness = 2; // -1 表示获取当前亮度
}

// 显示亮度响应
message DisplayBrightnessResponse {
  ResponseStatus status = 1;
  int32 current_brightness = 2;
}

// 灯光控制请求
message LightControlRequest {
  string device_id = 1;
  int32 red = 2;
  int32 green = 3;
  int32 blue = 4;
  int32 brightness = 5;
  int32 duration = 6;
}

// 灯光控制响应
message LightControlResponse {
  ResponseStatus status = 1;
}

// 灯光模式请求
message LightModeRequest {
  string device_id = 1;
  string mode = 2; // solid, blink, fade, rainbow, etc.
  int32 speed = 3;
  repeated int32 colors = 4; // RGB values
}

// 灯光模式响应
message LightModeResponse {
  ResponseStatus status = 1;
}

// 音频播放请求
message AudioPlayRequest {
  string device_id = 1;
  string file_path = 2;
  float volume = 3;
  bool loop = 4;
}

// 音频播放响应
message AudioPlayResponse {
  ResponseStatus status = 1;
  string audio_id = 2;
  float duration = 3;
}

// 音频录制请求
message AudioRecordRequest {
  string device_id = 1;
  int32 duration = 2;
  string format = 3;
  int32 sample_rate = 4;
}

// 音频录制响应
message AudioRecordResponse {
  ResponseStatus status = 1;
  string record_id = 2;
  string file_path = 3;
}

// 音频停止请求
message AudioStopRequest {
  string device_id = 1;
  string audio_id = 2;
}

// 音频停止响应
message AudioStopResponse {
  ResponseStatus status = 1;
}

// 系统信息请求
message SystemInfoRequest {
  string device_id = 1;
}

// 系统信息响应
message SystemInfoResponse {
  ResponseStatus status = 1;
  float cpu_usage = 2;
  float memory_usage = 3;
  float temperature = 4;
  int64 uptime = 5;
  string wifi_status = 6;
  int64 free_heap = 7;
  map<string, string> additional_info = 8;
}

// 系统重启请求
message SystemRestartRequest {
  string device_id = 1;
  int32 delay = 2;
  string reason = 3;
}

// 系统重启响应
message SystemRestartResponse {
  ResponseStatus status = 1;
  int64 restart_time = 2;
}

// WiFi重连请求
message SystemWifiReconnectRequest {
  string device_id = 1;
  string ssid = 2;
  string password = 3;
}

// WiFi重连响应
message SystemWifiReconnectResponse {
  ResponseStatus status = 1;
  string connection_status = 2;
}

// 工具调用请求
message ToolCallRequest {
  string device_id = 1;
  string tool_name = 2;
  string parameters = 3; // JSON格式的参数
  string call_id = 4;
}

// 工具调用响应
message ToolCallResponse {
  ResponseStatus status = 1;
  string result = 2; // JSON格式的结果
  string call_id = 3;
}

// LinxOS 设备服务
service LinxOSDeviceService {
  // 设备管理
  rpc RegisterDevice(RegisterDeviceRequest) returns (RegisterDeviceResponse);
  rpc Heartbeat(HeartbeatRequest) returns (HeartbeatResponse);
  
  // 语音交互
  rpc VoiceSpeak(VoiceSpeakRequest) returns (VoiceSpeakResponse);
  rpc VoiceVolume(VoiceVolumeRequest) returns (VoiceVolumeResponse);
  
  // 显示控制
  rpc DisplayExpression(DisplayExpressionRequest) returns (DisplayExpressionResponse);
  rpc DisplayText(DisplayTextRequest) returns (DisplayTextResponse);
  rpc DisplayBrightness(DisplayBrightnessRequest) returns (DisplayBrightnessResponse);
  
  // 灯光控制
  rpc LightControl(LightControlRequest) returns (LightControlResponse);
  rpc LightMode(LightModeRequest) returns (LightModeResponse);
  
  // 音频处理
  rpc AudioPlay(AudioPlayRequest) returns (AudioPlayResponse);
  rpc AudioRecord(AudioRecordRequest) returns (AudioRecordResponse);
  rpc AudioStop(AudioStopRequest) returns (AudioStopResponse);
  
  // 系统管理
  rpc SystemInfo(SystemInfoRequest) returns (SystemInfoResponse);
  rpc SystemRestart(SystemRestartRequest) returns (SystemRestartResponse);
  rpc SystemWifiReconnect(SystemWifiReconnectRequest) returns (SystemWifiReconnectResponse);
  
  // 通用工具调用
  rpc CallTool(ToolCallRequest) returns (ToolCallResponse);
}